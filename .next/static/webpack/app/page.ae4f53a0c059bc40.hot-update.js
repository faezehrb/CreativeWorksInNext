/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Ffaezeh%2FDesktop%2Fmyproject%2FCreativeWorksInNext%2Fapp%2Fpage.tsx&server=false!":
/*!**********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Ffaezeh%2FDesktop%2Fmyproject%2FCreativeWorksInNext%2Fapp%2Fpage.tsx&server=false! ***!
  \**********************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/page.tsx */ \"(app-pages-browser)/./app/page.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lMkZVc2VycyUyRmZhZXplaCUyRkRlc2t0b3AlMkZteXByb2plY3QlMkZDcmVhdGl2ZVdvcmtzSW5OZXh0JTJGYXBwJTJGcGFnZS50c3gmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvP2U2NGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvZmFlemVoL0Rlc2t0b3AvbXlwcm9qZWN0L0NyZWF0aXZlV29ya3NJbk5leHQvYXBwL3BhZ2UudHN4XCIpIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Ffaezeh%2FDesktop%2Fmyproject%2FCreativeWorksInNext%2Fapp%2Fpage.tsx&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@gsap/react/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/@gsap/react/src/index.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useGSAP: function() { return /* binding */ useGSAP; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gsap */ \"(app-pages-browser)/./node_modules/gsap/index.js\");\n/*!\n * @gsap/react 2.1.0\n * https://gsap.com\n *\n * Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/ /* eslint-disable */ var _s = $RefreshSig$();\n\n\nlet useIsomorphicLayoutEffect =  true ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : 0, isConfig = (value)=>value && !Array.isArray(value) && typeof value === \"object\", emptyArray = [], defaultConfig = {}, _gsap = gsap__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; // accommodates situations where different versions of GSAP may be loaded, so a user can gsap.registerPlugin(useGSAP);\nconst useGSAP = function(callback) {\n    let dependencies = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : emptyArray;\n    _s();\n    let config = defaultConfig;\n    if (isConfig(callback)) {\n        config = callback;\n        callback = null;\n        dependencies = \"dependencies\" in config ? config.dependencies : emptyArray;\n    } else if (isConfig(dependencies)) {\n        config = dependencies;\n        dependencies = \"dependencies\" in config ? config.dependencies : emptyArray;\n    }\n    let { scope, revertOnUpdate } = config, [mounted, setMounted] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    callback && typeof callback !== \"function\" && console.warn(\"First parameter must be a function or config object\");\n    const context = _gsap.context(()=>{}, scope), contextSafe = (func)=>context.add(null, func), cleanup = ()=>context.revert(), deferCleanup = dependencies && dependencies.length && !revertOnUpdate;\n    useIsomorphicLayoutEffect(()=>{\n        callback && context.add(callback, scope);\n        if (!deferCleanup || !mounted) {\n            return cleanup;\n        }\n    }, dependencies);\n    deferCleanup && useIsomorphicLayoutEffect(()=>{\n        setMounted(true);\n        return cleanup;\n    }, emptyArray);\n    return {\n        context,\n        contextSafe\n    };\n};\n_s(useGSAP, \"Egwz2kWLfz9zCmY/2Z3QTLhoGYM=\", false, function() {\n    return [\n        useIsomorphicLayoutEffect,\n        useIsomorphicLayoutEffect\n    ];\n});\nuseGSAP.register = (core)=>{\n    _gsap = core;\n};\nuseGSAP.headless = true; // doesn't require the window to be registered.\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AZ3NhcC9yZWFjdC9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7OztBQVFBLEdBQ0Esa0JBQWtCO0FBQzJDO0FBQ3JDO0FBRXhCLElBQUlJLDRCQUE0QixLQUE2QixHQUFHSCxrREFBZUEsR0FBR0QsQ0FBU0EsRUFDdkZLLFdBQVdDLENBQUFBLFFBQVNBLFNBQVMsQ0FBQ0MsTUFBTUMsT0FBTyxDQUFDRixVQUFVLE9BQU9BLFVBQVcsVUFDeEVHLGFBQWEsRUFBRSxFQUNmQyxnQkFBZ0IsQ0FBQyxHQUNqQkMsUUFBUVIsNENBQUlBLEVBQUUsc0hBQXNIO0FBRWpJLE1BQU1TLFVBQVUsU0FBQ0M7UUFBVUMsZ0ZBQWVMOztJQUMvQyxJQUFJTSxTQUFTTDtJQUNiLElBQUlMLFNBQVNRLFdBQVc7UUFDdEJFLFNBQVNGO1FBQ1RBLFdBQVc7UUFDWEMsZUFBZSxrQkFBa0JDLFNBQVNBLE9BQU9ELFlBQVksR0FBR0w7SUFDbEUsT0FBTyxJQUFJSixTQUFTUyxlQUFlO1FBQ2pDQyxTQUFTRDtRQUNUQSxlQUFlLGtCQUFrQkMsU0FBU0EsT0FBT0QsWUFBWSxHQUFHTDtJQUNsRTtJQUNBLElBQUksRUFBRU8sS0FBSyxFQUFFQyxjQUFjLEVBQUUsR0FBR0YsUUFDNUIsQ0FBQ0csU0FBU0MsV0FBVyxHQUFHakIsK0NBQVFBLENBQUM7SUFDcENXLFlBQVksT0FBT0EsYUFBYSxjQUFlTyxRQUFRQyxJQUFJLENBQUM7SUFDN0QsTUFBTUMsVUFBVVgsTUFBTVcsT0FBTyxDQUFDLEtBQVEsR0FBR04sUUFDbkNPLGNBQWMsQ0FBQ0MsT0FBU0YsUUFBUUcsR0FBRyxDQUFDLE1BQU1ELE9BQzFDRSxVQUFVLElBQU1KLFFBQVFLLE1BQU0sSUFDOUJDLGVBQWVkLGdCQUFnQkEsYUFBYWUsTUFBTSxJQUFJLENBQUNaO0lBQzdEYiwwQkFBMEI7UUFDeEJTLFlBQVlTLFFBQVFHLEdBQUcsQ0FBQ1osVUFBVUc7UUFDbEMsSUFBSSxDQUFDWSxnQkFBZ0IsQ0FBQ1YsU0FBUztZQUM3QixPQUFPUTtRQUNUO0lBQ0YsR0FBR1o7SUFDSGMsZ0JBQWdCeEIsMEJBQTBCO1FBQ3RDZSxXQUFXO1FBQ1gsT0FBT087SUFDVCxHQUFHakI7SUFDTCxPQUFPO1FBQUVhO1FBQVNDO0lBQVk7QUFDaEMsRUFBRTtHQTVCV1g7O1FBaUJYUjtRQU1nQkE7OztBQU1sQlEsUUFBUWtCLFFBQVEsR0FBR0MsQ0FBQUE7SUFBVXBCLFFBQVFvQjtBQUFNO0FBQzNDbkIsUUFBUW9CLFFBQVEsR0FBRyxNQUFNLCtDQUErQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGdzYXAvcmVhY3Qvc3JjL2luZGV4LmpzPzkwODMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAZ3NhcC9yZWFjdCAyLjEuMFxuICogaHR0cHM6Ly9nc2FwLmNvbVxuICpcbiAqIENvcHlyaWdodCAyMDA4LTIwMjQsIEdyZWVuU29jay4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIFN1YmplY3QgdG8gdGhlIHRlcm1zIGF0IGh0dHBzOi8vZ3NhcC5jb20vc3RhbmRhcmQtbGljZW5zZSBvciBmb3JcbiAqIENsdWIgR1NBUCBtZW1iZXJzLCB0aGUgYWdyZWVtZW50IGlzc3VlZCB3aXRoIHRoYXQgbWVtYmVyc2hpcC5cbiAqIEBhdXRob3I6IEphY2sgRG95bGUsIGphY2tAZ3JlZW5zb2NrLmNvbVxuKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZUxheW91dEVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBnc2FwIGZyb20gXCJnc2FwXCI7XG5cbmxldCB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0ID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHVzZUxheW91dEVmZmVjdCA6IHVzZUVmZmVjdCxcbiAgICBpc0NvbmZpZyA9IHZhbHVlID0+IHZhbHVlICYmICFBcnJheS5pc0FycmF5KHZhbHVlKSAmJiB0eXBlb2YodmFsdWUpID09PSBcIm9iamVjdFwiLFxuICAgIGVtcHR5QXJyYXkgPSBbXSxcbiAgICBkZWZhdWx0Q29uZmlnID0ge30sXG4gICAgX2dzYXAgPSBnc2FwOyAvLyBhY2NvbW1vZGF0ZXMgc2l0dWF0aW9ucyB3aGVyZSBkaWZmZXJlbnQgdmVyc2lvbnMgb2YgR1NBUCBtYXkgYmUgbG9hZGVkLCBzbyBhIHVzZXIgY2FuIGdzYXAucmVnaXN0ZXJQbHVnaW4odXNlR1NBUCk7XG5cbmV4cG9ydCBjb25zdCB1c2VHU0FQID0gKGNhbGxiYWNrLCBkZXBlbmRlbmNpZXMgPSBlbXB0eUFycmF5KSA9PiB7XG4gIGxldCBjb25maWcgPSBkZWZhdWx0Q29uZmlnO1xuICBpZiAoaXNDb25maWcoY2FsbGJhY2spKSB7XG4gICAgY29uZmlnID0gY2FsbGJhY2s7XG4gICAgY2FsbGJhY2sgPSBudWxsO1xuICAgIGRlcGVuZGVuY2llcyA9IFwiZGVwZW5kZW5jaWVzXCIgaW4gY29uZmlnID8gY29uZmlnLmRlcGVuZGVuY2llcyA6IGVtcHR5QXJyYXk7XG4gIH0gZWxzZSBpZiAoaXNDb25maWcoZGVwZW5kZW5jaWVzKSkge1xuICAgIGNvbmZpZyA9IGRlcGVuZGVuY2llcztcbiAgICBkZXBlbmRlbmNpZXMgPSBcImRlcGVuZGVuY2llc1wiIGluIGNvbmZpZyA/IGNvbmZpZy5kZXBlbmRlbmNpZXMgOiBlbXB0eUFycmF5O1xuICB9XG4gIGxldCB7IHNjb3BlLCByZXZlcnRPblVwZGF0ZSB9ID0gY29uZmlnLFxuICAgICAgW21vdW50ZWQsIHNldE1vdW50ZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAoY2FsbGJhY2sgJiYgdHlwZW9mIGNhbGxiYWNrICE9PSBcImZ1bmN0aW9uXCIpICYmIGNvbnNvbGUud2FybihcIkZpcnN0IHBhcmFtZXRlciBtdXN0IGJlIGEgZnVuY3Rpb24gb3IgY29uZmlnIG9iamVjdFwiKTtcbiAgY29uc3QgY29udGV4dCA9IF9nc2FwLmNvbnRleHQoKCkgPT4geyB9LCBzY29wZSksXG4gICAgICAgIGNvbnRleHRTYWZlID0gKGZ1bmMpID0+IGNvbnRleHQuYWRkKG51bGwsIGZ1bmMpLFxuICAgICAgICBjbGVhbnVwID0gKCkgPT4gY29udGV4dC5yZXZlcnQoKSxcbiAgICAgICAgZGVmZXJDbGVhbnVwID0gZGVwZW5kZW5jaWVzICYmIGRlcGVuZGVuY2llcy5sZW5ndGggJiYgIXJldmVydE9uVXBkYXRlO1xuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICBjYWxsYmFjayAmJiBjb250ZXh0LmFkZChjYWxsYmFjaywgc2NvcGUpO1xuICAgIGlmICghZGVmZXJDbGVhbnVwIHx8ICFtb3VudGVkKSB7IC8vIFJlYWN0IHJlbmRlcnMgYm90dG9tLXVwLCB0aHVzIHRoZXJlIGNvdWxkIGJlIGhvb2tzIHdpdGggZGVwZW5kZW5jaWVzIHRoYXQgcnVuIEJFRk9SRSB0aGUgY29tcG9uZW50IG1vdW50cywgdGh1cyBjbGVhbnVwIHdvdWxkbid0IG9jY3VyIHNpbmNlIGEgaG9vayB3aXRoIGFuIGVtcHR5IGRlcGVuZGVuY3kgQXJyYXkgd291bGQgb25seSBydW4gb25jZSB0aGUgY29tcG9uZW50IG1vdW50cy5cbiAgICAgIHJldHVybiBjbGVhbnVwO1xuICAgIH1cbiAgfSwgZGVwZW5kZW5jaWVzKTtcbiAgZGVmZXJDbGVhbnVwICYmIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgICAgc2V0TW91bnRlZCh0cnVlKTtcbiAgICAgIHJldHVybiBjbGVhbnVwO1xuICAgIH0sIGVtcHR5QXJyYXkpO1xuICByZXR1cm4geyBjb250ZXh0LCBjb250ZXh0U2FmZSB9O1xufTtcbnVzZUdTQVAucmVnaXN0ZXIgPSBjb3JlID0+IHsgX2dzYXAgPSBjb3JlOyB9O1xudXNlR1NBUC5oZWFkbGVzcyA9IHRydWU7IC8vIGRvZXNuJ3QgcmVxdWlyZSB0aGUgd2luZG93IHRvIGJlIHJlZ2lzdGVyZWQuXG4iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwidXNlTGF5b3V0RWZmZWN0IiwidXNlU3RhdGUiLCJnc2FwIiwidXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCIsImlzQ29uZmlnIiwidmFsdWUiLCJBcnJheSIsImlzQXJyYXkiLCJlbXB0eUFycmF5IiwiZGVmYXVsdENvbmZpZyIsIl9nc2FwIiwidXNlR1NBUCIsImNhbGxiYWNrIiwiZGVwZW5kZW5jaWVzIiwiY29uZmlnIiwic2NvcGUiLCJyZXZlcnRPblVwZGF0ZSIsIm1vdW50ZWQiLCJzZXRNb3VudGVkIiwiY29uc29sZSIsIndhcm4iLCJjb250ZXh0IiwiY29udGV4dFNhZmUiLCJmdW5jIiwiYWRkIiwiY2xlYW51cCIsInJldmVydCIsImRlZmVyQ2xlYW51cCIsImxlbmd0aCIsInJlZ2lzdGVyIiwiY29yZSIsImhlYWRsZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@gsap/react/src/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/gsap-trial/ScrollSmoother.js":
/*!***************************************************!*\
  !*** ./node_modules/gsap-trial/ScrollSmoother.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ScrollSmoother: function() { return /* binding */ x; }\n/* harmony export */ });\n/*!\n * ScrollSmoother 3.12.5\n * https://gsap.com\n * \n * @license Copyright 2024, GreenSock. All rights reserved.\n * *** DO NOT DEPLOY THIS FILE ***\n * This is a trial version that only works locally and on domains like codepen.io and codesandbox.io.\n * Loading it on an unauthorized domain violates the license and will cause a redirect.\n * Get the unrestricted file by joining Club GSAP at https://gsap.com/pricing\n * @author: Jack Doyle, jack@greensock.com\n */ let e, t, r, o, s, i, n, a, l, c, d, h, f, g, p, u = ()=>\"undefined\" != \"object\", m = ()=>e || u() && (e = window.gsap) && e.registerPlugin && e, v = function() {\n    return String.fromCharCode.apply(null, arguments);\n}, y = v(103, 114, 101, 101, 110, 115, 111, 99, 107, 46, 99, 111, 109), w = v(103, 115, 97, 112, 46, 99, 111, 109), b = /^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}:?\\d*$/, S = (function(t) {\n    var r = \"undefined\" != \"object\", o = 0 === (r ? window.location.href : \"\").indexOf(v(102, 105, 108, 101, 58, 47, 47)) || -1 !== t.indexOf(v(108, 111, 99, 97, 108, 104, 111, 115, 116)) || b.test(t) || (r ? window.location.hostname : \"\").split(\".\").pop() === v(108, 111, 99, 97, 108), s = [\n        y,\n        w,\n        v(99, 111, 100, 101, 112, 101, 110, 46, 105, 111),\n        v(99, 111, 100, 101, 112, 101, 110, 46, 112, 108, 117, 109, 98, 105, 110, 103),\n        v(99, 111, 100, 101, 112, 101, 110, 46, 100, 101, 118),\n        v(99, 111, 100, 101, 112, 101, 110, 46, 97, 112, 112),\n        v(99, 111, 100, 101, 112, 101, 110, 46, 119, 101, 98, 115, 105, 116, 101),\n        v(112, 101, 110, 115, 46, 99, 108, 111, 117, 100),\n        v(99, 115, 115, 45, 116, 114, 105, 99, 107, 115, 46, 99, 111, 109),\n        v(99, 100, 112, 110, 46, 105, 111),\n        v(112, 101, 110, 115, 46, 105, 111),\n        v(103, 97, 110, 110, 111, 110, 46, 116, 118),\n        v(99, 111, 100, 101, 99, 97, 110, 121, 111, 110, 46, 110, 101, 116),\n        v(116, 104, 101, 109, 101, 102, 111, 114, 101, 115, 116, 46, 110, 101, 116),\n        v(99, 101, 114, 101, 98, 114, 97, 120, 46, 99, 111, 46, 117, 107),\n        v(116, 121, 109, 112, 97, 110, 117, 115, 46, 110, 101, 116),\n        v(116, 119, 101, 101, 110, 109, 97, 120, 46, 99, 111, 109),\n        v(112, 108, 110, 107, 114, 46, 99, 111),\n        v(104, 111, 116, 106, 97, 114, 46, 99, 111, 109),\n        v(119, 101, 98, 112, 97, 99, 107, 98, 105, 110, 46, 99, 111, 109),\n        v(97, 114, 99, 104, 105, 118, 101, 46, 111, 114, 103),\n        v(99, 111, 100, 101, 115, 97, 110, 100, 98, 111, 120, 46, 105, 111),\n        v(99, 115, 98, 46, 97, 112, 112),\n        v(115, 116, 97, 99, 107, 98, 108, 105, 116, 122, 46, 99, 111, 109),\n        v(115, 116, 97, 99, 107, 98, 108, 105, 116, 122, 46, 105, 111),\n        v(99, 111, 100, 105, 101, 114, 46, 105, 111),\n        v(109, 111, 116, 105, 111, 110, 116, 114, 105, 99, 107, 115, 46, 99, 111, 109),\n        v(115, 116, 97, 99, 107, 111, 118, 101, 114, 102, 108, 111, 119, 46, 99, 111, 109),\n        v(115, 116, 97, 99, 107, 101, 120, 99, 104, 97, 110, 103, 101, 46, 99, 111, 109),\n        v(115, 116, 117, 100, 105, 111, 102, 114, 101, 105, 103, 104, 116, 46, 99, 111, 109),\n        v(119, 101, 98, 99, 111, 110, 116, 97, 105, 110, 101, 114, 46, 105, 111),\n        v(106, 115, 102, 105, 100, 100, 108, 101, 46, 110, 101, 116)\n    ], i = function() {\n        if (r) if (\"loading\" === document.readyState || \"interactive\" === document.readyState) document.addEventListener(\"readystatechange\", i);\n        else {\n            document.removeEventListener(\"readystatechange\", i);\n            var t = \"object\" == typeof e ? e : r && window.gsap;\n            r && window.console && !window._gsapWarned && \"object\" == typeof t && !1 !== t.config().trialWarn && (console.log(v(37, 99, 87, 97, 114, 110, 105, 110, 103), v(102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 51, 48, 112, 120, 59, 99, 111, 108, 111, 114, 58, 114, 101, 100, 59)), console.log(v(65, 32, 116, 114, 105, 97, 108, 32, 118, 101, 114, 115, 105, 111, 110, 32, 111, 102, 32) + \"ScrollSmoother\" + v(32, 105, 115, 32, 108, 111, 97, 100, 101, 100, 32, 116, 104, 97, 116, 32, 111, 110, 108, 121, 32, 119, 111, 114, 107, 115, 32, 108, 111, 99, 97, 108, 108, 121, 32, 97, 110, 100, 32, 111, 110, 32, 100, 111, 109, 97, 105, 110, 115, 32, 108, 105, 107, 101, 32, 99, 111, 100, 101, 112, 101, 110, 46, 105, 111, 32, 97, 110, 100, 32, 99, 111, 100, 101, 115, 97, 110, 100, 98, 111, 120, 46, 105, 111, 46, 32, 42, 42, 42, 32, 68, 79, 32, 78, 79, 84, 32, 68, 69, 80, 76, 79, 89, 32, 84, 72, 73, 83, 32, 70, 73, 76, 69, 32, 42, 42, 42, 32, 76, 111, 97, 100, 105, 110, 103, 32, 105, 116, 32, 111, 110, 32, 97, 110, 32, 117, 110, 97, 117, 116, 104, 111, 114, 105, 122, 101, 100, 32, 115, 105, 116, 101, 32, 118, 105, 111, 108, 97, 116, 101, 115, 32, 116, 104, 101, 32, 108, 105, 99, 101, 110, 115, 101, 32, 97, 110, 100, 32, 119, 105, 108, 108, 32, 99, 97, 117, 115, 101, 32, 97, 32, 114, 101, 100, 105, 114, 101, 99, 116, 46, 32, 80, 108, 101, 97, 115, 101, 32, 106, 111, 105, 110, 32, 67, 108, 117, 98, 32, 71, 114, 101, 101, 110, 83, 111, 99, 107, 32, 116, 111, 32, 103, 101, 116, 32, 102, 117, 108, 108, 32, 97, 99, 99, 101, 115, 115, 32, 116, 111, 32, 116, 104, 101, 32, 98, 111, 110, 117, 115, 32, 112, 108, 117, 103, 105, 110, 115, 32, 116, 104, 97, 116, 32, 98, 111, 111, 115, 116, 32, 121, 111, 117, 114, 32, 97, 110, 105, 109, 97, 116, 105, 111, 110, 32, 115, 117, 112, 101, 114, 112, 111, 119, 101, 114, 115, 46, 32, 68, 105, 115, 97, 98, 108, 101, 32, 116, 104, 105, 115, 32, 119, 97, 114, 110, 105, 110, 103, 32, 119, 105, 116, 104, 32, 103, 115, 97, 112, 46, 99, 111, 110, 102, 105, 103, 40, 123, 116, 114, 105, 97, 108, 87, 97, 114, 110, 58, 32, 102, 97, 108, 115, 101, 125, 41, 59)), console.log(v(37, 99, 71, 101, 116, 32, 117, 110, 114, 101, 115, 116, 114, 105, 99, 116, 101, 100, 32, 102, 105, 108, 101, 115, 32, 97, 116, 32, 104, 116, 116, 112, 115, 58, 47, 47, 103, 114, 101, 101, 110, 115, 111, 99, 107, 46, 99, 111, 109, 47, 99, 108, 117, 98), v(102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 49, 54, 112, 120, 59, 99, 111, 108, 111, 114, 58, 35, 52, 101, 57, 56, 49, 53)), window._gsapWarned = 1);\n        }\n    }, n = s.length;\n    for(setTimeout(i, 50); --n > -1;)if (-1 !== t.indexOf(s[n])) return !0;\n    o || setTimeout(function() {\n        r && (window.location.href = v(104, 116, 116, 112, 115, 58, 47, 47) + y + v(47, 114, 101, 113, 117, 105, 114, 101, 115, 45, 109, 101, 109, 98, 101, 114, 115, 104, 105, 112, 47) + \"?plugin=ScrollSmoother&source=trial\");\n    }, 4e3);\n}( true ? window.location.host : 0), (e)=>l.maxScroll(e || r)), T = (e)=>{\n    let t = o.querySelector(\".ScrollSmoother-wrapper\");\n    return t || (t = o.createElement(\"div\"), t.classList.add(\"ScrollSmoother-wrapper\"), e.parentNode.insertBefore(t, e), t.appendChild(e)), t;\n};\nclass x {\n    get progress() {\n        return this.scrollTrigger ? this.scrollTrigger.animation._time / 100 : 0;\n    }\n    static register(v) {\n        return t || (e = v || m(), u() && window.document && (r = window, o = document, s = o.documentElement, i = o.body), e && (n = e.utils.toArray, a = e.utils.clamp, d = e.parseEase(\"expo\"), g = e.core.context || function() {}, l = e.core.globals().ScrollTrigger, e.core.globals(\"ScrollSmoother\", x), i && l && (p = e.delayedCall(.2, ()=>l.isRefreshing || c && c.refresh()).pause(), h = l.core._getVelocityProp, f = l.core._inputObserver, x.refresh = l.refresh, t = 1))), t;\n    }\n    constructor(u){\n        t || x.register(e) || console.warn(\"Please gsap.registerPlugin(ScrollSmoother)\"), u = this.vars = u || {}, c && c.kill(), c = this, g(this);\n        let m, v, y, w, b, C, _, E, P, R, k, A, N, M, z, F, { smoothTouch: L, onUpdate: B, onStop: H, smooth: O, onFocusIn: I, normalizeScroll: U, wholePixels: q } = u, V = this, W = u.effectsPrefix || \"\", D = l.getScrollFunc(r), j = 1 === l.isTouch ? !0 === L ? .8 : parseFloat(L) || 0 : 0 === O || !1 === O ? 0 : parseFloat(O) || .8, Y = j && +u.speed || 1, K = 0, $ = 0, G = 1, J = h(0), Q = ()=>J.update(-K), X = {\n            y: 0\n        }, Z = ()=>m.style.overflow = \"visible\", ee = (e)=>{\n            e.update();\n            let t = e.getTween();\n            t && (t.pause(), t._time = t._dur, t._tTime = t._tDur), z = !1, e.animation.progress(e.progress, !0);\n        }, te = (e, t)=>{\n            (e !== K && !R || t) && (q && (e = Math.round(e)), j && (m.style.transform = \"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, \" + e + \", 0, 1)\", m._gsap.y = e + \"px\"), $ = e - K, K = e, l.isUpdating || x.isRefreshing || l.update());\n        }, re = function(e) {\n            return arguments.length ? (e < 0 && (e = 0), X.y = -e, z = !0, R ? K = -e : te(-e), l.isRefreshing ? w.update() : D(e / Y), this) : -K;\n        }, oe = \"undefined\" != typeof ResizeObserver && !1 !== u.autoResize && new ResizeObserver(()=>{\n            if (!l.isRefreshing) {\n                let e = S(v) * Y;\n                e < -K && re(e), p.restart(!0);\n            }\n        }), se = (e)=>{\n            v.scrollTop = 0, e.target.contains && e.target.contains(v) || I && !1 === I(this, e) || (l.isInViewport(e.target) || e.target === F || this.scrollTo(e.target, !1, \"center center\"), F = e.target);\n        }, ie = (e, t)=>{\n            if (e < t.start) return e;\n            let r = isNaN(t.ratio) ? 1 : t.ratio, o = t.end - t.start, s = e - t.start, i = t.offset || 0, n = t.pins || [], a = n.offset || 0, l = t._startClamp && t.start <= 0 || t.pins && t.pins.offset ? 0 : t._endClamp && t.end === S() ? 1 : .5;\n            return n.forEach((t)=>{\n                o -= t.distance, t.nativeStart <= e && (s -= t.distance);\n            }), a && (s *= (o - a / r) / o), e + (s - i * l) / r - s;\n        }, ne = (t, r, o)=>{\n            o || (t.pins.length = t.pins.offset = 0);\n            let s, i, n, a, l, c, d, h, f = t.pins, g = t.markers;\n            for(d = 0; d < r.length; d++)if (h = r[d], t.trigger && h.trigger && t !== h && (h.trigger === t.trigger || h.pinnedContainer === t.trigger || t.trigger.contains(h.trigger)) && (l = h._startNative || h._startClamp || h.start, c = h._endNative || h._endClamp || h.end, n = ie(l, t), a = h.pin && c > 0 ? n + (c - l) : ie(c, t), h.setPositions(n, a, !0, (h._startClamp ? Math.max(0, n) : n) - l), h.markerStart && g.push(e.quickSetter([\n                h.markerStart,\n                h.markerEnd\n            ], \"y\", \"px\")), h.pin && h.end > 0 && !o)) {\n                if (s = h.end - h.start, i = t._startClamp && h.start < 0, i) {\n                    if (t.start > 0) return t.setPositions(0, t.end + (t._startNative - t.start), !0), void ne(t, r);\n                    s += h.start, f.offset = -h.start;\n                }\n                f.push({\n                    start: h.start,\n                    nativeStart: l,\n                    end: h.end,\n                    distance: s,\n                    trig: h\n                }), t.setPositions(t.start, t.end + (i ? -h.start : s), !0);\n            }\n        }, ae = (e, t)=>{\n            b.forEach((r)=>ne(r, e, t));\n        }, le = ()=>{\n            Z(), requestAnimationFrame(Z), b && (l.getAll().forEach((e)=>{\n                e._startNative = e.start, e._endNative = e.end;\n            }), b.forEach((e)=>{\n                let t = e._startClamp || e.start, r = e.autoSpeed ? Math.min(S(), e.end) : t + Math.abs((e.end - t) / e.ratio), o = r - e.end;\n                if (t -= o / 2, r -= o / 2, t > r) {\n                    let e = t;\n                    t = r, r = e;\n                }\n                e._startClamp && t < 0 ? (r = e.ratio < 0 ? S() : e.end / e.ratio, o = r - e.end, t = 0) : (e.ratio < 0 || e._endClamp && r >= S()) && (r = S(), t = e.ratio < 0 || e.ratio > 1 ? 0 : r - (r - e.start) / e.ratio, o = (r - t) * e.ratio - (e.end - e.start)), e.offset = o || 1e-4, e.pins.length = e.pins.offset = 0, e.setPositions(t, r, !0);\n            }), ae(l.sort())), J.reset();\n        }, ce = ()=>l.addEventListener(\"refresh\", le), de = ()=>b && b.forEach((e)=>e.vars.onRefresh(e)), he = ()=>(b && b.forEach((e)=>e.vars.onRefreshInit(e)), de), fe = (e, t, r, o)=>()=>{\n                let s = \"function\" == typeof t ? t(r, o) : t;\n                s || 0 === s || (s = o.getAttribute(\"data-\" + W + e) || (\"speed\" === e ? 1 : 0)), o.setAttribute(\"data-\" + W + e, s);\n                let i = \"clamp(\" === (s + \"\").substr(0, 6);\n                return {\n                    clamp: i,\n                    value: i ? s.substr(6, s.length - 7) : s\n                };\n            }, ge = (t, o, i, n, c)=>{\n            c = (\"function\" == typeof c ? c(n, t) : c) || 0;\n            let h, f, g, p, u, m, y = fe(\"speed\", o, n, t), w = fe(\"lag\", i, n, t), T = e.getProperty(t, \"y\"), x = t._gsap, C = [], _ = ()=>{\n                o = y(), i = parseFloat(w().value), h = parseFloat(o.value) || 1, g = \"auto\" === o.value, u = g || f && f._startClamp && f.start <= 0 || C.offset ? 0 : f && f._endClamp && f.end === S() ? 1 : .5, p && p.kill(), p = i && e.to(t, {\n                    ease: d,\n                    overwrite: !1,\n                    y: \"+=0\",\n                    duration: i\n                }), f && (f.ratio = h, f.autoSpeed = g);\n            }, E = ()=>{\n                x.y = T + \"px\", x.renderTransform(1), _();\n            }, P = [], R = 0, k = (e)=>{\n                if (g) {\n                    E();\n                    let o = ((e, t)=>{\n                        let o, i, n = e.parentNode || s, a = e.getBoundingClientRect(), l = n.getBoundingClientRect(), c = l.top - a.top, d = l.bottom - a.bottom, h = (Math.abs(c) > Math.abs(d) ? c : d) / (1 - t), f = -h * t;\n                        return h > 0 && (o = l.height / (r.innerHeight + l.height), i = .5 === o ? 2 * l.height : 2 * Math.min(l.height, Math.abs(-h * o / (2 * o - 1))) * (t || 1), f += t ? -i * t : -i / 2, h += i), {\n                            change: h,\n                            offset: f\n                        };\n                    })(t, a(0, 1, -e.start / (e.end - e.start)));\n                    R = o.change, m = o.offset;\n                } else m = C.offset || 0, R = (e.end - e.start - m) * (1 - h);\n                C.forEach((e)=>R -= e.distance * (1 - h)), e.offset = R || .001, e.vars.onUpdate(e), p && p.progress(1);\n            };\n            return _(), (1 !== h || g || p) && (f = l.create({\n                trigger: g ? t.parentNode : t,\n                start: ()=>o.clamp ? \"clamp(top bottom+=\" + c + \")\" : \"top bottom+=\" + c,\n                end: ()=>o.value < 0 ? \"max\" : o.clamp ? \"clamp(bottom top-=\" + c + \")\" : \"bottom top-=\" + c,\n                scroller: v,\n                scrub: !0,\n                refreshPriority: -999,\n                onRefreshInit: E,\n                onRefresh: k,\n                onKill: (e)=>{\n                    let t = b.indexOf(e);\n                    t >= 0 && b.splice(t, 1), E();\n                },\n                onUpdate: (t)=>{\n                    let r, o, s, i = T + R * (t.progress - u), n = C.length, a = 0;\n                    if (t.offset) {\n                        if (n) {\n                            for(o = -K, s = t.end; n--;){\n                                if (r = C[n], r.trig.isActive || o >= r.start && o <= r.end) return void (p && (r.trig.progress += r.trig.direction < 0 ? .001 : -.001, r.trig.update(0, 0, 1), p.resetTo(\"y\", parseFloat(x.y), -$, !0), G && p.progress(1)));\n                                o > r.end && (a += r.distance), s -= r.distance;\n                            }\n                            i = T + a + R * ((e.utils.clamp(t.start, t.end, o) - t.start - a) / (s - t.start) - u);\n                        }\n                        P.length && !g && P.forEach((e)=>e(i - a)), l = i + m, i = Math.round(1e5 * l) / 1e5 || 0, p ? (p.resetTo(\"y\", i, -$, !0), G && p.progress(1)) : (x.y = i + \"px\", x.renderTransform(1));\n                    }\n                    var l;\n                }\n            }), k(f), e.core.getCache(f.trigger).stRevert = he, f.startY = T, f.pins = C, f.markers = P, f.ratio = h, f.autoSpeed = g, t.style.willChange = \"transform\"), f;\n        };\n        function pe() {\n            return y = m.clientHeight, m.style.overflow = \"visible\", i.style.height = r.innerHeight + (y - r.innerHeight) / Y + \"px\", y - r.innerHeight;\n        }\n        ce(), l.addEventListener(\"killAll\", ce), e.delayedCall(.5, ()=>G = 0), this.scrollTop = re, this.scrollTo = (t, r, o)=>{\n            let s = e.utils.clamp(0, S(), isNaN(t) ? this.offset(t, o, !!r && !R) : +t);\n            r ? R ? e.to(this, {\n                duration: j,\n                scrollTop: s,\n                overwrite: \"auto\",\n                ease: d\n            }) : D(s) : re(s);\n        }, this.offset = (t, r, o)=>{\n            let s, i = (t = n(t)[0]).style.cssText, a = l.create({\n                trigger: t,\n                start: r || \"top top\"\n            });\n            return b && (G ? l.refresh() : ae([\n                a\n            ], !0)), s = a.start / (o ? Y : 1), a.kill(!1), t.style.cssText = i, e.core.getCache(t).uncache = 1, s;\n        }, this.content = function(t) {\n            if (arguments.length) {\n                let r = n(t || \"#smooth-content\")[0] || console.warn(\"ScrollSmoother needs a valid content element.\") || i.children[0];\n                return r !== m && (m = r, P = m.getAttribute(\"style\") || \"\", oe && oe.observe(m), e.set(m, {\n                    overflow: \"visible\",\n                    width: \"100%\",\n                    boxSizing: \"border-box\",\n                    y: \"+=0\"\n                }), j || e.set(m, {\n                    clearProps: \"transform\"\n                })), this;\n            }\n            return m;\n        }, this.wrapper = function(t) {\n            return arguments.length ? (v = n(t || \"#smooth-wrapper\")[0] || T(m), E = v.getAttribute(\"style\") || \"\", pe(), e.set(v, j ? {\n                overflow: \"hidden\",\n                position: \"fixed\",\n                height: \"100%\",\n                width: \"100%\",\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0\n            } : {\n                overflow: \"visible\",\n                position: \"relative\",\n                width: \"100%\",\n                height: \"auto\",\n                top: \"auto\",\n                bottom: \"auto\",\n                left: \"auto\",\n                right: \"auto\"\n            }), this) : v;\n        }, this.effects = (e, t)=>{\n            if (b || (b = []), !e) return b.slice(0);\n            (e = n(e)).forEach((e)=>{\n                let t = b.length;\n                for(; t--;)b[t].trigger === e && b[t].kill();\n            }), t = t || {};\n            let r, o, { speed: s, lag: i, effectsPadding: a } = t, c = [];\n            for(r = 0; r < e.length; r++)o = ge(e[r], s, i, r, a), o && c.push(o);\n            return b.push(...c), !1 !== t.refresh && l.refresh(), c;\n        }, this.sections = (e, t)=>{\n            if (C || (C = []), !e) return C.slice(0);\n            let r = n(e).map((e)=>l.create({\n                    trigger: e,\n                    start: \"top 120%\",\n                    end: \"bottom -20%\",\n                    onToggle: (t)=>{\n                        e.style.opacity = t.isActive ? \"1\" : \"0\", e.style.pointerEvents = t.isActive ? \"all\" : \"none\";\n                    }\n                }));\n            return t && t.add ? C.push(...r) : C = r.slice(0), r;\n        }, this.content(u.content), this.wrapper(u.wrapper), this.render = (e)=>te(e || 0 === e ? e : K), this.getVelocity = ()=>J.getVelocity(-K), l.scrollerProxy(v, {\n            scrollTop: re,\n            scrollHeight: ()=>pe() && i.scrollHeight,\n            fixedMarkers: !1 !== u.fixedMarkers && !!j,\n            content: m,\n            getBoundingClientRect: ()=>({\n                    top: 0,\n                    left: 0,\n                    width: r.innerWidth,\n                    height: r.innerHeight\n                })\n        }), l.defaults({\n            scroller: v\n        });\n        let ue = l.getAll().filter((e)=>e.scroller === r || e.scroller === v);\n        ue.forEach((e)=>e.revert(!0, !0)), w = l.create({\n            animation: e.fromTo(X, {\n                y: ()=>(M = 0, 0)\n            }, {\n                y: ()=>(M = 1, -pe()),\n                immediateRender: !1,\n                ease: \"none\",\n                data: \"ScrollSmoother\",\n                duration: 100,\n                onUpdate: function() {\n                    if (M) {\n                        let e = z;\n                        e && (ee(w), X.y = K), te(X.y, e), Q(), B && !R && B(V);\n                    }\n                }\n            }),\n            onRefreshInit: (e)=>{\n                if (x.isRefreshing) return;\n                if (x.isRefreshing = !0, b) {\n                    let e = l.getAll().filter((e)=>!!e.pin);\n                    b.forEach((t)=>{\n                        t.vars.pinnedContainer || e.forEach((e)=>{\n                            if (e.pin.contains(t.trigger)) {\n                                let r = t.vars;\n                                r.pinnedContainer = e.pin, t.vars = null, t.init(r, t.animation);\n                            }\n                        });\n                    });\n                }\n                let t = e.getTween();\n                N = t && t._end > t._dp._time, A = K, X.y = 0, j && (1 === l.isTouch && (v.style.position = \"absolute\"), v.scrollTop = 0, 1 === l.isTouch && (v.style.position = \"fixed\"));\n            },\n            onRefresh: (t)=>{\n                t.animation.invalidate(), t.setPositions(t.start, pe() / Y), N || ee(t), X.y = -D() * Y, te(X.y), G || (N && (z = !1), t.animation.progress(e.utils.clamp(0, 1, A / Y / -t.end))), N && (t.progress -= .001, t.update()), x.isRefreshing = !1;\n            },\n            id: \"ScrollSmoother\",\n            scroller: r,\n            invalidateOnRefresh: !0,\n            start: 0,\n            refreshPriority: -9999,\n            end: ()=>pe() / Y,\n            onScrubComplete: ()=>{\n                J.reset(), H && H(this);\n            },\n            scrub: j || !0\n        }), this.smooth = function(e) {\n            return arguments.length && (j = e || 0, Y = j && +u.speed || 1, w.scrubDuration(e)), w.getTween() ? w.getTween().duration() : 0;\n        }, w.getTween() && (w.getTween().vars.ease = u.ease || d), this.scrollTrigger = w, u.effects && this.effects(!0 === u.effects ? \"[data-\" + W + \"speed], [data-\" + W + \"lag]\" : u.effects, {\n            effectsPadding: u.effectsPadding,\n            refresh: !1\n        }), u.sections && this.sections(!0 === u.sections ? \"[data-section]\" : u.sections), ue.forEach((e)=>{\n            e.vars.scroller = v, e.revert(!1, !0), e.init(e.vars, e.animation);\n        }), this.paused = function(e, t) {\n            return arguments.length ? (!!R !== e && (e ? (w.getTween() && w.getTween().pause(), D(-K / Y), J.reset(), k = l.normalizeScroll(), k && k.disable(), R = l.observe({\n                preventDefault: !0,\n                type: \"wheel,touch,scroll\",\n                debounce: !1,\n                allowClicks: !0,\n                onChangeY: ()=>re(-K)\n            }), R.nested = f(s, \"wheel,touch,scroll\", !0, !1 !== t)) : (R.nested.kill(), R.kill(), R = 0, k && k.enable(), w.progress = (-K / Y - w.start) / (w.end - w.start), ee(w))), this) : !!R;\n        }, this.kill = this.revert = ()=>{\n            this.paused(!1), ee(w), w.kill();\n            let e = (b || []).concat(C || []), t = e.length;\n            for(; t--;)e[t].kill();\n            l.scrollerProxy(v), l.removeEventListener(\"killAll\", ce), l.removeEventListener(\"refresh\", le), v.style.cssText = E, m.style.cssText = P;\n            let o = l.defaults({});\n            o && o.scroller === v && l.defaults({\n                scroller: r\n            }), this.normalizer && l.normalizeScroll(!1), clearInterval(_), c = null, oe && oe.disconnect(), i.style.removeProperty(\"height\"), r.removeEventListener(\"focusin\", se);\n        }, this.refresh = (e, t)=>w.refresh(e, t), U && (this.normalizer = l.normalizeScroll(!0 === U ? {\n            debounce: !0,\n            content: !j && m\n        } : U)), l.config(u), \"overscrollBehavior\" in r.getComputedStyle(i) && e.set([\n            i,\n            s\n        ], {\n            overscrollBehavior: \"none\"\n        }), \"scrollBehavior\" in r.getComputedStyle(i) && e.set([\n            i,\n            s\n        ], {\n            scrollBehavior: \"auto\"\n        }), r.addEventListener(\"focusin\", se), _ = setInterval(Q, 250), \"loading\" === o.readyState || requestAnimationFrame(()=>l.refresh());\n    }\n}\nx.version = \"3.12.5\", x.create = (e)=>c && e && c.content() === n(e.content)[0] ? c : new x(e), x.get = ()=>c, m() && e.registerPlugin(x);\n/* harmony default export */ __webpack_exports__[\"default\"] = (x);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/gsap-trial/ScrollSmoother.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/gsap-trial/ScrollTrigger.js":
/*!**************************************************!*\
  !*** ./node_modules/gsap-trial/ScrollTrigger.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ScrollTrigger: function() { return /* binding */ Ut; }\n/* harmony export */ });\n/*!\n * ScrollTrigger 3.12.5\n * https://gsap.com\n * \n * @license Copyright 2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n */ let e, t, r, i, s, o, a, n, l, c, d, p, h, g, u = ()=>e ||  true && (e = window.gsap) && e.registerPlugin && e, f = 1, m = [], v = [], y = [], x = Date.now, b = (e, t)=>t, w = (e, t)=>~y.indexOf(e) && y[y.indexOf(e) + 1][t], _ = (e)=>!!~d.indexOf(e), T = (e, t, r, i, s)=>e.addEventListener(t, r, {\n        passive: !1 !== i,\n        capture: !!s\n    }), k = (e, t, r, i)=>e.removeEventListener(t, r, !!i), S = ()=>p && p.isPressed || v.cache++, C = (e, t)=>{\n    let r = (s)=>{\n        if (s || 0 === s) {\n            f && (i.history.scrollRestoration = \"manual\");\n            let t = p && p.isPressed;\n            s = r.v = Math.round(s) || (p && p.iOS ? 1 : 0), e(s), r.cacheID = v.cache, t && b(\"ss\", s);\n        } else (t || v.cache !== r.cacheID || b(\"ref\")) && (r.cacheID = v.cache, r.v = e());\n        return r.v + r.offset;\n    };\n    return r.offset = 0, e && r;\n}, E = {\n    s: \"scrollLeft\",\n    p: \"left\",\n    p2: \"Left\",\n    os: \"right\",\n    os2: \"Right\",\n    d: \"width\",\n    d2: \"Width\",\n    a: \"x\",\n    sc: C(function(e) {\n        return arguments.length ? i.scrollTo(e, P.sc()) : i.pageXOffset || s.scrollLeft || o.scrollLeft || a.scrollLeft || 0;\n    })\n}, P = {\n    s: \"scrollTop\",\n    p: \"top\",\n    p2: \"Top\",\n    os: \"bottom\",\n    os2: \"Bottom\",\n    d: \"height\",\n    d2: \"Height\",\n    a: \"y\",\n    op: E,\n    sc: C(function(e) {\n        return arguments.length ? i.scrollTo(E.sc(), e) : i.pageYOffset || s.scrollTop || o.scrollTop || a.scrollTop || 0;\n    })\n}, M = (t, r)=>(r && r._ctx && r._ctx.selector || e.utils.toArray)(t)[0] || (\"string\" == typeof t && !1 !== e.config().nullTargetWarn ? console.warn(\"Element not found:\", t) : null), O = (t, param)=>{\n    let { s: r, sc: i } = param;\n    _(t) && (t = s.scrollingElement || o);\n    let a = v.indexOf(t), n = i === P.sc ? 1 : 2;\n    !~a && (a = v.push(t) - 1), v[a + n] || T(t, \"scroll\", S);\n    let l = v[a + n], c = l || (v[a + n] = C(w(t, r), !0) || (_(t) ? i : C(function(e) {\n        return arguments.length ? t[r] = e : t[r];\n    })));\n    return c.target = t, l || (c.smooth = \"smooth\" === e.getProperty(t, \"scrollBehavior\")), c;\n}, A = (e, t, r)=>{\n    let i = e, s = e, o = x(), a = o, n = t || 50, l = Math.max(500, 3 * n), c = (e, t)=>{\n        let l = x();\n        t || l - o > n ? (s = i, i = e, a = o, o = l) : r ? i += e : i = s + (e - s) / (l - a) * (o - a);\n    };\n    return {\n        update: c,\n        reset: ()=>{\n            s = i = r ? 0 : i, a = o = 0;\n        },\n        getVelocity: (e)=>{\n            let t = a, n = s, d = x();\n            return (e || 0 === e) && e !== i && c(e), o === a || d - a > l ? 0 : (i + (r ? n : -n)) / ((r ? d : o) - t) * 1e3;\n        }\n    };\n}, R = (e, t)=>(t && !e._gsapAllow && e.preventDefault(), e.changedTouches ? e.changedTouches[0] : e), D = (e)=>{\n    let t = Math.max(...e), r = Math.min(...e);\n    return Math.abs(t) >= Math.abs(r) ? t : r;\n}, Y = ()=>{\n    c = e.core.globals().ScrollTrigger, c && c.core && (()=>{\n        let e = c.core, t = e.bridge || {}, r = e._scrollers, i = e._proxies;\n        r.push(...v), i.push(...y), v = r, y = i, b = (e, r)=>t[e](r);\n    })();\n}, B = (c)=>(e = c || u(), !t && e && \"undefined\" != typeof document && document.body && (i = window, s = document, o = s.documentElement, a = s.body, d = [\n        i,\n        s,\n        o,\n        a\n    ], r = e.utils.clamp, g = e.core.context || function() {}, l = \"onpointerenter\" in a ? \"pointer\" : \"mouse\", n = I.isTouch = i.matchMedia && i.matchMedia(\"(hover: none), (pointer: coarse)\").matches ? 1 : \"ontouchstart\" in i || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0 ? 2 : 0, h = I.eventTypes = (\"ontouchstart\" in o ? \"touchstart,touchmove,touchcancel,touchend\" : \"onpointerdown\" in o ? \"pointerdown,pointermove,pointercancel,pointerup\" : \"mousedown,mousemove,mouseup,mouseup\").split(\",\"), setTimeout(()=>f = 0, 500), Y(), t = 1), t);\nE.op = P, v.cache = 0;\nclass I {\n    init(r) {\n        t || B(e) || console.warn(\"Please gsap.registerPlugin(Observer)\"), c || Y();\n        let { tolerance: d, dragMinimum: u, type: f, target: v, lineHeight: y, debounce: b, preventDefault: w, onStop: C, onStopDelay: I, ignore: X, wheelSpeed: z, event: L, onDragStart: N, onDragEnd: F, onDrag: W, onPress: H, onRelease: q, onRight: U, onLeft: V, onUp: G, onDown: j, onChangeX: K, onChangeY: Z, onChange: $, onToggleX: J, onToggleY: Q, onHover: ee, onHoverEnd: te, onMove: re, ignoreCheck: ie, isNormalizer: se, onGestureStart: oe, onGestureEnd: ae, onWheel: ne, onEnable: le, onDisable: ce, onClick: de, scrollSpeed: pe, capture: he, allowClicks: ge, lockAxis: ue, onLockAxis: fe } = r;\n        this.target = v = M(v) || o, this.vars = r, X && (X = e.utils.toArray(X)), d = d || 1e-9, u = u || 0, z = z || 1, pe = pe || 1, f = f || \"wheel,touch,pointer\", b = !1 !== b, y || (y = parseFloat(i.getComputedStyle(a).lineHeight) || 22);\n        let me, ve, ye, xe, be, we, _e, Te = this, ke = 0, Se = 0, Ce = r.passive || !w, Ee = O(v, E), Pe = O(v, P), Me = Ee(), Oe = Pe(), Ae = ~f.indexOf(\"touch\") && !~f.indexOf(\"pointer\") && \"pointerdown\" === h[0], Re = _(v), De = v.ownerDocument || s, Ye = [\n            0,\n            0,\n            0\n        ], Be = [\n            0,\n            0,\n            0\n        ], Ie = 0, Xe = ()=>Ie = x(), ze = (e, t)=>(Te.event = e) && X && ~X.indexOf(e.target) || t && Ae && \"touch\" !== e.pointerType || ie && ie(e, t), Le = ()=>{\n            let e = Te.deltaX = D(Ye), t = Te.deltaY = D(Be), r = Math.abs(e) >= d, i = Math.abs(t) >= d;\n            $ && (r || i) && $(Te, e, t, Ye, Be), r && (U && Te.deltaX > 0 && U(Te), V && Te.deltaX < 0 && V(Te), K && K(Te), J && Te.deltaX < 0 != ke < 0 && J(Te), ke = Te.deltaX, Ye[0] = Ye[1] = Ye[2] = 0), i && (j && Te.deltaY > 0 && j(Te), G && Te.deltaY < 0 && G(Te), Z && Z(Te), Q && Te.deltaY < 0 != Se < 0 && Q(Te), Se = Te.deltaY, Be[0] = Be[1] = Be[2] = 0), (xe || ye) && (re && re(Te), ye && (W(Te), ye = !1), xe = !1), we && !(we = !1) && fe && fe(Te), be && (ne(Te), be = !1), me = 0;\n        }, Ne = (e, t, r)=>{\n            Ye[r] += e, Be[r] += t, Te._vx.update(e), Te._vy.update(t), b ? me || (me = requestAnimationFrame(Le)) : Le();\n        }, Fe = (e, t)=>{\n            ue && !_e && (Te.axis = _e = Math.abs(e) > Math.abs(t) ? \"x\" : \"y\", we = !0), \"y\" !== _e && (Ye[2] += e, Te._vx.update(e, !0)), \"x\" !== _e && (Be[2] += t, Te._vy.update(t, !0)), b ? me || (me = requestAnimationFrame(Le)) : Le();\n        }, We = (e)=>{\n            if (ze(e, 1)) return;\n            let t = (e = R(e, w)).clientX, r = e.clientY, i = t - Te.x, s = r - Te.y, o = Te.isDragging;\n            Te.x = t, Te.y = r, (o || Math.abs(Te.startX - t) >= u || Math.abs(Te.startY - r) >= u) && (W && (ye = !0), o || (Te.isDragging = !0), Fe(i, s), o || N && N(Te));\n        }, He = Te.onPress = (e)=>{\n            ze(e, 1) || e && e.button || (Te.axis = _e = null, ve.pause(), Te.isPressed = !0, e = R(e), ke = Se = 0, Te.startX = Te.x = e.clientX, Te.startY = Te.y = e.clientY, Te._vx.reset(), Te._vy.reset(), T(se ? v : De, h[1], We, Ce, !0), Te.deltaX = Te.deltaY = 0, H && H(Te));\n        }, qe = Te.onRelease = (t)=>{\n            if (ze(t, 1)) return;\n            k(se ? v : De, h[1], We, !0);\n            let r = !isNaN(Te.y - Te.startY), s = Te.isDragging, o = s && (Math.abs(Te.x - Te.startX) > 3 || Math.abs(Te.y - Te.startY) > 3), a = R(t);\n            !o && r && (Te._vx.reset(), Te._vy.reset(), w && ge && e.delayedCall(.08, ()=>{\n                if (x() - Ie > 300 && !t.defaultPrevented) {\n                    if (t.target.click) t.target.click();\n                    else if (De.createEvent) {\n                        let e = De.createEvent(\"MouseEvents\");\n                        e.initMouseEvent(\"click\", !0, !0, i, 1, a.screenX, a.screenY, a.clientX, a.clientY, !1, !1, !1, !1, 0, null), t.target.dispatchEvent(e);\n                    }\n                }\n            })), Te.isDragging = Te.isGesturing = Te.isPressed = !1, C && s && !se && ve.restart(!0), F && s && F(Te), q && q(Te, o);\n        }, Ue = (e)=>e.touches && e.touches.length > 1 && (Te.isGesturing = !0) && oe(e, Te.isDragging), Ve = ()=>(Te.isGesturing = !1) || ae(Te), Ge = (e)=>{\n            if (ze(e)) return;\n            let t = Ee(), r = Pe();\n            Ne((t - Me) * pe, (r - Oe) * pe, 1), Me = t, Oe = r, C && ve.restart(!0);\n        }, je = (e)=>{\n            if (ze(e)) return;\n            e = R(e, w), ne && (be = !0);\n            let t = (1 === e.deltaMode ? y : 2 === e.deltaMode ? i.innerHeight : 1) * z;\n            Ne(e.deltaX * t, e.deltaY * t, 0), C && !se && ve.restart(!0);\n        }, Ke = (e)=>{\n            if (ze(e)) return;\n            let t = e.clientX, r = e.clientY, i = t - Te.x, s = r - Te.y;\n            Te.x = t, Te.y = r, xe = !0, C && ve.restart(!0), (i || s) && Fe(i, s);\n        }, Ze = (e)=>{\n            Te.event = e, ee(Te);\n        }, $e = (e)=>{\n            Te.event = e, te(Te);\n        }, Je = (e)=>ze(e) || R(e, w) && de(Te);\n        ve = Te._dc = e.delayedCall(I || .25, ()=>{\n            Te._vx.reset(), Te._vy.reset(), ve.pause(), C && C(Te);\n        }).pause(), Te.deltaX = Te.deltaY = 0, Te._vx = A(0, 50, !0), Te._vy = A(0, 50, !0), Te.scrollX = Ee, Te.scrollY = Pe, Te.isDragging = Te.isGesturing = Te.isPressed = !1, g(this), Te.enable = (e)=>(Te.isEnabled || (T(Re ? De : v, \"scroll\", S), f.indexOf(\"scroll\") >= 0 && T(Re ? De : v, \"scroll\", Ge, Ce, he), f.indexOf(\"wheel\") >= 0 && T(v, \"wheel\", je, Ce, he), (f.indexOf(\"touch\") >= 0 && n || f.indexOf(\"pointer\") >= 0) && (T(v, h[0], He, Ce, he), T(De, h[2], qe), T(De, h[3], qe), ge && T(v, \"click\", Xe, !0, !0), de && T(v, \"click\", Je), oe && T(De, \"gesturestart\", Ue), ae && T(De, \"gestureend\", Ve), ee && T(v, l + \"enter\", Ze), te && T(v, l + \"leave\", $e), re && T(v, l + \"move\", Ke)), Te.isEnabled = !0, e && e.type && He(e), le && le(Te)), Te), Te.disable = ()=>{\n            Te.isEnabled && (m.filter((e)=>e !== Te && _(e.target)).length || k(Re ? De : v, \"scroll\", S), Te.isPressed && (Te._vx.reset(), Te._vy.reset(), k(se ? v : De, h[1], We, !0)), k(Re ? De : v, \"scroll\", Ge, he), k(v, \"wheel\", je, he), k(v, h[0], He, he), k(De, h[2], qe), k(De, h[3], qe), k(v, \"click\", Xe, !0), k(v, \"click\", Je), k(De, \"gesturestart\", Ue), k(De, \"gestureend\", Ve), k(v, l + \"enter\", Ze), k(v, l + \"leave\", $e), k(v, l + \"move\", Ke), Te.isEnabled = Te.isPressed = Te.isDragging = !1, ce && ce(Te));\n        }, Te.kill = Te.revert = ()=>{\n            Te.disable();\n            let e = m.indexOf(Te);\n            e >= 0 && m.splice(e, 1), p === Te && (p = 0);\n        }, m.push(Te), se && _(v) && (p = Te), Te.enable(L);\n    }\n    get velocityX() {\n        return this._vx.getVelocity();\n    }\n    get velocityY() {\n        return this._vy.getVelocity();\n    }\n    constructor(e){\n        this.init(e);\n    }\n}\nI.version = \"3.12.5\", I.create = (e)=>new I(e), I.register = B, I.getAll = ()=>m.slice(), I.getById = (e)=>m.filter((t)=>t.vars.id === e)[0], u() && e.registerPlugin(I);\nlet X, z, L, N, F, W, H, q, U, V, G, j, K, Z, $, J, Q, ee, te, re, ie, se, oe, ae, ne, le, ce, de, pe, he, ge, ue, fe, me, ve, ye, xe, be, we = 1, _e = Date.now, Te = _e(), ke = 0, Se = 0, Ce = (e, t, r)=>{\n    let i = Ne(e) && (\"clamp(\" === e.substr(0, 6) || e.indexOf(\"max\") > -1);\n    return r[\"_\" + t + \"Clamp\"] = i, i ? e.substr(6, e.length - 7) : e;\n}, Ee = (e, t)=>!t || Ne(e) && \"clamp(\" === e.substr(0, 6) ? e : \"clamp(\" + e + \")\", Pe = ()=>Se && requestAnimationFrame(Pe), Me = ()=>Z = 1, Oe = ()=>Z = 0, Ae = (e)=>e, Re = (e)=>Math.round(1e5 * e) / 1e5 || 0, De = ()=>\"undefined\" != \"object\", Ye = ()=>X || De() && (X = window.gsap) && X.registerPlugin && X, Be = (e)=>!!~H.indexOf(e), Ie = (e)=>(\"Height\" === e ? ge : L[\"inner\" + e]) || F[\"client\" + e] || W[\"client\" + e], Xe = (e)=>w(e, \"getBoundingClientRect\") || (Be(e) ? ()=>(zt.width = L.innerWidth, zt.height = ge, zt) : ()=>$e(e)), ze = (e, param)=>{\n    let { s: t, d2: r, d: i, a: s } = param;\n    return Math.max(0, (t = \"scroll\" + r) && (s = w(e, t)) ? s() - Xe(e)()[i] : Be(e) ? (F[t] || W[t]) - Ie(r) : e[t] - e[\"offset\" + r]);\n}, Le = (e, t)=>{\n    for(let r = 0; r < te.length; r += 3)(!t || ~t.indexOf(te[r + 1])) && e(te[r], te[r + 1], te[r + 2]);\n}, Ne = (e)=>\"string\" == typeof e, Fe = (e)=>\"function\" == typeof e, We = (e)=>\"number\" == typeof e, He = (e)=>\"object\" == typeof e, qe = (e, t, r)=>e && e.progress(t ? 0 : 1) && r && e.pause(), Ue = (e, t)=>{\n    if (e.enabled) {\n        let r = e._ctx ? e._ctx.add(()=>t(e)) : t(e);\n        r && r.totalTime && (e.callbackAnimation = r);\n    }\n}, Ve = Math.abs, Ge = \"padding\", je = \"px\", Ke = (e)=>L.getComputedStyle(e), Ze = (e, t)=>{\n    for(let r in t)r in e || (e[r] = t[r]);\n    return e;\n}, $e = (e, t)=>{\n    let r = t && \"matrix(1, 0, 0, 1, 0, 0)\" !== Ke(e)[$] && X.to(e, {\n        x: 0,\n        y: 0,\n        xPercent: 0,\n        yPercent: 0,\n        rotation: 0,\n        rotationX: 0,\n        rotationY: 0,\n        scale: 1,\n        skewX: 0,\n        skewY: 0\n    }).progress(1), i = e.getBoundingClientRect();\n    return r && r.progress(0).kill(), i;\n}, Je = (e, param)=>{\n    let { d2: t } = param;\n    return e[\"offset\" + t] || e[\"client\" + t] || 0;\n}, Qe = (e)=>{\n    let t, r = [], i = e.labels, s = e.duration();\n    for(t in i)r.push(i[t] / s);\n    return r;\n}, et = (e)=>{\n    let t = X.utils.snap(e), r = Array.isArray(e) && e.slice(0).sort((e, t)=>e - t);\n    return r ? function(e, i) {\n        let s = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : .001;\n        let o;\n        if (!i) return t(e);\n        if (i > 0) {\n            for(e -= s, o = 0; o < r.length; o++)if (r[o] >= e) return r[o];\n            return r[o - 1];\n        }\n        for(o = r.length, e += s; o--;)if (r[o] <= e) return r[o];\n        return r[0];\n    } : function(r, i) {\n        let s = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : .001;\n        let o = t(r);\n        return !i || Math.abs(o - r) < s || o - r < 0 == i < 0 ? o : t(i < 0 ? r - e : r + e);\n    };\n}, tt = (e, t, r, i)=>r.split(\",\").forEach((r)=>e(t, r, i)), rt = (e, t, r, i, s)=>e.addEventListener(t, r, {\n        passive: !i,\n        capture: !!s\n    }), it = (e, t, r, i)=>e.removeEventListener(t, r, !!i), st = (e, t, r)=>{\n    (r = r && r.wheelHandler) && (e(t, \"wheel\", r), e(t, \"touchmove\", r));\n}, ot = {\n    startColor: \"green\",\n    endColor: \"red\",\n    indent: 0,\n    fontSize: \"16px\",\n    fontWeight: \"normal\"\n}, at = {\n    toggleActions: \"play\",\n    anticipatePin: 0\n}, nt = {\n    top: 0,\n    left: 0,\n    center: .5,\n    bottom: 1,\n    right: 1\n}, lt = (e, t)=>{\n    if (Ne(e)) {\n        let r = e.indexOf(\"=\"), i = ~r ? +(e.charAt(r - 1) + 1) * parseFloat(e.substr(r + 1)) : 0;\n        ~r && (e.indexOf(\"%\") > r && (i *= t / 100), e = e.substr(0, r - 1)), e = i + (e in nt ? nt[e] * t : ~e.indexOf(\"%\") ? parseFloat(e) * t / 100 : parseFloat(e) || 0);\n    }\n    return e;\n}, ct = (e, t, r, i, param, c, d, p)=>{\n    let { startColor: s, endColor: o, fontSize: a, indent: n, fontWeight: l } = param;\n    let h = N.createElement(\"div\"), g = Be(r) || \"fixed\" === w(r, \"pinType\"), u = -1 !== e.indexOf(\"scroller\"), f = g ? W : r, m = -1 !== e.indexOf(\"start\"), v = m ? s : o, y = \"border-color:\" + v + \";font-size:\" + a + \";color:\" + v + \";font-weight:\" + l + \";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;\";\n    return y += \"position:\" + ((u || p) && g ? \"fixed;\" : \"absolute;\"), (u || p || !g) && (y += (i === P ? \"right\" : \"bottom\") + \":\" + (c + parseFloat(n)) + \"px;\"), d && (y += \"box-sizing:border-box;text-align:left;width:\" + d.offsetWidth + \"px;\"), h._isStart = m, h.setAttribute(\"class\", \"gsap-marker-\" + e + (t ? \" marker-\" + t : \"\")), h.style.cssText = y, h.innerText = t || 0 === t ? e + \"-\" + t : e, f.children[0] ? f.insertBefore(h, f.children[0]) : f.appendChild(h), h._offset = h[\"offset\" + i.op.d2], dt(h, 0, i, m), h;\n}, dt = (e, t, r, i)=>{\n    let s = {\n        display: \"block\"\n    }, o = r[i ? \"os2\" : \"p2\"], a = r[i ? \"p2\" : \"os2\"];\n    e._isFlipped = i, s[r.a + \"Percent\"] = i ? -100 : 0, s[r.a] = i ? \"1px\" : 0, s[\"border\" + o + \"Width\"] = 1, s[\"border\" + a + \"Width\"] = 0, s[r.p] = t + \"px\", X.set(e, s);\n}, pt = [], ht = {}, gt = ()=>_e() - ke > 34 && (ve || (ve = requestAnimationFrame(At))), ut = ()=>{\n    (!oe || !oe.isPressed || oe.startX > W.clientWidth) && (v.cache++, oe ? ve || (ve = requestAnimationFrame(At)) : At(), ke || bt(\"scrollStart\"), ke = _e());\n}, ft = ()=>{\n    le = L.innerWidth, ne = L.innerHeight;\n}, mt = ()=>{\n    v.cache++, !K && !se && !N.fullscreenElement && !N.webkitFullscreenElement && (!ae || le !== L.innerWidth || Math.abs(L.innerHeight - ne) > .25 * L.innerHeight) && q.restart(!0);\n}, vt = {}, yt = [], xt = ()=>it(Ut, \"scrollEnd\", xt) || Pt(!0), bt = (e)=>vt[e] && vt[e].map((e)=>e()) || yt, wt = [], _t = (e)=>{\n    for(let t = 0; t < wt.length; t += 5)(!e || wt[t + 4] && wt[t + 4].query === e) && (wt[t].style.cssText = wt[t + 1], wt[t].getBBox && wt[t].setAttribute(\"transform\", wt[t + 2] || \"\"), wt[t + 3].uncache = 1);\n}, Tt = (e, t)=>{\n    let r;\n    for(J = 0; J < pt.length; J++)r = pt[J], !r || t && r._ctx !== t || (e ? r.kill(1) : r.revert(!0, !0));\n    ue = !0, t && _t(t), t || bt(\"revert\");\n}, kt = (e, t)=>{\n    v.cache++, (t || !ye) && v.forEach((e)=>Fe(e) && e.cacheID++ && (e.rec = 0)), Ne(e) && (L.history.scrollRestoration = pe = e);\n}, St = 0, Ct = ()=>{\n    W.appendChild(he), ge = !oe && he.offsetHeight || L.innerHeight, W.removeChild(he);\n}, Et = (e)=>U(\".gsap-marker-start, .gsap-marker-end, .gsap-marker-scroller-start, .gsap-marker-scroller-end\").forEach((t)=>t.style.display = e ? \"none\" : \"block\"), Pt = (e, t)=>{\n    if (ke && !e && !ue) return void rt(Ut, \"scrollEnd\", xt);\n    Ct(), ye = Ut.isRefreshing = !0, v.forEach((e)=>Fe(e) && ++e.cacheID && (e.rec = e()));\n    let r = bt(\"refreshInit\");\n    re && Ut.sort(), t || Tt(), v.forEach((e)=>{\n        Fe(e) && (e.smooth && (e.target.style.scrollBehavior = \"auto\"), e(0));\n    }), pt.slice(0).forEach((e)=>e.refresh()), ue = !1, pt.forEach((e)=>{\n        if (e._subPinOffset && e.pin) {\n            let t = e.vars.horizontal ? \"offsetWidth\" : \"offsetHeight\", r = e.pin[t];\n            e.revert(!0, 1), e.adjustPinSpacing(e.pin[t] - r), e.refresh();\n        }\n    }), fe = 1, Et(!0), pt.forEach((e)=>{\n        let t = ze(e.scroller, e._dir), r = \"max\" === e.vars.end || e._endClamp && e.end > t, i = e._startClamp && e.start >= t;\n        (r || i) && e.setPositions(i ? t - 1 : e.start, r ? Math.max(i ? t : e.start + 1, t) : e.end, !0);\n    }), Et(!1), fe = 0, r.forEach((e)=>e && e.render && e.render(-1)), v.forEach((e)=>{\n        Fe(e) && (e.smooth && requestAnimationFrame(()=>e.target.style.scrollBehavior = \"smooth\"), e.rec && e(e.rec));\n    }), kt(pe, 1), q.pause(), St++, ye = 2, At(2), pt.forEach((e)=>Fe(e.vars.onRefresh) && e.vars.onRefresh(e)), ye = Ut.isRefreshing = !1, bt(\"refresh\");\n}, Mt = 0, Ot = 1, At = (e)=>{\n    if (2 === e || !ye && !ue) {\n        Ut.isUpdating = !0, be && be.update(0);\n        let e = pt.length, t = _e(), r = t - Te >= 50, i = e && pt[0].scroll();\n        if (Ot = Mt > i ? -1 : 1, ye || (Mt = i), r && (ke && !Z && t - ke > 200 && (ke = 0, bt(\"scrollEnd\")), G = Te, Te = t), Ot < 0) {\n            for(J = e; J-- > 0;)pt[J] && pt[J].update(0, r);\n            Ot = 1;\n        } else for(J = 0; J < e; J++)pt[J] && pt[J].update(0, r);\n        Ut.isUpdating = !1;\n    }\n    ve = 0;\n}, Rt = [\n    \"left\",\n    \"top\",\n    \"bottom\",\n    \"right\",\n    \"marginBottom\",\n    \"marginRight\",\n    \"marginTop\",\n    \"marginLeft\",\n    \"display\",\n    \"flexShrink\",\n    \"float\",\n    \"zIndex\",\n    \"gridColumnStart\",\n    \"gridColumnEnd\",\n    \"gridRowStart\",\n    \"gridRowEnd\",\n    \"gridArea\",\n    \"justifySelf\",\n    \"alignSelf\",\n    \"placeSelf\",\n    \"order\"\n], Dt = Rt.concat([\n    \"width\",\n    \"height\",\n    \"boxSizing\",\n    \"maxWidth\",\n    \"maxHeight\",\n    \"position\",\n    \"margin\",\n    Ge,\n    \"paddingTop\",\n    \"paddingRight\",\n    \"paddingBottom\",\n    \"paddingLeft\"\n]), Yt = (e, t, r, i)=>{\n    if (!e._gsap.swappedIn) {\n        let s, o = Rt.length, a = t.style, n = e.style;\n        for(; o--;)s = Rt[o], a[s] = r[s];\n        a.position = \"absolute\" === r.position ? \"absolute\" : \"relative\", \"inline\" === r.display && (a.display = \"inline-block\"), n.bottom = n.right = \"auto\", a.flexBasis = r.flexBasis || \"auto\", a.overflow = \"visible\", a.boxSizing = \"border-box\", a.width = Je(e, E) + je, a.height = Je(e, P) + je, a.padding = n.margin = n.top = n.left = \"0\", It(i), n.width = n.maxWidth = r.width, n.height = n.maxHeight = r.height, n.padding = r.padding, e.parentNode !== t && (e.parentNode.insertBefore(t, e), t.appendChild(e)), e._gsap.swappedIn = !0;\n    }\n}, Bt = /([A-Z])/g, It = (e)=>{\n    if (e) {\n        let t, r, i = e.t.style, s = e.length, o = 0;\n        for((e.t._gsap || X.core.getCache(e.t)).uncache = 1; o < s; o += 2)r = e[o + 1], t = e[o], r ? i[t] = r : i[t] && i.removeProperty(t.replace(Bt, \"-$1\").toLowerCase());\n    }\n}, Xt = (e)=>{\n    let t = Dt.length, r = e.style, i = [], s = 0;\n    for(; s < t; s++)i.push(Dt[s], r[Dt[s]]);\n    return i.t = e, i;\n}, zt = {\n    left: 0,\n    top: 0\n}, Lt = (e, t, r, i, s, o, a, n, l, c, d, p, h, g)=>{\n    Fe(e) && (e = e(n)), Ne(e) && \"max\" === e.substr(0, 3) && (e = p + (\"=\" === e.charAt(4) ? lt(\"0\" + e.substr(3), r) : 0));\n    let u, f, m, v = h ? h.time() : 0;\n    if (h && h.seek(0), isNaN(e) || (e = +e), We(e)) h && (e = X.utils.mapRange(h.scrollTrigger.start, h.scrollTrigger.end, 0, p, e)), a && dt(a, r, i, !0);\n    else {\n        Fe(t) && (t = t(n));\n        let o, d, p, h, g = (e || \"0\").split(\" \");\n        m = M(t, n) || W, o = $e(m) || {}, o && (o.left || o.top) || \"none\" !== Ke(m).display || (h = m.style.display, m.style.display = \"block\", o = $e(m), h ? m.style.display = h : m.style.removeProperty(\"display\")), d = lt(g[0], o[i.d]), p = lt(g[1] || \"0\", r), e = o[i.p] - l[i.p] - c + d + s - p, a && dt(a, p, i, r - p < 20 || a._isStart && p > 20), r -= r - p;\n    }\n    if (g && (n[g] = e || -.001, e < 0 && (e = 0)), o) {\n        let t = e + r, s = o._isStart;\n        u = \"scroll\" + i.d2, dt(o, t, i, s && t > 20 || !s && (d ? Math.max(W[u], F[u]) : o.parentNode[u]) <= t + 1), d && (l = $e(a), d && (o.style[i.op.p] = l[i.op.p] - i.op.m - o._offset + je));\n    }\n    return h && m && (u = $e(m), h.seek(p), f = $e(m), h._caScrollDist = u[i.p] - f[i.p], e = e / h._caScrollDist * p), h && h.seek(v), h ? e : Math.round(e);\n}, Nt = /(webkit|moz|length|cssText|inset)/i, Ft = (e, t, r, i)=>{\n    if (e.parentNode !== t) {\n        let s, o, a = e.style;\n        if (t === W) {\n            for(s in e._stOrig = a.cssText, o = Ke(e), o)+s || Nt.test(s) || !o[s] || \"string\" != typeof a[s] || \"0\" === s || (a[s] = o[s]);\n            a.top = r, a.left = i;\n        } else a.cssText = e._stOrig;\n        X.core.getCache(e).uncache = 1, t.appendChild(e);\n    }\n}, Wt = (e, t, r)=>{\n    let i = t, s = i;\n    return (t)=>{\n        let o = Math.round(e());\n        return o !== i && o !== s && Math.abs(o - i) > 3 && Math.abs(o - s) > 3 && (t = o, r && r()), s = i, i = t, t;\n    };\n}, Ht = (e, t, r)=>{\n    let i = {};\n    i[t.p] = \"+=\" + r, X.set(e, i);\n}, qt = (e, t)=>{\n    let r = O(e, t), i = \"_scroll\" + t.p2, s = (t, o, a, n, l)=>{\n        let c = s.tween, d = o.onComplete, p = {};\n        a = a || r();\n        let h = Wt(r, a, ()=>{\n            c.kill(), s.tween = 0;\n        });\n        return l = n && l || 0, n = n || t - a, c && c.kill(), o[i] = t, o.inherit = !1, o.modifiers = p, p[i] = ()=>h(a + n * c.ratio + l * c.ratio * c.ratio), o.onUpdate = ()=>{\n            v.cache++, s.tween && At();\n        }, o.onComplete = ()=>{\n            s.tween = 0, d && d.call(c);\n        }, c = s.tween = X.to(e, o), c;\n    };\n    return e[i] = r, r.wheelHandler = ()=>s.tween && s.tween.kill() && (s.tween = 0), rt(e, \"wheel\", r.wheelHandler), Ut.isTouch && rt(e, \"touchmove\", r.wheelHandler), s;\n};\nclass Ut {\n    init(e, t) {\n        if (this.progress = this.start = 0, this.vars && this.kill(!0, !0), !Se) return void (this.update = this.refresh = this.kill = Ae);\n        e = Ze(Ne(e) || We(e) || e.nodeType ? {\n            trigger: e\n        } : e, at);\n        let r, i, s, o, a, n, l, c, d, p, h, g, u, f, m, x, b, _, T, k, S, C, A, R, D, Y, B, I, z, H, q, j, $, Q, ee, te, se, oe, ae, { onUpdate: ne, toggleClass: le, id: ce, onToggle: de, onRefresh: pe, scrub: he, trigger: ge, pin: ue, pinSpacing: ve, invalidateOnRefresh: Te, anticipatePin: Pe, onScrubComplete: Me, onSnapComplete: Oe, once: De, snap: Ye, pinReparent: Le, pinSpacer: tt, containerAnimation: st, fastScrollEnd: nt, preventOverlaps: dt } = e, gt = e.horizontal || e.containerAnimation && !1 !== e.horizontal ? E : P, ft = !he && 0 !== he, vt = M(e.scroller || L), yt = X.core.getCache(vt), bt = Be(vt), wt = \"fixed\" === (\"pinType\" in e ? e.pinType : w(vt, \"pinType\") || bt && \"fixed\"), _t = [\n            e.onEnter,\n            e.onLeave,\n            e.onEnterBack,\n            e.onLeaveBack\n        ], Tt = ft && e.toggleActions.split(\" \"), kt = \"markers\" in e ? e.markers : at.markers, Ct = bt ? 0 : parseFloat(Ke(vt)[\"border\" + gt.p2 + \"Width\"]) || 0, Et = this, Mt = e.onRefreshInit && (()=>e.onRefreshInit(Et)), At = ((e, t, param)=>{\n            let { d: r, d2: i, a: s } = param;\n            return (s = w(e, \"getBoundingClientRect\")) ? ()=>s()[r] : ()=>(t ? Ie(i) : e[\"client\" + i]) || 0;\n        })(vt, bt, gt), Rt = ((e, t)=>!t || ~y.indexOf(e) ? Xe(e) : ()=>zt)(vt, bt), Dt = 0, Bt = 0, Nt = 0, Wt = O(vt, gt);\n        var Vt;\n        if (Et._startClamp = Et._endClamp = !1, Et._dir = gt, Pe *= 45, Et.scroller = vt, Et.scroll = st ? st.time.bind(st) : Wt, o = Wt(), Et.vars = e, t = t || e.animation, \"refreshPriority\" in e && (re = 1, -9999 === e.refreshPriority && (be = Et)), yt.tweenScroll = yt.tweenScroll || {\n            top: qt(vt, P),\n            left: qt(vt, E)\n        }, Et.tweenTo = r = yt.tweenScroll[gt.p], Et.scrubDuration = (e)=>{\n            $ = We(e) && e, $ ? j ? j.duration(e) : j = X.to(t, {\n                ease: \"expo\",\n                totalProgress: \"+=0\",\n                inherit: !1,\n                duration: $,\n                paused: !0,\n                onComplete: ()=>Me && Me(Et)\n            }) : (j && j.progress(1).kill(), j = 0);\n        }, t && (t.vars.lazy = !1, t._initted && !Et.isReverted || !1 !== t.vars.immediateRender && !1 !== e.immediateRender && t.duration() && t.render(0, !0, !0), Et.animation = t.pause(), t.scrollTrigger = Et, Et.scrubDuration(he), H = 0, ce || (ce = t.vars.id)), Ye && (He(Ye) && !Ye.push || (Ye = {\n            snapTo: Ye\n        }), \"scrollBehavior\" in W.style && X.set(bt ? [\n            W,\n            F\n        ] : vt, {\n            scrollBehavior: \"auto\"\n        }), v.forEach((e)=>Fe(e) && e.target === (bt ? N.scrollingElement || F : vt) && (e.smooth = !1)), s = Fe(Ye.snapTo) ? Ye.snapTo : \"labels\" === Ye.snapTo ? ((e)=>(t)=>X.utils.snap(Qe(e), t))(t) : \"labelsDirectional\" === Ye.snapTo ? (Vt = t, (e, t)=>et(Qe(Vt))(e, t.direction)) : !1 !== Ye.directional ? (e, t)=>et(Ye.snapTo)(e, _e() - Bt < 500 ? 0 : t.direction) : X.utils.snap(Ye.snapTo), Q = Ye.duration || {\n            min: .1,\n            max: 2\n        }, Q = He(Q) ? V(Q.min, Q.max) : V(Q, Q), ee = X.delayedCall(Ye.delay || $ / 2 || .1, ()=>{\n            let e = Wt(), i = _e() - Bt < 500, o = r.tween;\n            if (!(i || Math.abs(Et.getVelocity()) < 10) || o || Z || Dt === e) Et.isActive && Dt !== e && ee.restart(!0);\n            else {\n                let a, c, d = (e - n) / f, p = t && !ft ? t.totalProgress() : d, h = i ? 0 : (p - q) / (_e() - G) * 1e3 || 0, g = X.utils.clamp(-d, 1 - d, Ve(h / 2) * h / .185), u = d + (!1 === Ye.inertia ? 0 : g), { onStart: m, onInterrupt: v, onComplete: y } = Ye;\n                if (a = s(u, Et), We(a) || (a = u), c = Math.round(n + a * f), e <= l && e >= n && c !== e) {\n                    if (o && !o._initted && o.data <= Ve(c - e)) return;\n                    !1 === Ye.inertia && (g = a - d), r(c, {\n                        duration: Q(Ve(.185 * Math.max(Ve(u - p), Ve(a - p)) / h / .05 || 0)),\n                        ease: Ye.ease || \"power3\",\n                        data: Ve(c - e),\n                        onInterrupt: ()=>ee.restart(!0) && v && v(Et),\n                        onComplete () {\n                            Et.update(), Dt = Wt(), t && (j ? j.resetTo(\"totalProgress\", a, t._tTime / t._tDur) : t.progress(a)), H = q = t && !ft ? t.totalProgress() : Et.progress, Oe && Oe(Et), y && y(Et);\n                        }\n                    }, e, g * f, c - e - g * f), m && m(Et, r.tween);\n                }\n            }\n        }).pause()), ce && (ht[ce] = Et), ge = Et.trigger = M(ge || !0 !== ue && ue), ae = ge && ge._gsap && ge._gsap.stRevert, ae && (ae = ae(Et)), ue = !0 === ue ? ge : M(ue), Ne(le) && (le = {\n            targets: ge,\n            className: le\n        }), ue && (!1 === ve || \"margin\" === ve || (ve = !(!ve && ue.parentNode && ue.parentNode.style && \"flex\" === Ke(ue.parentNode).display) && Ge), Et.pin = ue, i = X.core.getCache(ue), i.spacer ? m = i.pinState : (tt && (tt = M(tt), tt && !tt.nodeType && (tt = tt.current || tt.nativeElement), i.spacerIsNative = !!tt, tt && (i.spacerState = Xt(tt))), i.spacer = _ = tt || N.createElement(\"div\"), _.classList.add(\"pin-spacer\"), ce && _.classList.add(\"pin-spacer-\" + ce), i.pinState = m = Xt(ue)), !1 !== e.force3D && X.set(ue, {\n            force3D: !0\n        }), Et.spacer = _ = i.spacer, z = Ke(ue), R = z[ve + gt.os2], k = X.getProperty(ue), S = X.quickSetter(ue, gt.a, je), Yt(ue, _, z), b = Xt(ue)), kt) {\n            g = He(kt) ? Ze(kt, ot) : ot, p = ct(\"scroller-start\", ce, vt, gt, g, 0), h = ct(\"scroller-end\", ce, vt, gt, g, 0, p), T = p[\"offset\" + gt.op.d2];\n            let e = M(w(vt, \"content\") || vt);\n            c = this.markerStart = ct(\"start\", ce, e, gt, g, T, 0, st), d = this.markerEnd = ct(\"end\", ce, e, gt, g, T, 0, st), st && (oe = X.quickSetter([\n                c,\n                d\n            ], gt.a, je)), wt || y.length && !0 === w(vt, \"fixedMarkers\") || (((e)=>{\n                let t = Ke(e).position;\n                e.style.position = \"absolute\" === t || \"fixed\" === t ? t : \"relative\";\n            })(bt ? W : vt), X.set([\n                p,\n                h\n            ], {\n                force3D: !0\n            }), Y = X.quickSetter(p, gt.a, je), I = X.quickSetter(h, gt.a, je));\n        }\n        if (st) {\n            let e = st.vars.onUpdate, t = st.vars.onUpdateParams;\n            st.eventCallback(\"onUpdate\", ()=>{\n                Et.update(0, 0, 1), e && e.apply(st, t || []);\n            });\n        }\n        if (Et.previous = ()=>pt[pt.indexOf(Et) - 1], Et.next = ()=>pt[pt.indexOf(Et) + 1], Et.revert = (e, r)=>{\n            if (!r) return Et.kill(!0);\n            let i = !1 !== e || !Et.enabled, s = K;\n            i !== Et.isReverted && (i && (te = Math.max(Wt(), Et.scroll.rec || 0), Nt = Et.progress, se = t && t.progress()), c && [\n                c,\n                d,\n                p,\n                h\n            ].forEach((e)=>e.style.display = i ? \"none\" : \"block\"), i && (K = Et, Et.update(i)), !ue || Le && Et.isActive || (i ? ((e, t, r)=>{\n                It(r);\n                let i = e._gsap;\n                if (i.spacerIsNative) It(i.spacerState);\n                else if (e._gsap.swappedIn) {\n                    let r = t.parentNode;\n                    r && (r.insertBefore(e, t), r.removeChild(t));\n                }\n                e._gsap.swappedIn = !1;\n            })(ue, _, m) : Yt(ue, _, Ke(ue), D)), i || Et.update(i), K = s, Et.isReverted = i);\n        }, Et.refresh = (i, s, g, v)=>{\n            if ((K || !Et.enabled) && !s) return;\n            if (ue && i && ke) return void rt(Ut, \"scrollEnd\", xt);\n            !ye && Mt && Mt(Et), K = Et, r.tween && !g && (r.tween.kill(), r.tween = 0), j && j.pause(), Te && t && t.revert({\n                kill: !1\n            }).invalidate(), Et.isReverted || Et.revert(!0, !0), Et._subPinOffset = !1;\n            let y, w, T, S, R, Y, I, z, L, H, q, U, V, G = At(), Z = Rt(), $ = st ? st.duration() : ze(vt, gt), J = f <= .01, Q = 0, re = v || 0, oe = He(g) ? g.end : e.end, ae = e.endTrigger || ge, ne = He(g) ? g.start : e.start || (0 !== e.start && ge ? ue ? \"0 0\" : \"0 100%\" : 0), le = Et.pinnedContainer = e.pinnedContainer && M(e.pinnedContainer, Et), ce = ge && Math.max(0, pt.indexOf(Et)) || 0, de = ce;\n            for(kt && He(g) && (U = X.getProperty(p, gt.p), V = X.getProperty(h, gt.p)); de--;)Y = pt[de], Y.end || Y.refresh(0, 1) || (K = Et), I = Y.pin, !I || I !== ge && I !== ue && I !== le || Y.isReverted || (H || (H = []), H.unshift(Y), Y.revert(!0, !0)), Y !== pt[de] && (ce--, de--);\n            for(Fe(ne) && (ne = ne(Et)), ne = Ce(ne, \"start\", Et), n = Lt(ne, ge, G, gt, Wt(), c, p, Et, Z, Ct, wt, $, st, Et._startClamp && \"_startClamp\") || (ue ? -.001 : 0), Fe(oe) && (oe = oe(Et)), Ne(oe) && !oe.indexOf(\"+=\") && (~oe.indexOf(\" \") ? oe = (Ne(ne) ? ne.split(\" \")[0] : \"\") + oe : (Q = lt(oe.substr(2), G), oe = Ne(ne) ? ne : (st ? X.utils.mapRange(0, st.duration(), st.scrollTrigger.start, st.scrollTrigger.end, n) : n) + Q, ae = ge)), oe = Ce(oe, \"end\", Et), l = Math.max(n, Lt(oe || (ae ? \"100% 0\" : $), ae, G, gt, Wt() + Q, d, h, Et, Z, Ct, wt, $, st, Et._endClamp && \"_endClamp\")) || -.001, Q = 0, de = ce; de--;)Y = pt[de], I = Y.pin, I && Y.start - Y._pinPush <= n && !st && Y.end > 0 && (y = Y.end - (Et._startClamp ? Math.max(0, Y.start) : Y.start), (I === ge && Y.start - Y._pinPush < n || I === le) && isNaN(ne) && (Q += y * (1 - Y.progress)), I === ue && (re += y));\n            if (n += Q, l += Q, Et._startClamp && (Et._startClamp += Q), Et._endClamp && !ye && (Et._endClamp = l || -.001, l = Math.min(l, ze(vt, gt))), f = l - n || (n -= .01) && .001, J && (Nt = X.utils.clamp(0, 1, X.utils.normalize(n, l, te))), Et._pinPush = re, c && Q && (y = {}, y[gt.a] = \"+=\" + Q, le && (y[gt.p] = \"-=\" + Wt()), X.set([\n                c,\n                d\n            ], y)), !ue || fe && Et.end >= ze(vt, gt)) {\n                if (ge && Wt() && !st) for(w = ge.parentNode; w && w !== W;)w._pinOffset && (n -= w._pinOffset, l -= w._pinOffset), w = w.parentNode;\n            } else y = Ke(ue), S = gt === P, T = Wt(), C = parseFloat(k(gt.a)) + re, !$ && l > 1 && (q = (bt ? N.scrollingElement || F : vt).style, q = {\n                style: q,\n                value: q[\"overflow\" + gt.a.toUpperCase()]\n            }, bt && \"scroll\" !== Ke(W)[\"overflow\" + gt.a.toUpperCase()] && (q.style[\"overflow\" + gt.a.toUpperCase()] = \"scroll\")), Yt(ue, _, y), b = Xt(ue), w = $e(ue, !0), z = wt && O(vt, S ? E : P)(), ve ? (D = [\n                ve + gt.os2,\n                f + re + je\n            ], D.t = _, de = ve === Ge ? Je(ue, gt) + f + re : 0, de && (D.push(gt.d, de + je), \"auto\" !== _.style.flexBasis && (_.style.flexBasis = de + je)), It(D), le && pt.forEach((e)=>{\n                e.pin === le && !1 !== e.vars.pinSpacing && (e._subPinOffset = !0);\n            }), wt && Wt(te)) : (de = Je(ue, gt), de && \"auto\" !== _.style.flexBasis && (_.style.flexBasis = de + je)), wt && (R = {\n                top: w.top + (S ? T - n : z) + je,\n                left: w.left + (S ? z : T - n) + je,\n                boxSizing: \"border-box\",\n                position: \"fixed\"\n            }, R.width = R.maxWidth = Math.ceil(w.width) + je, R.height = R.maxHeight = Math.ceil(w.height) + je, R.margin = R.marginTop = R.marginRight = R.marginBottom = R.marginLeft = \"0\", R.padding = y.padding, R.paddingTop = y.paddingTop, R.paddingRight = y.paddingRight, R.paddingBottom = y.paddingBottom, R.paddingLeft = y.paddingLeft, x = ((e, t, r)=>{\n                let i, s = [], o = e.length, a = r ? 8 : 0;\n                for(; a < o; a += 2)i = e[a], s.push(i, i in t ? t[i] : e[a + 1]);\n                return s.t = e.t, s;\n            })(m, R, Le), ye && Wt(0)), t ? (L = t._initted, ie(1), t.render(t.duration(), !0, !0), A = k(gt.a) - C + f + re, B = Math.abs(f - A) > 1, wt && B && x.splice(x.length - 2, 2), t.render(0, !0, !0), L || t.invalidate(!0), t.parent || t.totalTime(t.totalTime()), ie(0)) : A = f, q && (q.value ? q.style[\"overflow\" + gt.a.toUpperCase()] = q.value : q.style.removeProperty(\"overflow-\" + gt.a));\n            H && H.forEach((e)=>e.revert(!1, !0)), Et.start = n, Et.end = l, o = a = ye ? te : Wt(), st || ye || (o < te && Wt(te), Et.scroll.rec = 0), Et.revert(!1, !0), Bt = _e(), ee && (Dt = -1, ee.restart(!0)), K = 0, t && ft && (t._initted || se) && t.progress() !== se && t.progress(se || 0, !0).render(t.time(), !0, !0), (J || Nt !== Et.progress || st || Te) && (t && !ft && t.totalProgress(st && n < -.001 && !Nt ? X.utils.normalize(n, l, 0) : Nt, !0), Et.progress = J || (o - n) / f === Nt ? 0 : Nt), ue && ve && (_._pinOffset = Math.round(Et.progress * A)), j && j.invalidate(), isNaN(U) || (U -= X.getProperty(p, gt.p), V -= X.getProperty(h, gt.p), Ht(p, gt, U), Ht(c, gt, U - (v || 0)), Ht(h, gt, V), Ht(d, gt, V - (v || 0))), J && !ye && Et.update(), !pe || ye || u || (u = !0, pe(Et), u = !1);\n        }, Et.getVelocity = ()=>(Wt() - a) / (_e() - G) * 1e3 || 0, Et.endAnimation = ()=>{\n            qe(Et.callbackAnimation), t && (j ? j.progress(1) : t.paused() ? ft || qe(t, Et.direction < 0, 1) : qe(t, t.reversed()));\n        }, Et.labelToScroll = (e)=>t && t.labels && (n || Et.refresh() || n) + t.labels[e] / t.duration() * f || 0, Et.getTrailing = (e)=>{\n            let t = pt.indexOf(Et), r = Et.direction > 0 ? pt.slice(0, t).reverse() : pt.slice(t + 1);\n            return (Ne(e) ? r.filter((t)=>t.vars.preventOverlaps === e) : r).filter((e)=>Et.direction > 0 ? e.end <= n : e.start >= l);\n        }, Et.update = (e, i, s)=>{\n            if (st && !s && !e) return;\n            let c, d, h, g, u, m, v, y, w = !0 === ye ? te : Et.scroll(), T = e ? 0 : (w - n) / f, k = T < 0 ? 0 : T > 1 ? 1 : T || 0, E = Et.progress;\n            if (i && (a = o, o = st ? Wt() : w, Ye && (q = H, H = t && !ft ? t.totalProgress() : k)), Pe && ue && !K && !we && ke && (!k && n < w + (w - a) / (_e() - G) * Pe ? k = 1e-4 : 1 === k && l > w + (w - a) / (_e() - G) * Pe && (k = .9999)), k !== E && Et.enabled) {\n                if (c = Et.isActive = !!k && k < 1, d = !!E && E < 1, m = c !== d, u = m || !!k != !!E, Et.direction = k > E ? 1 : -1, Et.progress = k, u && !K && (h = k && !E ? 0 : 1 === k ? 1 : 1 === E ? 2 : 3, ft && (g = !m && \"none\" !== Tt[h + 1] && Tt[h + 1] || Tt[h], y = t && (\"complete\" === g || \"reset\" === g || g in t))), dt && (m || y) && (y || he || !t) && (Fe(dt) ? dt(Et) : Et.getTrailing(dt).forEach((e)=>e.endAnimation())), ft || (!j || K || we ? t && t.totalProgress(k, !(!K || !Bt && !e)) : (j._dp._time - j._start !== j._time && j.render(j._dp._time - j._start), j.resetTo ? j.resetTo(\"totalProgress\", k, t._tTime / t._tDur) : (j.vars.totalProgress = k, j.invalidate().restart()))), ue) if (e && ve && (_.style[ve + gt.os2] = R), wt) {\n                    if (u) {\n                        if (v = !e && k > E && l + 1 > w && w + 1 >= ze(vt, gt), Le) if (e || !c && !v) Ft(ue, _);\n                        else {\n                            let e = $e(ue, !0), t = w - n;\n                            Ft(ue, W, e.top + (gt === P ? t : 0) + je, e.left + (gt === P ? 0 : t) + je);\n                        }\n                        It(c || v ? x : b), B && k < 1 && c || S(C + (1 !== k || v ? 0 : A));\n                    }\n                } else S(Re(C + A * k));\n                Ye && !r.tween && !K && !we && ee.restart(!0), le && (m || De && k && (k < 1 || !me)) && U(le.targets).forEach((e)=>e.classList[c || De ? \"add\" : \"remove\"](le.className)), ne && !ft && !e && ne(Et), u && !K ? (ft && (y && (\"complete\" === g ? t.pause().totalProgress(1) : \"reset\" === g ? t.restart(!0).pause() : \"restart\" === g ? t.restart(!0) : t[g]()), ne && ne(Et)), !m && me || (de && m && Ue(Et, de), _t[h] && Ue(Et, _t[h]), De && (1 === k ? Et.kill(!1, 1) : _t[h] = 0), m || (h = 1 === k ? 1 : 3, _t[h] && Ue(Et, _t[h]))), nt && !c && Math.abs(Et.getVelocity()) > (We(nt) ? nt : 2500) && (qe(Et.callbackAnimation), j ? j.progress(1) : qe(t, \"reverse\" === g ? 1 : !k, 1))) : ft && ne && !K && ne(Et);\n            }\n            if (I) {\n                let e = st ? w / st.duration() * (st._caScrollDist || 0) : w;\n                Y(e + (p._isFlipped ? 1 : 0)), I(e);\n            }\n            oe && oe(-w / st.duration() * (st._caScrollDist || 0));\n        }, Et.enable = (e, t)=>{\n            Et.enabled || (Et.enabled = !0, rt(vt, \"resize\", mt), bt || rt(vt, \"scroll\", ut), Mt && rt(Ut, \"refreshInit\", Mt), !1 !== e && (Et.progress = Nt = 0, o = a = Dt = Wt()), !1 !== t && Et.refresh());\n        }, Et.getTween = (e)=>e && r ? r.tween : j, Et.setPositions = (e, t, r, i)=>{\n            if (st) {\n                let r = st.scrollTrigger, i = st.duration(), s = r.end - r.start;\n                e = r.start + s * e / i, t = r.start + s * t / i;\n            }\n            Et.refresh(!1, !1, {\n                start: Ee(e, r && !!Et._startClamp),\n                end: Ee(t, r && !!Et._endClamp)\n            }, i), Et.update();\n        }, Et.adjustPinSpacing = (e)=>{\n            if (D && e) {\n                let t = D.indexOf(gt.d) + 1;\n                D[t] = parseFloat(D[t]) + e + je, D[1] = parseFloat(D[1]) + e + je, It(D);\n            }\n        }, Et.disable = (e, t)=>{\n            if (Et.enabled && (!1 !== e && Et.revert(!0, !0), Et.enabled = Et.isActive = !1, t || j && j.pause(), te = 0, i && (i.uncache = 1), Mt && it(Ut, \"refreshInit\", Mt), ee && (ee.pause(), r.tween && r.tween.kill() && (r.tween = 0)), !bt)) {\n                let e = pt.length;\n                for(; e--;)if (pt[e].scroller === vt && pt[e] !== Et) return;\n                it(vt, \"resize\", mt), bt || it(vt, \"scroll\", ut);\n            }\n        }, Et.kill = (r, s)=>{\n            Et.disable(r, s), j && !s && j.kill(), ce && delete ht[ce];\n            let o = pt.indexOf(Et);\n            o >= 0 && pt.splice(o, 1), o === J && Ot > 0 && J--, o = 0, pt.forEach((e)=>e.scroller === Et.scroller && (o = 1)), o || ye || (Et.scroll.rec = 0), t && (t.scrollTrigger = null, r && t.revert({\n                kill: !1\n            }), s || t.kill()), c && [\n                c,\n                d,\n                p,\n                h\n            ].forEach((e)=>e.parentNode && e.parentNode.removeChild(e)), be === Et && (be = 0), ue && (i && (i.uncache = 1), o = 0, pt.forEach((e)=>e.pin === ue && o++), o || (i.spacer = 0)), e.onKill && e.onKill(Et);\n        }, pt.push(Et), Et.enable(!1, !1), ae && ae(Et), t && t.add && !f) {\n            let e = Et.update;\n            Et.update = ()=>{\n                Et.update = e, n || l || Et.refresh();\n            }, X.delayedCall(.01, Et.update), f = .01, n = l = 0;\n        } else Et.refresh();\n        ue && (()=>{\n            if (xe !== St) {\n                let e = xe = St;\n                requestAnimationFrame(()=>e === St && Pt(!0));\n            }\n        })();\n    }\n    static register(e) {\n        return z || (X = e || Ye(), De() && window.document && Ut.enable(), z = Se), z;\n    }\n    static defaults(e) {\n        if (e) for(let t in e)at[t] = e[t];\n        return at;\n    }\n    static disable(e, t) {\n        Se = 0, pt.forEach((r)=>r[t ? \"kill\" : \"disable\"](e)), it(L, \"wheel\", ut), it(N, \"scroll\", ut), clearInterval(j), it(N, \"touchcancel\", Ae), it(W, \"touchstart\", Ae), tt(it, N, \"pointerdown,touchstart,mousedown\", Me), tt(it, N, \"pointerup,touchend,mouseup\", Oe), q.kill(), Le(it);\n        for(let e = 0; e < v.length; e += 3)st(it, v[e], v[e + 1]), st(it, v[e], v[e + 2]);\n    }\n    static enable() {\n        if (L = window, N = document, F = N.documentElement, W = N.body, X && (U = X.utils.toArray, V = X.utils.clamp, de = X.core.context || Ae, ie = X.core.suppressOverwrites || Ae, pe = L.history.scrollRestoration || \"auto\", Mt = L.pageYOffset, X.core.globals(\"ScrollTrigger\", Ut), W)) {\n            Se = 1, he = document.createElement(\"div\"), he.style.height = \"100vh\", he.style.position = \"absolute\", Ct(), Pe(), I.register(X), Ut.isTouch = I.isTouch, ce = I.isTouch && /(iPad|iPhone|iPod|Mac)/g.test(navigator.userAgent), ae = 1 === I.isTouch, rt(L, \"wheel\", ut), H = [\n                L,\n                N,\n                F,\n                W\n            ], X.matchMedia ? (Ut.matchMedia = (e)=>{\n                let t, r = X.matchMedia();\n                for(t in e)r.add(t, e[t]);\n                return r;\n            }, X.addEventListener(\"matchMediaInit\", ()=>Tt()), X.addEventListener(\"matchMediaRevert\", ()=>_t()), X.addEventListener(\"matchMedia\", ()=>{\n                Pt(0, 1), bt(\"matchMedia\");\n            }), X.matchMedia(\"(orientation: portrait)\", ()=>(ft(), ft))) : console.warn(\"Requires GSAP 3.11.0 or later\"), ft(), rt(N, \"scroll\", ut);\n            let e, t, r = W.style, i = r.borderTopStyle, s = X.core.Animation.prototype;\n            for(s.revert || Object.defineProperty(s, \"revert\", {\n                value: function() {\n                    return this.time(-.01, !0);\n                }\n            }), r.borderTopStyle = \"solid\", e = $e(W), P.m = Math.round(e.top + P.sc()) || 0, E.m = Math.round(e.left + E.sc()) || 0, i ? r.borderTopStyle = i : r.removeProperty(\"border-top-style\"), j = setInterval(gt, 250), X.delayedCall(.5, ()=>we = 0), rt(N, \"touchcancel\", Ae), rt(W, \"touchstart\", Ae), tt(rt, N, \"pointerdown,touchstart,mousedown\", Me), tt(rt, N, \"pointerup,touchend,mouseup\", Oe), $ = X.utils.checkPrefix(\"transform\"), Dt.push($), z = _e(), q = X.delayedCall(.2, Pt).pause(), te = [\n                N,\n                \"visibilitychange\",\n                ()=>{\n                    let e = L.innerWidth, t = L.innerHeight;\n                    N.hidden ? (Q = e, ee = t) : Q === e && ee === t || mt();\n                },\n                N,\n                \"DOMContentLoaded\",\n                Pt,\n                L,\n                \"load\",\n                Pt,\n                L,\n                \"resize\",\n                mt\n            ], Le(rt), pt.forEach((e)=>e.enable(0, 1)), t = 0; t < v.length; t += 3)st(it, v[t], v[t + 1]), st(it, v[t], v[t + 2]);\n        }\n    }\n    static config(e) {\n        \"limitCallbacks\" in e && (me = !!e.limitCallbacks);\n        let t = e.syncInterval;\n        t && clearInterval(j) || (j = t) && setInterval(gt, t), \"ignoreMobileResize\" in e && (ae = 1 === Ut.isTouch && e.ignoreMobileResize), \"autoRefreshEvents\" in e && (Le(it) || Le(rt, e.autoRefreshEvents || \"none\"), se = -1 === (e.autoRefreshEvents + \"\").indexOf(\"resize\"));\n    }\n    static scrollerProxy(e, t) {\n        let r = M(e), i = v.indexOf(r), s = Be(r);\n        ~i && v.splice(i, s ? 6 : 2), t && (s ? y.unshift(L, t, W, t, F, t) : y.unshift(r, t));\n    }\n    static clearMatchMedia(e) {\n        pt.forEach((t)=>t._ctx && t._ctx.query === e && t._ctx.kill(!0, !0));\n    }\n    static isInViewport(e, t, r) {\n        let i = (Ne(e) ? M(e) : e).getBoundingClientRect(), s = i[r ? \"width\" : \"height\"] * t || 0;\n        return r ? i.right - s > 0 && i.left + s < L.innerWidth : i.bottom - s > 0 && i.top + s < L.innerHeight;\n    }\n    static positionInViewport(e, t, r) {\n        Ne(e) && (e = M(e));\n        let i = e.getBoundingClientRect(), s = i[r ? \"width\" : \"height\"], o = null == t ? s / 2 : t in nt ? nt[t] * s : ~t.indexOf(\"%\") ? parseFloat(t) * s / 100 : parseFloat(t) || 0;\n        return r ? (i.left + o) / L.innerWidth : (i.top + o) / L.innerHeight;\n    }\n    static killAll(e) {\n        if (pt.slice(0).forEach((e)=>\"ScrollSmoother\" !== e.vars.id && e.kill()), !0 !== e) {\n            let e = vt.killAll || [];\n            vt = {}, e.forEach((e)=>e());\n        }\n    }\n    constructor(e, t){\n        z || Ut.register(X) || console.warn(\"Please gsap.registerPlugin(ScrollTrigger)\"), de(this), this.init(e, t);\n    }\n}\nUt.version = \"3.12.5\", Ut.saveStyles = (e)=>e ? U(e).forEach((e)=>{\n        if (e && e.style) {\n            let t = wt.indexOf(e);\n            t >= 0 && wt.splice(t, 5), wt.push(e, e.style.cssText, e.getBBox && e.getAttribute(\"transform\"), X.core.getCache(e), de());\n        }\n    }) : wt, Ut.revert = (e, t)=>Tt(!e, t), Ut.create = (e, t)=>new Ut(e, t), Ut.refresh = (e)=>e ? mt() : (z || Ut.register()) && Pt(!0), Ut.update = (e)=>++v.cache && At(!0 === e ? 2 : 0), Ut.clearScrollMemory = kt, Ut.maxScroll = (e, t)=>ze(e, t ? E : P), Ut.getScrollFunc = (e, t)=>O(M(e), t ? E : P), Ut.getById = (e)=>ht[e], Ut.getAll = ()=>pt.filter((e)=>\"ScrollSmoother\" !== e.vars.id), Ut.isScrolling = ()=>!!ke, Ut.snapDirectional = et, Ut.addEventListener = (e, t)=>{\n    let r = vt[e] || (vt[e] = []);\n    ~r.indexOf(t) || r.push(t);\n}, Ut.removeEventListener = (e, t)=>{\n    let r = vt[e], i = r && r.indexOf(t);\n    i >= 0 && r.splice(i, 1);\n}, Ut.batch = (e, t)=>{\n    let r, i = [], s = {}, o = t.interval || .016, a = t.batchMax || 1e9, n = (e, t)=>{\n        let r = [], i = [], s = X.delayedCall(o, ()=>{\n            t(r, i), r = [], i = [];\n        }).pause();\n        return (e)=>{\n            r.length || s.restart(!0), r.push(e.trigger), i.push(e), a <= r.length && s.progress(1);\n        };\n    };\n    for(r in t)s[r] = \"on\" === r.substr(0, 2) && Fe(t[r]) && \"onRefreshInit\" !== r ? n(0, t[r]) : t[r];\n    return Fe(a) && (a = a(), rt(Ut, \"refresh\", ()=>a = t.batchMax())), U(e).forEach((e)=>{\n        let t = {};\n        for(r in s)t[r] = s[r];\n        t.trigger = e, i.push(Ut.create(t));\n    }), i;\n};\nlet Vt, Gt = (e, t, r, i)=>(t > i ? e(i) : t < 0 && e(0), r > i ? (i - t) / (r - t) : r < 0 ? t / (t - r) : 1), jt = (e, t)=>{\n    !0 === t ? e.style.removeProperty(\"touch-action\") : e.style.touchAction = !0 === t ? \"auto\" : t ? \"pan-\" + t + (I.isTouch ? \" pinch-zoom\" : \"\") : \"none\", e === F && jt(W, t);\n}, Kt = {\n    auto: 1,\n    scroll: 1\n}, Zt = (param)=>{\n    let { event: e, target: t, axis: r } = param;\n    let i, s = (e.changedTouches ? e.changedTouches[0] : e).target, o = s._gsap || X.core.getCache(s), a = _e();\n    if (!o._isScrollT || a - o._isScrollT > 2e3) {\n        for(; s && s !== W && (s.scrollHeight <= s.clientHeight && s.scrollWidth <= s.clientWidth || !Kt[(i = Ke(s)).overflowY] && !Kt[i.overflowX]);)s = s.parentNode;\n        o._isScroll = s && s !== t && !Be(s) && (Kt[(i = Ke(s)).overflowY] || Kt[i.overflowX]), o._isScrollT = a;\n    }\n    (o._isScroll || \"x\" === r) && (e.stopPropagation(), e._gsapAllow = !0);\n}, $t = (e, t, r, i)=>I.create({\n        target: e,\n        capture: !0,\n        debounce: !1,\n        lockAxis: !0,\n        type: t,\n        onWheel: i = i && Zt,\n        onPress: i,\n        onDrag: i,\n        onScroll: i,\n        onEnable: ()=>r && rt(N, I.eventTypes[0], Qt, !1, !0),\n        onDisable: ()=>it(N, I.eventTypes[0], Qt, !0)\n    }), Jt = /(input|label|select|textarea)/i, Qt = (e)=>{\n    let t = Jt.test(e.target.tagName);\n    (t || Vt) && (e._gsapAllow = !0, Vt = t);\n}, er = (e)=>{\n    He(e) || (e = {}), e.preventDefault = e.isNormalizer = e.allowClicks = !0, e.type || (e.type = \"wheel,touch\"), e.debounce = !!e.debounce, e.id = e.id || \"normalizer\";\n    let t, r, i, s, o, a, n, l, { normalizeScrollX: c, momentum: d, allowNestedScroll: p, onRelease: h } = e, g = M(e.target) || F, u = X.core.globals().ScrollSmoother, f = u && u.get(), m = ce && (e.content && M(e.content) || f && !1 !== e.content && !f.smooth() && f.content()), y = O(g, P), x = O(g, E), b = 1, w = (I.isTouch && L.visualViewport ? L.visualViewport.scale * L.visualViewport.width : L.outerWidth) / L.innerWidth, _ = 0, T = Fe(d) ? ()=>d(t) : ()=>d || 2.8, k = $t(g, e.type, !0, p), S = ()=>s = !1, C = Ae, A = Ae, R = ()=>{\n        r = ze(g, P), A = V(ce ? 1 : 0, r), c && (C = V(0, ze(g, E))), i = St;\n    }, D = ()=>{\n        m._gsap.y = Re(parseFloat(m._gsap.y) + y.offset) + \"px\", m.style.transform = \"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, \" + parseFloat(m._gsap.y) + \", 0, 1)\", y.offset = y.cacheID = 0;\n    }, Y = ()=>{\n        R(), o.isActive() && o.vars.scrollY > r && (y() > r ? o.progress(1) && y(r) : o.resetTo(\"scrollY\", r));\n    };\n    return m && X.set(m, {\n        y: \"+=0\"\n    }), e.ignoreCheck = (e)=>ce && \"touchmove\" === e.type && (()=>{\n            if (s) {\n                requestAnimationFrame(S);\n                let e = Re(t.deltaY / 2), r = A(y.v - e);\n                if (m && r !== y.v + y.offset) {\n                    y.offset = r - y.v;\n                    let e = Re((parseFloat(m && m._gsap.y) || 0) - y.offset);\n                    m.style.transform = \"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, \" + e + \", 0, 1)\", m._gsap.y = e + \"px\", y.cacheID = v.cache, At();\n                }\n                return !0;\n            }\n            y.offset && D(), s = !0;\n        })() || b > 1.05 && \"touchstart\" !== e.type || t.isGesturing || e.touches && e.touches.length > 1, e.onPress = ()=>{\n        s = !1;\n        let e = b;\n        b = Re((L.visualViewport && L.visualViewport.scale || 1) / w), o.pause(), e !== b && jt(g, b > 1.01 || !c && \"x\"), a = x(), n = y(), R(), i = St;\n    }, e.onRelease = e.onGestureStart = (e, t)=>{\n        if (y.offset && D(), t) {\n            v.cache++;\n            let t, i, s = T();\n            c && (t = x(), i = t + .05 * s * -e.velocityX / .227, s *= Gt(x, t, i, ze(g, E)), o.vars.scrollX = C(i)), t = y(), i = t + .05 * s * -e.velocityY / .227, s *= Gt(y, t, i, ze(g, P)), o.vars.scrollY = A(i), o.invalidate().duration(s).play(.01), (ce && o.vars.scrollY >= r || t >= r - 1) && X.to({}, {\n                onUpdate: Y,\n                duration: s\n            });\n        } else l.restart(!0);\n        h && h(e);\n    }, e.onWheel = ()=>{\n        o._ts && o.pause(), _e() - _ > 1e3 && (i = 0, _ = _e());\n    }, e.onChange = (e, t, r, s, o)=>{\n        if (St !== i && R(), t && c && x(C(s[2] === t ? a + (e.startX - e.x) : x() + t - s[1])), r) {\n            y.offset && D();\n            let t = o[2] === r, i = t ? n + e.startY - e.y : y() + r - o[1], s = A(i);\n            t && i !== s && (n += s - i), y(s);\n        }\n        (r || t) && At();\n    }, e.onEnable = ()=>{\n        jt(g, !c && \"x\"), Ut.addEventListener(\"refresh\", Y), rt(L, \"resize\", Y), y.smooth && (y.target.style.scrollBehavior = \"auto\", y.smooth = x.smooth = !1), k.enable();\n    }, e.onDisable = ()=>{\n        jt(g, !0), it(L, \"resize\", Y), Ut.removeEventListener(\"refresh\", Y), k.kill();\n    }, e.lockAxis = !1 !== e.lockAxis, t = new I(e), t.iOS = ce, ce && !y() && y(1), ce && X.ticker.add(Ae), l = t._dc, o = X.to(t, {\n        ease: \"power4\",\n        paused: !0,\n        inherit: !1,\n        scrollX: c ? \"+=0.1\" : \"+=0\",\n        scrollY: \"+=0.1\",\n        modifiers: {\n            scrollY: Wt(y, y(), ()=>o.pause())\n        },\n        onUpdate: At,\n        onComplete: l.vars.onComplete\n    }), t;\n};\nUt.sort = (e)=>pt.sort(e || ((e, t)=>-1e6 * (e.vars.refreshPriority || 0) + e.start - (t.start + -1e6 * (t.vars.refreshPriority || 0)))), Ut.observe = (e)=>new I(e), Ut.normalizeScroll = (e)=>{\n    if (void 0 === e) return oe;\n    if (!0 === e && oe) return oe.enable();\n    if (!1 === e) return oe && oe.kill(), void (oe = e);\n    let t = e instanceof I ? e : er(e);\n    return oe && oe.target === t.target && oe.kill(), Be(t.target) && (oe = t), t;\n}, Ut.core = {\n    _getVelocityProp: A,\n    _inputObserver: $t,\n    _scrollers: v,\n    _proxies: y,\n    bridge: {\n        ss: ()=>{\n            ke || bt(\"scrollStart\"), ke = _e();\n        },\n        ref: ()=>K\n    }\n}, Ye() && X.registerPlugin(Ut);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Ut);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/gsap-trial/ScrollTrigger.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/gsap/CSSPlugin.js":
/*!****************************************!*\
  !*** ./node_modules/gsap/CSSPlugin.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CSSPlugin: function() { return /* binding */ CSSPlugin; },\n/* harmony export */   _createElement: function() { return /* binding */ _createElement; },\n/* harmony export */   _getBBox: function() { return /* binding */ _getBBox; },\n/* harmony export */   checkPrefix: function() { return /* binding */ _checkPropPrefix; },\n/* harmony export */   \"default\": function() { return /* binding */ CSSPlugin; }\n/* harmony export */ });\n/* harmony import */ var _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gsap-core.js */ \"(app-pages-browser)/./node_modules/gsap/gsap-core.js\");\n/*!\n * CSSPlugin 3.12.5\n * https://gsap.com\n *\n * Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/ /* eslint-disable */ \nvar _win, _doc, _docElement, _pluginInitted, _tempDiv, _tempDivStyler, _recentSetterPlugin, _reverting, _windowExists = function _windowExists() {\n    return \"object\" !== \"undefined\";\n}, _transformProps = {}, _RAD2DEG = 180 / Math.PI, _DEG2RAD = Math.PI / 180, _atan2 = Math.atan2, _bigNum = 1e8, _capsExp = /([A-Z])/g, _horizontalExp = /(left|right|width|margin|padding|x)/i, _complexExp = /[\\s,\\(]\\S/, _propertyAliases = {\n    autoAlpha: \"opacity,visibility\",\n    scale: \"scaleX,scaleY\",\n    alpha: \"opacity\"\n}, _renderCSSProp = function _renderCSSProp(ratio, data) {\n    return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u, data);\n}, _renderPropWithEnd = function _renderPropWithEnd(ratio, data) {\n    return data.set(data.t, data.p, ratio === 1 ? data.e : Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u, data);\n}, _renderCSSPropWithBeginning = function _renderCSSPropWithBeginning(ratio, data) {\n    return data.set(data.t, data.p, ratio ? Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u : data.b, data);\n}, //if units change, we need a way to render the original unit/value when the tween goes all the way back to the beginning (ratio:0)\n_renderRoundedCSSProp = function _renderRoundedCSSProp(ratio, data) {\n    var value = data.s + data.c * ratio;\n    data.set(data.t, data.p, ~~(value + (value < 0 ? -.5 : .5)) + data.u, data);\n}, _renderNonTweeningValue = function _renderNonTweeningValue(ratio, data) {\n    return data.set(data.t, data.p, ratio ? data.e : data.b, data);\n}, _renderNonTweeningValueOnlyAtEnd = function _renderNonTweeningValueOnlyAtEnd(ratio, data) {\n    return data.set(data.t, data.p, ratio !== 1 ? data.b : data.e, data);\n}, _setterCSSStyle = function _setterCSSStyle(target, property, value) {\n    return target.style[property] = value;\n}, _setterCSSProp = function _setterCSSProp(target, property, value) {\n    return target.style.setProperty(property, value);\n}, _setterTransform = function _setterTransform(target, property, value) {\n    return target._gsap[property] = value;\n}, _setterScale = function _setterScale(target, property, value) {\n    return target._gsap.scaleX = target._gsap.scaleY = value;\n}, _setterScaleWithRender = function _setterScaleWithRender(target, property, value, data, ratio) {\n    var cache = target._gsap;\n    cache.scaleX = cache.scaleY = value;\n    cache.renderTransform(ratio, cache);\n}, _setterTransformWithRender = function _setterTransformWithRender(target, property, value, data, ratio) {\n    var cache = target._gsap;\n    cache[property] = value;\n    cache.renderTransform(ratio, cache);\n}, _transformProp = \"transform\", _transformOriginProp = _transformProp + \"Origin\", _saveStyle = function _saveStyle(property, isNotCSS) {\n    var _this = this;\n    var target = this.target, style = target.style, cache = target._gsap;\n    if (property in _transformProps && style) {\n        this.tfm = this.tfm || {};\n        if (property !== \"transform\") {\n            property = _propertyAliases[property] || property;\n            ~property.indexOf(\",\") ? property.split(\",\").forEach(function(a) {\n                return _this.tfm[a] = _get(target, a);\n            }) : this.tfm[property] = cache.x ? cache[property] : _get(target, property); // note: scale would map to \"scaleX,scaleY\", thus we loop and apply them both.\n            property === _transformOriginProp && (this.tfm.zOrigin = cache.zOrigin);\n        } else {\n            return _propertyAliases.transform.split(\",\").forEach(function(p) {\n                return _saveStyle.call(_this, p, isNotCSS);\n            });\n        }\n        if (this.props.indexOf(_transformProp) >= 0) {\n            return;\n        }\n        if (cache.svg) {\n            this.svgo = target.getAttribute(\"data-svg-origin\");\n            this.props.push(_transformOriginProp, isNotCSS, \"\");\n        }\n        property = _transformProp;\n    }\n    (style || isNotCSS) && this.props.push(property, isNotCSS, style[property]);\n}, _removeIndependentTransforms = function _removeIndependentTransforms(style) {\n    if (style.translate) {\n        style.removeProperty(\"translate\");\n        style.removeProperty(\"scale\");\n        style.removeProperty(\"rotate\");\n    }\n}, _revertStyle = function _revertStyle() {\n    var props = this.props, target = this.target, style = target.style, cache = target._gsap, i, p;\n    for(i = 0; i < props.length; i += 3){\n        // stored like this: property, isNotCSS, value\n        props[i + 1] ? target[props[i]] = props[i + 2] : props[i + 2] ? style[props[i]] = props[i + 2] : style.removeProperty(props[i].substr(0, 2) === \"--\" ? props[i] : props[i].replace(_capsExp, \"-$1\").toLowerCase());\n    }\n    if (this.tfm) {\n        for(p in this.tfm){\n            cache[p] = this.tfm[p];\n        }\n        if (cache.svg) {\n            cache.renderTransform();\n            target.setAttribute(\"data-svg-origin\", this.svgo || \"\");\n        }\n        i = _reverting();\n        if ((!i || !i.isStart) && !style[_transformProp]) {\n            _removeIndependentTransforms(style);\n            if (cache.zOrigin && style[_transformOriginProp]) {\n                style[_transformOriginProp] += \" \" + cache.zOrigin + \"px\"; // since we're uncaching, we must put the zOrigin back into the transformOrigin so that we can pull it out accurately when we parse again. Otherwise, we'd lose the z portion of the origin since we extract it to protect from Safari bugs.\n                cache.zOrigin = 0;\n                cache.renderTransform();\n            }\n            cache.uncache = 1; // if it's a startAt that's being reverted in the _initTween() of the core, we don't need to uncache transforms. This is purely a performance optimization.\n        }\n    }\n}, _getStyleSaver = function _getStyleSaver(target, properties) {\n    var saver = {\n        target: target,\n        props: [],\n        revert: _revertStyle,\n        save: _saveStyle\n    };\n    target._gsap || _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.gsap.core.getCache(target); // just make sure there's a _gsap cache defined because we read from it in _saveStyle() and it's more efficient to just check it here once.\n    properties && properties.split(\",\").forEach(function(p) {\n        return saver.save(p);\n    });\n    return saver;\n}, _supports3D, _createElement = function _createElement(type, ns) {\n    var e = _doc.createElementNS ? _doc.createElementNS((ns || \"http://www.w3.org/1999/xhtml\").replace(/^https/, \"http\"), type) : _doc.createElement(type); //some servers swap in https for http in the namespace which can break things, making \"style\" inaccessible.\n    return e && e.style ? e : _doc.createElement(type); //some environments won't allow access to the element's style when created with a namespace in which case we default to the standard createElement() to work around the issue. Also note that when GSAP is embedded directly inside an SVG file, createElement() won't allow access to the style object in Firefox (see https://gsap.com/forums/topic/20215-problem-using-tweenmax-in-standalone-self-containing-svg-file-err-cannot-set-property-csstext-of-undefined/).\n}, _getComputedProperty = function _getComputedProperty(target, property, skipPrefixFallback) {\n    var cs = getComputedStyle(target);\n    return cs[property] || cs.getPropertyValue(property.replace(_capsExp, \"-$1\").toLowerCase()) || cs.getPropertyValue(property) || !skipPrefixFallback && _getComputedProperty(target, _checkPropPrefix(property) || property, 1) || \"\"; //css variables may not need caps swapped out for dashes and lowercase.\n}, _prefixes = \"O,Moz,ms,Ms,Webkit\".split(\",\"), _checkPropPrefix = function _checkPropPrefix(property, element, preferPrefix) {\n    var e = element || _tempDiv, s = e.style, i = 5;\n    if (property in s && !preferPrefix) {\n        return property;\n    }\n    property = property.charAt(0).toUpperCase() + property.substr(1);\n    while(i-- && !(_prefixes[i] + property in s)){}\n    return i < 0 ? null : (i === 3 ? \"ms\" : i >= 0 ? _prefixes[i] : \"\") + property;\n}, _initCore = function _initCore() {\n    if (_windowExists() && window.document) {\n        _win = window;\n        _doc = _win.document;\n        _docElement = _doc.documentElement;\n        _tempDiv = _createElement(\"div\") || {\n            style: {}\n        };\n        _tempDivStyler = _createElement(\"div\");\n        _transformProp = _checkPropPrefix(_transformProp);\n        _transformOriginProp = _transformProp + \"Origin\";\n        _tempDiv.style.cssText = \"border-width:0;line-height:0;position:absolute;padding:0\"; //make sure to override certain properties that may contaminate measurements, in case the user has overreaching style sheets.\n        _supports3D = !!_checkPropPrefix(\"perspective\");\n        _reverting = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.gsap.core.reverting;\n        _pluginInitted = 1;\n    }\n}, _getBBoxHack = function _getBBoxHack(swapIfPossible) {\n    //works around issues in some browsers (like Firefox) that don't correctly report getBBox() on SVG elements inside a <defs> element and/or <mask>. We try creating an SVG, adding it to the documentElement and toss the element in there so that it's definitely part of the rendering tree, then grab the bbox and if it works, we actually swap out the original getBBox() method for our own that does these extra steps whenever getBBox is needed. This helps ensure that performance is optimal (only do all these extra steps when absolutely necessary...most elements don't need it).\n    var svg = _createElement(\"svg\", this.ownerSVGElement && this.ownerSVGElement.getAttribute(\"xmlns\") || \"http://www.w3.org/2000/svg\"), oldParent = this.parentNode, oldSibling = this.nextSibling, oldCSS = this.style.cssText, bbox;\n    _docElement.appendChild(svg);\n    svg.appendChild(this);\n    this.style.display = \"block\";\n    if (swapIfPossible) {\n        try {\n            bbox = this.getBBox();\n            this._gsapBBox = this.getBBox; //store the original\n            this.getBBox = _getBBoxHack;\n        } catch (e) {}\n    } else if (this._gsapBBox) {\n        bbox = this._gsapBBox();\n    }\n    if (oldParent) {\n        if (oldSibling) {\n            oldParent.insertBefore(this, oldSibling);\n        } else {\n            oldParent.appendChild(this);\n        }\n    }\n    _docElement.removeChild(svg);\n    this.style.cssText = oldCSS;\n    return bbox;\n}, _getAttributeFallbacks = function _getAttributeFallbacks(target, attributesArray) {\n    var i = attributesArray.length;\n    while(i--){\n        if (target.hasAttribute(attributesArray[i])) {\n            return target.getAttribute(attributesArray[i]);\n        }\n    }\n}, _getBBox = function _getBBox(target) {\n    var bounds;\n    try {\n        bounds = target.getBBox(); //Firefox throws errors if you try calling getBBox() on an SVG element that's not rendered (like in a <symbol> or <defs>). https://bugzilla.mozilla.org/show_bug.cgi?id=612118\n    } catch (error) {\n        bounds = _getBBoxHack.call(target, true);\n    }\n    bounds && (bounds.width || bounds.height) || target.getBBox === _getBBoxHack || (bounds = _getBBoxHack.call(target, true)); //some browsers (like Firefox) misreport the bounds if the element has zero width and height (it just assumes it's at x:0, y:0), thus we need to manually grab the position in that case.\n    return bounds && !bounds.width && !bounds.x && !bounds.y ? {\n        x: +_getAttributeFallbacks(target, [\n            \"x\",\n            \"cx\",\n            \"x1\"\n        ]) || 0,\n        y: +_getAttributeFallbacks(target, [\n            \"y\",\n            \"cy\",\n            \"y1\"\n        ]) || 0,\n        width: 0,\n        height: 0\n    } : bounds;\n}, _isSVG = function _isSVG(e) {\n    return !!(e.getCTM && (!e.parentNode || e.ownerSVGElement) && _getBBox(e));\n}, //reports if the element is an SVG on which getBBox() actually works\n_removeProperty = function _removeProperty(target, property) {\n    if (property) {\n        var style = target.style, first2Chars;\n        if (property in _transformProps && property !== _transformOriginProp) {\n            property = _transformProp;\n        }\n        if (style.removeProperty) {\n            first2Chars = property.substr(0, 2);\n            if (first2Chars === \"ms\" || property.substr(0, 6) === \"webkit\") {\n                //Microsoft and some Webkit browsers don't conform to the standard of capitalizing the first prefix character, so we adjust so that when we prefix the caps with a dash, it's correct (otherwise it'd be \"ms-transform\" instead of \"-ms-transform\" for IE9, for example)\n                property = \"-\" + property;\n            }\n            style.removeProperty(first2Chars === \"--\" ? property : property.replace(_capsExp, \"-$1\").toLowerCase());\n        } else {\n            //note: old versions of IE use \"removeAttribute()\" instead of \"removeProperty()\"\n            style.removeAttribute(property);\n        }\n    }\n}, _addNonTweeningPT = function _addNonTweeningPT(plugin, target, property, beginning, end, onlySetAtEnd) {\n    var pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.PropTween(plugin._pt, target, property, 0, 1, onlySetAtEnd ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue);\n    plugin._pt = pt;\n    pt.b = beginning;\n    pt.e = end;\n    plugin._props.push(property);\n    return pt;\n}, _nonConvertibleUnits = {\n    deg: 1,\n    rad: 1,\n    turn: 1\n}, _nonStandardLayouts = {\n    grid: 1,\n    flex: 1\n}, //takes a single value like 20px and converts it to the unit specified, like \"%\", returning only the numeric amount.\n_convertToUnit = function _convertToUnit(target, property, value, unit) {\n    var curValue = parseFloat(value) || 0, curUnit = (value + \"\").trim().substr((curValue + \"\").length) || \"px\", // some browsers leave extra whitespace at the beginning of CSS variables, hence the need to trim()\n    style = _tempDiv.style, horizontal = _horizontalExp.test(property), isRootSVG = target.tagName.toLowerCase() === \"svg\", measureProperty = (isRootSVG ? \"client\" : \"offset\") + (horizontal ? \"Width\" : \"Height\"), amount = 100, toPixels = unit === \"px\", toPercent = unit === \"%\", px, parent, cache, isSVG;\n    if (unit === curUnit || !curValue || _nonConvertibleUnits[unit] || _nonConvertibleUnits[curUnit]) {\n        return curValue;\n    }\n    curUnit !== \"px\" && !toPixels && (curValue = _convertToUnit(target, property, value, \"px\"));\n    isSVG = target.getCTM && _isSVG(target);\n    if ((toPercent || curUnit === \"%\") && (_transformProps[property] || ~property.indexOf(\"adius\"))) {\n        px = isSVG ? target.getBBox()[horizontal ? \"width\" : \"height\"] : target[measureProperty];\n        return (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(toPercent ? curValue / px * amount : curValue / 100 * px);\n    }\n    style[horizontal ? \"width\" : \"height\"] = amount + (toPixels ? curUnit : unit);\n    parent = ~property.indexOf(\"adius\") || unit === \"em\" && target.appendChild && !isRootSVG ? target : target.parentNode;\n    if (isSVG) {\n        parent = (target.ownerSVGElement || {}).parentNode;\n    }\n    if (!parent || parent === _doc || !parent.appendChild) {\n        parent = _doc.body;\n    }\n    cache = parent._gsap;\n    if (cache && toPercent && cache.width && horizontal && cache.time === _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._ticker.time && !cache.uncache) {\n        return (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(curValue / cache.width * amount);\n    } else {\n        if (toPercent && (property === \"height\" || property === \"width\")) {\n            // if we're dealing with width/height that's inside a container with padding and/or it's a flexbox/grid container, we must apply it to the target itself rather than the _tempDiv in order to ensure complete accuracy, factoring in the parent's padding.\n            var v = target.style[property];\n            target.style[property] = amount + unit;\n            px = target[measureProperty];\n            v ? target.style[property] = v : _removeProperty(target, property);\n        } else {\n            (toPercent || curUnit === \"%\") && !_nonStandardLayouts[_getComputedProperty(parent, \"display\")] && (style.position = _getComputedProperty(target, \"position\"));\n            parent === target && (style.position = \"static\"); // like for borderRadius, if it's a % we must have it relative to the target itself but that may not have position: relative or position: absolute in which case it'd go up the chain until it finds its offsetParent (bad). position: static protects against that.\n            parent.appendChild(_tempDiv);\n            px = _tempDiv[measureProperty];\n            parent.removeChild(_tempDiv);\n            style.position = \"absolute\";\n        }\n        if (horizontal && toPercent) {\n            cache = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._getCache)(parent);\n            cache.time = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._ticker.time;\n            cache.width = parent[measureProperty];\n        }\n    }\n    return (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(toPixels ? px * curValue / amount : px && curValue ? amount / px * curValue : 0);\n}, _get = function _get(target, property, unit, uncache) {\n    var value;\n    _pluginInitted || _initCore();\n    if (property in _propertyAliases && property !== \"transform\") {\n        property = _propertyAliases[property];\n        if (~property.indexOf(\",\")) {\n            property = property.split(\",\")[0];\n        }\n    }\n    if (_transformProps[property] && property !== \"transform\") {\n        value = _parseTransform(target, uncache);\n        value = property !== \"transformOrigin\" ? value[property] : value.svg ? value.origin : _firstTwoOnly(_getComputedProperty(target, _transformOriginProp)) + \" \" + value.zOrigin + \"px\";\n    } else {\n        value = target.style[property];\n        if (!value || value === \"auto\" || uncache || ~(value + \"\").indexOf(\"calc(\")) {\n            value = _specialProps[property] && _specialProps[property](target, property, unit) || _getComputedProperty(target, property) || (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._getProperty)(target, property) || (property === \"opacity\" ? 1 : 0); // note: some browsers, like Firefox, don't report borderRadius correctly! Instead, it only reports every corner like  borderTopLeftRadius\n        }\n    }\n    return unit && !~(value + \"\").trim().indexOf(\" \") ? _convertToUnit(target, property, value, unit) + unit : value;\n}, _tweenComplexCSSString = function _tweenComplexCSSString(target, prop, start, end) {\n    // note: we call _tweenComplexCSSString.call(pluginInstance...) to ensure that it's scoped properly. We may call it from within a plugin too, thus \"this\" would refer to the plugin.\n    if (!start || start === \"none\") {\n        // some browsers like Safari actually PREFER the prefixed property and mis-report the unprefixed value like clipPath (BUG). In other words, even though clipPath exists in the style (\"clipPath\" in target.style) and it's set in the CSS properly (along with -webkit-clip-path), Safari reports clipPath as \"none\" whereas WebkitClipPath reports accurately like \"ellipse(100% 0% at 50% 0%)\", so in this case we must SWITCH to using the prefixed property instead. See https://gsap.com/forums/topic/18310-clippath-doesnt-work-on-ios/\n        var p = _checkPropPrefix(prop, target, 1), s = p && _getComputedProperty(target, p, 1);\n        if (s && s !== start) {\n            prop = p;\n            start = s;\n        } else if (prop === \"borderColor\") {\n            start = _getComputedProperty(target, \"borderTopColor\"); // Firefox bug: always reports \"borderColor\" as \"\", so we must fall back to borderTopColor. See https://gsap.com/forums/topic/24583-how-to-return-colors-that-i-had-after-reverse/\n        }\n    }\n    var pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.PropTween(this._pt, target.style, prop, 0, 1, _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._renderComplexString), index = 0, matchIndex = 0, a, result, startValues, startNum, color, startValue, endValue, endNum, chunk, endUnit, startUnit, endValues;\n    pt.b = start;\n    pt.e = end;\n    start += \"\"; // ensure values are strings\n    end += \"\";\n    if (end === \"auto\") {\n        startValue = target.style[prop];\n        target.style[prop] = end;\n        end = _getComputedProperty(target, prop) || end;\n        startValue ? target.style[prop] = startValue : _removeProperty(target, prop);\n    }\n    a = [\n        start,\n        end\n    ];\n    (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._colorStringFilter)(a); // pass an array with the starting and ending values and let the filter do whatever it needs to the values. If colors are found, it returns true and then we must match where the color shows up order-wise because for things like boxShadow, sometimes the browser provides the computed values with the color FIRST, but the user provides it with the color LAST, so flip them if necessary. Same for drop-shadow().\n    start = a[0];\n    end = a[1];\n    startValues = start.match(_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._numWithUnitExp) || [];\n    endValues = end.match(_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._numWithUnitExp) || [];\n    if (endValues.length) {\n        while(result = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._numWithUnitExp.exec(end)){\n            endValue = result[0];\n            chunk = end.substring(index, result.index);\n            if (color) {\n                color = (color + 1) % 5;\n            } else if (chunk.substr(-5) === \"rgba(\" || chunk.substr(-5) === \"hsla(\") {\n                color = 1;\n            }\n            if (endValue !== (startValue = startValues[matchIndex++] || \"\")) {\n                startNum = parseFloat(startValue) || 0;\n                startUnit = startValue.substr((startNum + \"\").length);\n                endValue.charAt(1) === \"=\" && (endValue = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._parseRelative)(startNum, endValue) + startUnit);\n                endNum = parseFloat(endValue);\n                endUnit = endValue.substr((endNum + \"\").length);\n                index = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._numWithUnitExp.lastIndex - endUnit.length;\n                if (!endUnit) {\n                    //if something like \"perspective:300\" is passed in and we must add a unit to the end\n                    endUnit = endUnit || _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._config.units[prop] || startUnit;\n                    if (index === end.length) {\n                        end += endUnit;\n                        pt.e += endUnit;\n                    }\n                }\n                if (startUnit !== endUnit) {\n                    startNum = _convertToUnit(target, prop, startValue, endUnit) || 0;\n                } // these nested PropTweens are handled in a special way - we'll never actually call a render or setter method on them. We'll just loop through them in the parent complex string PropTween's render method.\n                pt._pt = {\n                    _next: pt._pt,\n                    p: chunk || matchIndex === 1 ? chunk : \",\",\n                    //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.\n                    s: startNum,\n                    c: endNum - startNum,\n                    m: color && color < 4 || prop === \"zIndex\" ? Math.round : 0\n                };\n            }\n        }\n        pt.c = index < end.length ? end.substring(index, end.length) : \"\"; //we use the \"c\" of the PropTween to store the final part of the string (after the last number)\n    } else {\n        pt.r = prop === \"display\" && end === \"none\" ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue;\n    }\n    _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._relExp.test(end) && (pt.e = 0); //if the end string contains relative values or dynamic random(...) values, delete the end it so that on the final render we don't actually set it to the string with += or -= characters (forces it to use the calculated value).\n    this._pt = pt; //start the linked list with this new PropTween. Remember, we call _tweenComplexCSSString.call(pluginInstance...) to ensure that it's scoped properly. We may call it from within another plugin too, thus \"this\" would refer to the plugin.\n    return pt;\n}, _keywordToPercent = {\n    top: \"0%\",\n    bottom: \"100%\",\n    left: \"0%\",\n    right: \"100%\",\n    center: \"50%\"\n}, _convertKeywordsToPercentages = function _convertKeywordsToPercentages(value) {\n    var split = value.split(\" \"), x = split[0], y = split[1] || \"50%\";\n    if (x === \"top\" || x === \"bottom\" || y === \"left\" || y === \"right\") {\n        //the user provided them in the wrong order, so flip them\n        value = x;\n        x = y;\n        y = value;\n    }\n    split[0] = _keywordToPercent[x] || x;\n    split[1] = _keywordToPercent[y] || y;\n    return split.join(\" \");\n}, _renderClearProps = function _renderClearProps(ratio, data) {\n    if (data.tween && data.tween._time === data.tween._dur) {\n        var target = data.t, style = target.style, props = data.u, cache = target._gsap, prop, clearTransforms, i;\n        if (props === \"all\" || props === true) {\n            style.cssText = \"\";\n            clearTransforms = 1;\n        } else {\n            props = props.split(\",\");\n            i = props.length;\n            while(--i > -1){\n                prop = props[i];\n                if (_transformProps[prop]) {\n                    clearTransforms = 1;\n                    prop = prop === \"transformOrigin\" ? _transformOriginProp : _transformProp;\n                }\n                _removeProperty(target, prop);\n            }\n        }\n        if (clearTransforms) {\n            _removeProperty(target, _transformProp);\n            if (cache) {\n                cache.svg && target.removeAttribute(\"transform\");\n                _parseTransform(target, 1); // force all the cached values back to \"normal\"/identity, otherwise if there's another tween that's already set to render transforms on this element, it could display the wrong values.\n                cache.uncache = 1;\n                _removeIndependentTransforms(style);\n            }\n        }\n    }\n}, // note: specialProps should return 1 if (and only if) they have a non-zero priority. It indicates we need to sort the linked list.\n_specialProps = {\n    clearProps: function clearProps(plugin, target, property, endValue, tween) {\n        if (tween.data !== \"isFromStart\") {\n            var pt = plugin._pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.PropTween(plugin._pt, target, property, 0, 0, _renderClearProps);\n            pt.u = endValue;\n            pt.pr = -10;\n            pt.tween = tween;\n            plugin._props.push(property);\n            return 1;\n        }\n    }\n}, /*\n * --------------------------------------------------------------------------------------\n * TRANSFORMS\n * --------------------------------------------------------------------------------------\n */ _identity2DMatrix = [\n    1,\n    0,\n    0,\n    1,\n    0,\n    0\n], _rotationalProperties = {}, _isNullTransform = function _isNullTransform(value) {\n    return value === \"matrix(1, 0, 0, 1, 0, 0)\" || value === \"none\" || !value;\n}, _getComputedTransformMatrixAsArray = function _getComputedTransformMatrixAsArray(target) {\n    var matrixString = _getComputedProperty(target, _transformProp);\n    return _isNullTransform(matrixString) ? _identity2DMatrix : matrixString.substr(7).match(_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._numExp).map(_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round);\n}, _getMatrix = function _getMatrix(target, force2D) {\n    var cache = target._gsap || (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._getCache)(target), style = target.style, matrix = _getComputedTransformMatrixAsArray(target), parent, nextSibling, temp, addedToDOM;\n    if (cache.svg && target.getAttribute(\"transform\")) {\n        temp = target.transform.baseVal.consolidate().matrix; //ensures that even complex values like \"translate(50,60) rotate(135,0,0)\" are parsed because it mashes it into a matrix.\n        matrix = [\n            temp.a,\n            temp.b,\n            temp.c,\n            temp.d,\n            temp.e,\n            temp.f\n        ];\n        return matrix.join(\",\") === \"1,0,0,1,0,0\" ? _identity2DMatrix : matrix;\n    } else if (matrix === _identity2DMatrix && !target.offsetParent && target !== _docElement && !cache.svg) {\n        //note: if offsetParent is null, that means the element isn't in the normal document flow, like if it has display:none or one of its ancestors has display:none). Firefox returns null for getComputedStyle() if the element is in an iframe that has display:none. https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        //browsers don't report transforms accurately unless the element is in the DOM and has a display value that's not \"none\". Firefox and Microsoft browsers have a partial bug where they'll report transforms even if display:none BUT not any percentage-based values like translate(-50%, 8px) will be reported as if it's translate(0, 8px).\n        temp = style.display;\n        style.display = \"block\";\n        parent = target.parentNode;\n        if (!parent || !target.offsetParent) {\n            // note: in 3.3.0 we switched target.offsetParent to _doc.body.contains(target) to avoid [sometimes unnecessary] MutationObserver calls but that wasn't adequate because there are edge cases where nested position: fixed elements need to get reparented to accurately sense transforms. See https://github.com/greensock/GSAP/issues/388 and https://github.com/greensock/GSAP/issues/375\n            addedToDOM = 1; //flag\n            nextSibling = target.nextElementSibling;\n            _docElement.appendChild(target); //we must add it to the DOM in order to get values properly\n        }\n        matrix = _getComputedTransformMatrixAsArray(target);\n        temp ? style.display = temp : _removeProperty(target, \"display\");\n        if (addedToDOM) {\n            nextSibling ? parent.insertBefore(target, nextSibling) : parent ? parent.appendChild(target) : _docElement.removeChild(target);\n        }\n    }\n    return force2D && matrix.length > 6 ? [\n        matrix[0],\n        matrix[1],\n        matrix[4],\n        matrix[5],\n        matrix[12],\n        matrix[13]\n    ] : matrix;\n}, _applySVGOrigin = function _applySVGOrigin(target, origin, originIsAbsolute, smooth, matrixArray, pluginToAddPropTweensTo) {\n    var cache = target._gsap, matrix = matrixArray || _getMatrix(target, true), xOriginOld = cache.xOrigin || 0, yOriginOld = cache.yOrigin || 0, xOffsetOld = cache.xOffset || 0, yOffsetOld = cache.yOffset || 0, a = matrix[0], b = matrix[1], c = matrix[2], d = matrix[3], tx = matrix[4], ty = matrix[5], originSplit = origin.split(\" \"), xOrigin = parseFloat(originSplit[0]) || 0, yOrigin = parseFloat(originSplit[1]) || 0, bounds, determinant, x, y;\n    if (!originIsAbsolute) {\n        bounds = _getBBox(target);\n        xOrigin = bounds.x + (~originSplit[0].indexOf(\"%\") ? xOrigin / 100 * bounds.width : xOrigin);\n        yOrigin = bounds.y + (~(originSplit[1] || originSplit[0]).indexOf(\"%\") ? yOrigin / 100 * bounds.height : yOrigin); // if (!(\"xOrigin\" in cache) && (xOrigin || yOrigin)) { // added in 3.12.3, reverted in 3.12.4; requires more exploration\n    // \txOrigin -= bounds.x;\n    // \tyOrigin -= bounds.y;\n    // }\n    } else if (matrix !== _identity2DMatrix && (determinant = a * d - b * c)) {\n        //if it's zero (like if scaleX and scaleY are zero), skip it to avoid errors with dividing by zero.\n        x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;\n        y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;\n        xOrigin = x;\n        yOrigin = y; // theory: we only had to do this for smoothing and it assumes that the previous one was not originIsAbsolute.\n    }\n    if (smooth || smooth !== false && cache.smooth) {\n        tx = xOrigin - xOriginOld;\n        ty = yOrigin - yOriginOld;\n        cache.xOffset = xOffsetOld + (tx * a + ty * c) - tx;\n        cache.yOffset = yOffsetOld + (tx * b + ty * d) - ty;\n    } else {\n        cache.xOffset = cache.yOffset = 0;\n    }\n    cache.xOrigin = xOrigin;\n    cache.yOrigin = yOrigin;\n    cache.smooth = !!smooth;\n    cache.origin = origin;\n    cache.originIsAbsolute = !!originIsAbsolute;\n    target.style[_transformOriginProp] = \"0px 0px\"; //otherwise, if someone sets  an origin via CSS, it will likely interfere with the SVG transform attribute ones (because remember, we're baking the origin into the matrix() value).\n    if (pluginToAddPropTweensTo) {\n        _addNonTweeningPT(pluginToAddPropTweensTo, cache, \"xOrigin\", xOriginOld, xOrigin);\n        _addNonTweeningPT(pluginToAddPropTweensTo, cache, \"yOrigin\", yOriginOld, yOrigin);\n        _addNonTweeningPT(pluginToAddPropTweensTo, cache, \"xOffset\", xOffsetOld, cache.xOffset);\n        _addNonTweeningPT(pluginToAddPropTweensTo, cache, \"yOffset\", yOffsetOld, cache.yOffset);\n    }\n    target.setAttribute(\"data-svg-origin\", xOrigin + \" \" + yOrigin);\n}, _parseTransform = function _parseTransform(target, uncache) {\n    var cache = target._gsap || new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.GSCache(target);\n    if (\"x\" in cache && !uncache && !cache.uncache) {\n        return cache;\n    }\n    var style = target.style, invertedScaleX = cache.scaleX < 0, px = \"px\", deg = \"deg\", cs = getComputedStyle(target), origin = _getComputedProperty(target, _transformOriginProp) || \"0\", x, y, z, scaleX, scaleY, rotation, rotationX, rotationY, skewX, skewY, perspective, xOrigin, yOrigin, matrix, angle, cos, sin, a, b, c, d, a12, a22, t1, t2, t3, a13, a23, a33, a42, a43, a32;\n    x = y = z = rotation = rotationX = rotationY = skewX = skewY = perspective = 0;\n    scaleX = scaleY = 1;\n    cache.svg = !!(target.getCTM && _isSVG(target));\n    if (cs.translate) {\n        // accommodate independent transforms by combining them into normal ones.\n        if (cs.translate !== \"none\" || cs.scale !== \"none\" || cs.rotate !== \"none\") {\n            style[_transformProp] = (cs.translate !== \"none\" ? \"translate3d(\" + (cs.translate + \" 0 0\").split(\" \").slice(0, 3).join(\", \") + \") \" : \"\") + (cs.rotate !== \"none\" ? \"rotate(\" + cs.rotate + \") \" : \"\") + (cs.scale !== \"none\" ? \"scale(\" + cs.scale.split(\" \").join(\",\") + \") \" : \"\") + (cs[_transformProp] !== \"none\" ? cs[_transformProp] : \"\");\n        }\n        style.scale = style.rotate = style.translate = \"none\";\n    }\n    matrix = _getMatrix(target, cache.svg);\n    if (cache.svg) {\n        if (cache.uncache) {\n            // if cache.uncache is true (and maybe if origin is 0,0), we need to set element.style.transformOrigin = (cache.xOrigin - bbox.x) + \"px \" + (cache.yOrigin - bbox.y) + \"px\". Previously we let the data-svg-origin stay instead, but when introducing revert(), it complicated things.\n            t2 = target.getBBox();\n            origin = cache.xOrigin - t2.x + \"px \" + (cache.yOrigin - t2.y) + \"px\";\n            t1 = \"\";\n        } else {\n            t1 = !uncache && target.getAttribute(\"data-svg-origin\"); //  Remember, to work around browser inconsistencies we always force SVG elements' transformOrigin to 0,0 and offset the translation accordingly.\n        }\n        _applySVGOrigin(target, t1 || origin, !!t1 || cache.originIsAbsolute, cache.smooth !== false, matrix);\n    }\n    xOrigin = cache.xOrigin || 0;\n    yOrigin = cache.yOrigin || 0;\n    if (matrix !== _identity2DMatrix) {\n        a = matrix[0]; //a11\n        b = matrix[1]; //a21\n        c = matrix[2]; //a31\n        d = matrix[3]; //a41\n        x = a12 = matrix[4];\n        y = a22 = matrix[5]; //2D matrix\n        if (matrix.length === 6) {\n            scaleX = Math.sqrt(a * a + b * b);\n            scaleY = Math.sqrt(d * d + c * c);\n            rotation = a || b ? _atan2(b, a) * _RAD2DEG : 0; //note: if scaleX is 0, we cannot accurately measure rotation. Same for skewX with a scaleY of 0. Therefore, we default to the previously recorded value (or zero if that doesn't exist).\n            skewX = c || d ? _atan2(c, d) * _RAD2DEG + rotation : 0;\n            skewX && (scaleY *= Math.abs(Math.cos(skewX * _DEG2RAD)));\n            if (cache.svg) {\n                x -= xOrigin - (xOrigin * a + yOrigin * c);\n                y -= yOrigin - (xOrigin * b + yOrigin * d);\n            } //3D matrix\n        } else {\n            a32 = matrix[6];\n            a42 = matrix[7];\n            a13 = matrix[8];\n            a23 = matrix[9];\n            a33 = matrix[10];\n            a43 = matrix[11];\n            x = matrix[12];\n            y = matrix[13];\n            z = matrix[14];\n            angle = _atan2(a32, a33);\n            rotationX = angle * _RAD2DEG; //rotationX\n            if (angle) {\n                cos = Math.cos(-angle);\n                sin = Math.sin(-angle);\n                t1 = a12 * cos + a13 * sin;\n                t2 = a22 * cos + a23 * sin;\n                t3 = a32 * cos + a33 * sin;\n                a13 = a12 * -sin + a13 * cos;\n                a23 = a22 * -sin + a23 * cos;\n                a33 = a32 * -sin + a33 * cos;\n                a43 = a42 * -sin + a43 * cos;\n                a12 = t1;\n                a22 = t2;\n                a32 = t3;\n            } //rotationY\n            angle = _atan2(-c, a33);\n            rotationY = angle * _RAD2DEG;\n            if (angle) {\n                cos = Math.cos(-angle);\n                sin = Math.sin(-angle);\n                t1 = a * cos - a13 * sin;\n                t2 = b * cos - a23 * sin;\n                t3 = c * cos - a33 * sin;\n                a43 = d * sin + a43 * cos;\n                a = t1;\n                b = t2;\n                c = t3;\n            } //rotationZ\n            angle = _atan2(b, a);\n            rotation = angle * _RAD2DEG;\n            if (angle) {\n                cos = Math.cos(angle);\n                sin = Math.sin(angle);\n                t1 = a * cos + b * sin;\n                t2 = a12 * cos + a22 * sin;\n                b = b * cos - a * sin;\n                a22 = a22 * cos - a12 * sin;\n                a = t1;\n                a12 = t2;\n            }\n            if (rotationX && Math.abs(rotationX) + Math.abs(rotation) > 359.9) {\n                //when rotationY is set, it will often be parsed as 180 degrees different than it should be, and rotationX and rotation both being 180 (it looks the same), so we adjust for that here.\n                rotationX = rotation = 0;\n                rotationY = 180 - rotationY;\n            }\n            scaleX = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(Math.sqrt(a * a + b * b + c * c));\n            scaleY = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(Math.sqrt(a22 * a22 + a32 * a32));\n            angle = _atan2(a12, a22);\n            skewX = Math.abs(angle) > 0.0002 ? angle * _RAD2DEG : 0;\n            perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;\n        }\n        if (cache.svg) {\n            //sense if there are CSS transforms applied on an SVG element in which case we must overwrite them when rendering. The transform attribute is more reliable cross-browser, but we can't just remove the CSS ones because they may be applied in a CSS rule somewhere (not just inline).\n            t1 = target.getAttribute(\"transform\");\n            cache.forceCSS = target.setAttribute(\"transform\", \"\") || !_isNullTransform(_getComputedProperty(target, _transformProp));\n            t1 && target.setAttribute(\"transform\", t1);\n        }\n    }\n    if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {\n        if (invertedScaleX) {\n            scaleX *= -1;\n            skewX += rotation <= 0 ? 180 : -180;\n            rotation += rotation <= 0 ? 180 : -180;\n        } else {\n            scaleY *= -1;\n            skewX += skewX <= 0 ? 180 : -180;\n        }\n    }\n    uncache = uncache || cache.uncache;\n    cache.x = x - ((cache.xPercent = x && (!uncache && cache.xPercent || (Math.round(target.offsetWidth / 2) === Math.round(-x) ? -50 : 0))) ? target.offsetWidth * cache.xPercent / 100 : 0) + px;\n    cache.y = y - ((cache.yPercent = y && (!uncache && cache.yPercent || (Math.round(target.offsetHeight / 2) === Math.round(-y) ? -50 : 0))) ? target.offsetHeight * cache.yPercent / 100 : 0) + px;\n    cache.z = z + px;\n    cache.scaleX = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(scaleX);\n    cache.scaleY = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(scaleY);\n    cache.rotation = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(rotation) + deg;\n    cache.rotationX = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(rotationX) + deg;\n    cache.rotationY = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(rotationY) + deg;\n    cache.skewX = skewX + deg;\n    cache.skewY = skewY + deg;\n    cache.transformPerspective = perspective + px;\n    if (cache.zOrigin = parseFloat(origin.split(\" \")[2]) || !uncache && cache.zOrigin || 0) {\n        style[_transformOriginProp] = _firstTwoOnly(origin);\n    }\n    cache.xOffset = cache.yOffset = 0;\n    cache.force3D = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._config.force3D;\n    cache.renderTransform = cache.svg ? _renderSVGTransforms : _supports3D ? _renderCSSTransforms : _renderNon3DTransforms;\n    cache.uncache = 0;\n    return cache;\n}, _firstTwoOnly = function _firstTwoOnly(value) {\n    return (value = value.split(\" \"))[0] + \" \" + value[1];\n}, //for handling transformOrigin values, stripping out the 3rd dimension\n_addPxTranslate = function _addPxTranslate(target, start, value) {\n    var unit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.getUnit)(start);\n    return (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(parseFloat(start) + parseFloat(_convertToUnit(target, \"x\", value + \"px\", unit))) + unit;\n}, _renderNon3DTransforms = function _renderNon3DTransforms(ratio, cache) {\n    cache.z = \"0px\";\n    cache.rotationY = cache.rotationX = \"0deg\";\n    cache.force3D = 0;\n    _renderCSSTransforms(ratio, cache);\n}, _zeroDeg = \"0deg\", _zeroPx = \"0px\", _endParenthesis = \") \", _renderCSSTransforms = function _renderCSSTransforms(ratio, cache) {\n    var _ref = cache || this, xPercent = _ref.xPercent, yPercent = _ref.yPercent, x = _ref.x, y = _ref.y, z = _ref.z, rotation = _ref.rotation, rotationY = _ref.rotationY, rotationX = _ref.rotationX, skewX = _ref.skewX, skewY = _ref.skewY, scaleX = _ref.scaleX, scaleY = _ref.scaleY, transformPerspective = _ref.transformPerspective, force3D = _ref.force3D, target = _ref.target, zOrigin = _ref.zOrigin, transforms = \"\", use3D = force3D === \"auto\" && ratio && ratio !== 1 || force3D === true; // Safari has a bug that causes it not to render 3D transform-origin values properly, so we force the z origin to 0, record it in the cache, and then do the math here to offset the translate values accordingly (basically do the 3D transform-origin part manually)\n    if (zOrigin && (rotationX !== _zeroDeg || rotationY !== _zeroDeg)) {\n        var angle = parseFloat(rotationY) * _DEG2RAD, a13 = Math.sin(angle), a33 = Math.cos(angle), cos;\n        angle = parseFloat(rotationX) * _DEG2RAD;\n        cos = Math.cos(angle);\n        x = _addPxTranslate(target, x, a13 * cos * -zOrigin);\n        y = _addPxTranslate(target, y, -Math.sin(angle) * -zOrigin);\n        z = _addPxTranslate(target, z, a33 * cos * -zOrigin + zOrigin);\n    }\n    if (transformPerspective !== _zeroPx) {\n        transforms += \"perspective(\" + transformPerspective + _endParenthesis;\n    }\n    if (xPercent || yPercent) {\n        transforms += \"translate(\" + xPercent + \"%, \" + yPercent + \"%) \";\n    }\n    if (use3D || x !== _zeroPx || y !== _zeroPx || z !== _zeroPx) {\n        transforms += z !== _zeroPx || use3D ? \"translate3d(\" + x + \", \" + y + \", \" + z + \") \" : \"translate(\" + x + \", \" + y + _endParenthesis;\n    }\n    if (rotation !== _zeroDeg) {\n        transforms += \"rotate(\" + rotation + _endParenthesis;\n    }\n    if (rotationY !== _zeroDeg) {\n        transforms += \"rotateY(\" + rotationY + _endParenthesis;\n    }\n    if (rotationX !== _zeroDeg) {\n        transforms += \"rotateX(\" + rotationX + _endParenthesis;\n    }\n    if (skewX !== _zeroDeg || skewY !== _zeroDeg) {\n        transforms += \"skew(\" + skewX + \", \" + skewY + _endParenthesis;\n    }\n    if (scaleX !== 1 || scaleY !== 1) {\n        transforms += \"scale(\" + scaleX + \", \" + scaleY + _endParenthesis;\n    }\n    target.style[_transformProp] = transforms || \"translate(0, 0)\";\n}, _renderSVGTransforms = function _renderSVGTransforms(ratio, cache) {\n    var _ref2 = cache || this, xPercent = _ref2.xPercent, yPercent = _ref2.yPercent, x = _ref2.x, y = _ref2.y, rotation = _ref2.rotation, skewX = _ref2.skewX, skewY = _ref2.skewY, scaleX = _ref2.scaleX, scaleY = _ref2.scaleY, target = _ref2.target, xOrigin = _ref2.xOrigin, yOrigin = _ref2.yOrigin, xOffset = _ref2.xOffset, yOffset = _ref2.yOffset, forceCSS = _ref2.forceCSS, tx = parseFloat(x), ty = parseFloat(y), a11, a21, a12, a22, temp;\n    rotation = parseFloat(rotation);\n    skewX = parseFloat(skewX);\n    skewY = parseFloat(skewY);\n    if (skewY) {\n        //for performance reasons, we combine all skewing into the skewX and rotation values. Remember, a skewY of 10 degrees looks the same as a rotation of 10 degrees plus a skewX of 10 degrees.\n        skewY = parseFloat(skewY);\n        skewX += skewY;\n        rotation += skewY;\n    }\n    if (rotation || skewX) {\n        rotation *= _DEG2RAD;\n        skewX *= _DEG2RAD;\n        a11 = Math.cos(rotation) * scaleX;\n        a21 = Math.sin(rotation) * scaleX;\n        a12 = Math.sin(rotation - skewX) * -scaleY;\n        a22 = Math.cos(rotation - skewX) * scaleY;\n        if (skewX) {\n            skewY *= _DEG2RAD;\n            temp = Math.tan(skewX - skewY);\n            temp = Math.sqrt(1 + temp * temp);\n            a12 *= temp;\n            a22 *= temp;\n            if (skewY) {\n                temp = Math.tan(skewY);\n                temp = Math.sqrt(1 + temp * temp);\n                a11 *= temp;\n                a21 *= temp;\n            }\n        }\n        a11 = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(a11);\n        a21 = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(a21);\n        a12 = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(a12);\n        a22 = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(a22);\n    } else {\n        a11 = scaleX;\n        a22 = scaleY;\n        a21 = a12 = 0;\n    }\n    if (tx && !~(x + \"\").indexOf(\"px\") || ty && !~(y + \"\").indexOf(\"px\")) {\n        tx = _convertToUnit(target, \"x\", x, \"px\");\n        ty = _convertToUnit(target, \"y\", y, \"px\");\n    }\n    if (xOrigin || yOrigin || xOffset || yOffset) {\n        tx = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(tx + xOrigin - (xOrigin * a11 + yOrigin * a12) + xOffset);\n        ty = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(ty + yOrigin - (xOrigin * a21 + yOrigin * a22) + yOffset);\n    }\n    if (xPercent || yPercent) {\n        //The SVG spec doesn't support percentage-based translation in the \"transform\" attribute, so we merge it into the translation to simulate it.\n        temp = target.getBBox();\n        tx = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(tx + xPercent / 100 * temp.width);\n        ty = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(ty + yPercent / 100 * temp.height);\n    }\n    temp = \"matrix(\" + a11 + \",\" + a21 + \",\" + a12 + \",\" + a22 + \",\" + tx + \",\" + ty + \")\";\n    target.setAttribute(\"transform\", temp);\n    forceCSS && (target.style[_transformProp] = temp); //some browsers prioritize CSS transforms over the transform attribute. When we sense that the user has CSS transforms applied, we must overwrite them this way (otherwise some browser simply won't render the transform attribute changes!)\n}, _addRotationalPropTween = function _addRotationalPropTween(plugin, target, property, startNum, endValue) {\n    var cap = 360, isString = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._isString)(endValue), endNum = parseFloat(endValue) * (isString && ~endValue.indexOf(\"rad\") ? _RAD2DEG : 1), change = endNum - startNum, finalValue = startNum + change + \"deg\", direction, pt;\n    if (isString) {\n        direction = endValue.split(\"_\")[1];\n        if (direction === \"short\") {\n            change %= cap;\n            if (change !== change % (cap / 2)) {\n                change += change < 0 ? cap : -cap;\n            }\n        }\n        if (direction === \"cw\" && change < 0) {\n            change = (change + cap * _bigNum) % cap - ~~(change / cap) * cap;\n        } else if (direction === \"ccw\" && change > 0) {\n            change = (change - cap * _bigNum) % cap - ~~(change / cap) * cap;\n        }\n    }\n    plugin._pt = pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.PropTween(plugin._pt, target, property, startNum, change, _renderPropWithEnd);\n    pt.e = finalValue;\n    pt.u = \"deg\";\n    plugin._props.push(property);\n    return pt;\n}, _assign = function _assign(target, source) {\n    // Internet Explorer doesn't have Object.assign(), so we recreate it here.\n    for(var p in source){\n        target[p] = source[p];\n    }\n    return target;\n}, _addRawTransformPTs = function _addRawTransformPTs(plugin, transforms, target) {\n    //for handling cases where someone passes in a whole transform string, like transform: \"scale(2, 3) rotate(20deg) translateY(30em)\"\n    var startCache = _assign({}, target._gsap), exclude = \"perspective,force3D,transformOrigin,svgOrigin\", style = target.style, endCache, p, startValue, endValue, startNum, endNum, startUnit, endUnit;\n    if (startCache.svg) {\n        startValue = target.getAttribute(\"transform\");\n        target.setAttribute(\"transform\", \"\");\n        style[_transformProp] = transforms;\n        endCache = _parseTransform(target, 1);\n        _removeProperty(target, _transformProp);\n        target.setAttribute(\"transform\", startValue);\n    } else {\n        startValue = getComputedStyle(target)[_transformProp];\n        style[_transformProp] = transforms;\n        endCache = _parseTransform(target, 1);\n        style[_transformProp] = startValue;\n    }\n    for(p in _transformProps){\n        startValue = startCache[p];\n        endValue = endCache[p];\n        if (startValue !== endValue && exclude.indexOf(p) < 0) {\n            //tweening to no perspective gives very unintuitive results - just keep the same perspective in that case.\n            startUnit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.getUnit)(startValue);\n            endUnit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.getUnit)(endValue);\n            startNum = startUnit !== endUnit ? _convertToUnit(target, p, startValue, endUnit) : parseFloat(startValue);\n            endNum = parseFloat(endValue);\n            plugin._pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.PropTween(plugin._pt, endCache, p, startNum, endNum - startNum, _renderCSSProp);\n            plugin._pt.u = endUnit || 0;\n            plugin._props.push(p);\n        }\n    }\n    _assign(endCache, startCache);\n}; // handle splitting apart padding, margin, borderWidth, and borderRadius into their 4 components. Firefox, for example, won't report borderRadius correctly - it will only do borderTopLeftRadius and the other corners. We also want to handle paddingTop, marginLeft, borderRightWidth, etc.\n(0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._forEachName)(\"padding,margin,Width,Radius\", function(name, index) {\n    var t = \"Top\", r = \"Right\", b = \"Bottom\", l = \"Left\", props = (index < 3 ? [\n        t,\n        r,\n        b,\n        l\n    ] : [\n        t + l,\n        t + r,\n        b + r,\n        b + l\n    ]).map(function(side) {\n        return index < 2 ? name + side : \"border\" + side + name;\n    });\n    _specialProps[index > 1 ? \"border\" + name : name] = function(plugin, target, property, endValue, tween) {\n        var a, vars;\n        if (arguments.length < 4) {\n            // getter, passed target, property, and unit (from _get())\n            a = props.map(function(prop) {\n                return _get(plugin, prop, property);\n            });\n            vars = a.join(\" \");\n            return vars.split(a[0]).length === 5 ? a[0] : vars;\n        }\n        a = (endValue + \"\").split(\" \");\n        vars = {};\n        props.forEach(function(prop, i) {\n            return vars[prop] = a[i] = a[i] || a[(i - 1) / 2 | 0];\n        });\n        plugin.init(target, vars, tween);\n    };\n});\nvar CSSPlugin = {\n    name: \"css\",\n    register: _initCore,\n    targetTest: function targetTest(target) {\n        return target.style && target.nodeType;\n    },\n    init: function init(target, vars, tween, index, targets) {\n        var props = this._props, style = target.style, startAt = tween.vars.startAt, startValue, endValue, endNum, startNum, type, specialProp, p, startUnit, endUnit, relative, isTransformRelated, transformPropTween, cache, smooth, hasPriority, inlineProps;\n        _pluginInitted || _initCore(); // we may call init() multiple times on the same plugin instance, like when adding special properties, so make sure we don't overwrite the revert data or inlineProps\n        this.styles = this.styles || _getStyleSaver(target);\n        inlineProps = this.styles.props;\n        this.tween = tween;\n        for(p in vars){\n            if (p === \"autoRound\") {\n                continue;\n            }\n            endValue = vars[p];\n            if (_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._plugins[p] && (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._checkPlugin)(p, vars, tween, index, target, targets)) {\n                continue;\n            }\n            type = typeof endValue;\n            specialProp = _specialProps[p];\n            if (type === \"function\") {\n                endValue = endValue.call(tween, index, target, targets);\n                type = typeof endValue;\n            }\n            if (type === \"string\" && ~endValue.indexOf(\"random(\")) {\n                endValue = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._replaceRandom)(endValue);\n            }\n            if (specialProp) {\n                specialProp(this, target, p, endValue, tween) && (hasPriority = 1);\n            } else if (p.substr(0, 2) === \"--\") {\n                //CSS variable\n                startValue = (getComputedStyle(target).getPropertyValue(p) + \"\").trim();\n                endValue += \"\";\n                _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._colorExp.lastIndex = 0;\n                if (!_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._colorExp.test(startValue)) {\n                    // colors don't have units\n                    startUnit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.getUnit)(startValue);\n                    endUnit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.getUnit)(endValue);\n                }\n                endUnit ? startUnit !== endUnit && (startValue = _convertToUnit(target, p, startValue, endUnit) + endUnit) : startUnit && (endValue += startUnit);\n                this.add(style, \"setProperty\", startValue, endValue, index, targets, 0, 0, p);\n                props.push(p);\n                inlineProps.push(p, 0, style[p]);\n            } else if (type !== \"undefined\") {\n                if (startAt && p in startAt) {\n                    // in case someone hard-codes a complex value as the start, like top: \"calc(2vh / 2)\". Without this, it'd use the computed value (always in px)\n                    startValue = typeof startAt[p] === \"function\" ? startAt[p].call(tween, index, target, targets) : startAt[p];\n                    (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._isString)(startValue) && ~startValue.indexOf(\"random(\") && (startValue = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._replaceRandom)(startValue));\n                    (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.getUnit)(startValue + \"\") || startValue === \"auto\" || (startValue += _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._config.units[p] || (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.getUnit)(_get(target, p)) || \"\"); // for cases when someone passes in a unitless value like {x: 100}; if we try setting translate(100, 0px) it won't work.\n                    (startValue + \"\").charAt(1) === \"=\" && (startValue = _get(target, p)); // can't work with relative values\n                } else {\n                    startValue = _get(target, p);\n                }\n                startNum = parseFloat(startValue);\n                relative = type === \"string\" && endValue.charAt(1) === \"=\" && endValue.substr(0, 2);\n                relative && (endValue = endValue.substr(2));\n                endNum = parseFloat(endValue);\n                if (p in _propertyAliases) {\n                    if (p === \"autoAlpha\") {\n                        //special case where we control the visibility along with opacity. We still allow the opacity value to pass through and get tweened.\n                        if (startNum === 1 && _get(target, \"visibility\") === \"hidden\" && endNum) {\n                            //if visibility is initially set to \"hidden\", we should interpret that as intent to make opacity 0 (a convenience)\n                            startNum = 0;\n                        }\n                        inlineProps.push(\"visibility\", 0, style.visibility);\n                        _addNonTweeningPT(this, style, \"visibility\", startNum ? \"inherit\" : \"hidden\", endNum ? \"inherit\" : \"hidden\", !endNum);\n                    }\n                    if (p !== \"scale\" && p !== \"transform\") {\n                        p = _propertyAliases[p];\n                        ~p.indexOf(\",\") && (p = p.split(\",\")[0]);\n                    }\n                }\n                isTransformRelated = p in _transformProps; //--- TRANSFORM-RELATED ---\n                if (isTransformRelated) {\n                    this.styles.save(p);\n                    if (!transformPropTween) {\n                        cache = target._gsap;\n                        cache.renderTransform && !vars.parseTransform || _parseTransform(target, vars.parseTransform); // if, for example, gsap.set(... {transform:\"translateX(50vw)\"}), the _get() call doesn't parse the transform, thus cache.renderTransform won't be set yet so force the parsing of the transform here.\n                        smooth = vars.smoothOrigin !== false && cache.smooth;\n                        transformPropTween = this._pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.PropTween(this._pt, style, _transformProp, 0, 1, cache.renderTransform, cache, 0, -1); //the first time through, create the rendering PropTween so that it runs LAST (in the linked list, we keep adding to the beginning)\n                        transformPropTween.dep = 1; //flag it as dependent so that if things get killed/overwritten and this is the only PropTween left, we can safely kill the whole tween.\n                    }\n                    if (p === \"scale\") {\n                        this._pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.PropTween(this._pt, cache, \"scaleY\", cache.scaleY, (relative ? (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._parseRelative)(cache.scaleY, relative + endNum) : endNum) - cache.scaleY || 0, _renderCSSProp);\n                        this._pt.u = 0;\n                        props.push(\"scaleY\", p);\n                        p += \"X\";\n                    } else if (p === \"transformOrigin\") {\n                        inlineProps.push(_transformOriginProp, 0, style[_transformOriginProp]);\n                        endValue = _convertKeywordsToPercentages(endValue); //in case something like \"left top\" or \"bottom right\" is passed in. Convert to percentages.\n                        if (cache.svg) {\n                            _applySVGOrigin(target, endValue, 0, smooth, 0, this);\n                        } else {\n                            endUnit = parseFloat(endValue.split(\" \")[2]) || 0; //handle the zOrigin separately!\n                            endUnit !== cache.zOrigin && _addNonTweeningPT(this, cache, \"zOrigin\", cache.zOrigin, endUnit);\n                            _addNonTweeningPT(this, style, p, _firstTwoOnly(startValue), _firstTwoOnly(endValue));\n                        }\n                        continue;\n                    } else if (p === \"svgOrigin\") {\n                        _applySVGOrigin(target, endValue, 1, smooth, 0, this);\n                        continue;\n                    } else if (p in _rotationalProperties) {\n                        _addRotationalPropTween(this, cache, p, startNum, relative ? (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._parseRelative)(startNum, relative + endValue) : endValue);\n                        continue;\n                    } else if (p === \"smoothOrigin\") {\n                        _addNonTweeningPT(this, cache, \"smooth\", cache.smooth, endValue);\n                        continue;\n                    } else if (p === \"force3D\") {\n                        cache[p] = endValue;\n                        continue;\n                    } else if (p === \"transform\") {\n                        _addRawTransformPTs(this, endValue, target);\n                        continue;\n                    }\n                } else if (!(p in style)) {\n                    p = _checkPropPrefix(p) || p;\n                }\n                if (isTransformRelated || (endNum || endNum === 0) && (startNum || startNum === 0) && !_complexExp.test(endValue) && p in style) {\n                    startUnit = (startValue + \"\").substr((startNum + \"\").length);\n                    endNum || (endNum = 0); // protect against NaN\n                    endUnit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.getUnit)(endValue) || (p in _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._config.units ? _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._config.units[p] : startUnit);\n                    startUnit !== endUnit && (startNum = _convertToUnit(target, p, startValue, endUnit));\n                    this._pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.PropTween(this._pt, isTransformRelated ? cache : style, p, startNum, (relative ? (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._parseRelative)(startNum, relative + endNum) : endNum) - startNum, !isTransformRelated && (endUnit === \"px\" || p === \"zIndex\") && vars.autoRound !== false ? _renderRoundedCSSProp : _renderCSSProp);\n                    this._pt.u = endUnit || 0;\n                    if (startUnit !== endUnit && endUnit !== \"%\") {\n                        //when the tween goes all the way back to the beginning, we need to revert it to the OLD/ORIGINAL value (with those units). We record that as a \"b\" (beginning) property and point to a render method that handles that. (performance optimization)\n                        this._pt.b = startValue;\n                        this._pt.r = _renderCSSPropWithBeginning;\n                    }\n                } else if (!(p in style)) {\n                    if (p in target) {\n                        //maybe it's not a style - it could be a property added directly to an element in which case we'll try to animate that.\n                        this.add(target, p, startValue || target[p], relative ? relative + endValue : endValue, index, targets);\n                    } else if (p !== \"parseTransform\") {\n                        (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._missingPlugin)(p, endValue);\n                        continue;\n                    }\n                } else {\n                    _tweenComplexCSSString.call(this, target, p, startValue, relative ? relative + endValue : endValue);\n                }\n                isTransformRelated || (p in style ? inlineProps.push(p, 0, style[p]) : inlineProps.push(p, 1, startValue || target[p]));\n                props.push(p);\n            }\n        }\n        hasPriority && (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._sortPropTweensByPriority)(this);\n    },\n    render: function render(ratio, data) {\n        if (data.tween._time || !_reverting()) {\n            var pt = data._pt;\n            while(pt){\n                pt.r(ratio, pt.d);\n                pt = pt._next;\n            }\n        } else {\n            data.styles.revert();\n        }\n    },\n    get: _get,\n    aliases: _propertyAliases,\n    getSetter: function getSetter(target, property, plugin) {\n        //returns a setter function that accepts target, property, value and applies it accordingly. Remember, properties like \"x\" aren't as simple as target.style.property = value because they've got to be applied to a proxy object and then merged into a transform string in a renderer.\n        var p = _propertyAliases[property];\n        p && p.indexOf(\",\") < 0 && (property = p);\n        return property in _transformProps && property !== _transformOriginProp && (target._gsap.x || _get(target, \"x\")) ? plugin && _recentSetterPlugin === plugin ? property === \"scale\" ? _setterScale : _setterTransform : (_recentSetterPlugin = plugin || {}) && (property === \"scale\" ? _setterScaleWithRender : _setterTransformWithRender) : target.style && !(0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._isUndefined)(target.style[property]) ? _setterCSSStyle : ~property.indexOf(\"-\") ? _setterCSSProp : (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._getSetter)(target, property);\n    },\n    core: {\n        _removeProperty: _removeProperty,\n        _getMatrix: _getMatrix\n    }\n};\n_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.gsap.utils.checkPrefix = _checkPropPrefix;\n_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.gsap.core.getStyleSaver = _getStyleSaver;\n(function(positionAndScale, rotation, others, aliases) {\n    var all = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._forEachName)(positionAndScale + \",\" + rotation + \",\" + others, function(name) {\n        _transformProps[name] = 1;\n    });\n    (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._forEachName)(rotation, function(name) {\n        _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._config.units[name] = \"deg\";\n        _rotationalProperties[name] = 1;\n    });\n    _propertyAliases[all[13]] = positionAndScale + \",\" + rotation;\n    (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._forEachName)(aliases, function(name) {\n        var split = name.split(\":\");\n        _propertyAliases[split[1]] = all[split[0]];\n    });\n})(\"x,y,z,scale,scaleX,scaleY,xPercent,yPercent\", \"rotation,rotationX,rotationY,skewX,skewY\", \"transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective\", \"0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY\");\n(0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._forEachName)(\"x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective\", function(name) {\n    _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._config.units[name] = \"px\";\n});\n_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.gsap.registerPlugin(CSSPlugin);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/gsap/CSSPlugin.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/gsap/MotionPathPlugin.js":
/*!***********************************************!*\
  !*** ./node_modules/gsap/MotionPathPlugin.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MotionPathPlugin: function() { return /* binding */ MotionPathPlugin; },\n/* harmony export */   \"default\": function() { return /* binding */ MotionPathPlugin; }\n/* harmony export */ });\n/* harmony import */ var _utils_paths_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/paths.js */ \"(app-pages-browser)/./node_modules/gsap/utils/paths.js\");\n/* harmony import */ var _utils_matrix_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/matrix.js */ \"(app-pages-browser)/./node_modules/gsap/utils/matrix.js\");\n/*!\n * MotionPathPlugin 3.12.5\n * https://gsap.com\n *\n * @license Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/ /* eslint-disable */ \n\nvar _xProps = \"x,translateX,left,marginLeft,xPercent\".split(\",\"), _yProps = \"y,translateY,top,marginTop,yPercent\".split(\",\"), _DEG2RAD = Math.PI / 180, gsap, PropTween, _getUnit, _toArray, _getStyleSaver, _reverting, _getGSAP = function _getGSAP() {\n    return gsap ||  true && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n}, _populateSegmentFromArray = function _populateSegmentFromArray(segment, values, property, mode) {\n    //mode: 0 = x but don't fill y yet, 1 = y, 2 = x and fill y with 0.\n    var l = values.length, si = mode === 2 ? 0 : mode, i = 0, v;\n    for(; i < l; i++){\n        segment[si] = v = parseFloat(values[i][property]);\n        mode === 2 && (segment[si + 1] = 0);\n        si += 2;\n    }\n    return segment;\n}, _getPropNum = function _getPropNum(target, prop, unit) {\n    return parseFloat(target._gsap.get(target, prop, unit || \"px\")) || 0;\n}, _relativize = function _relativize(segment) {\n    var x = segment[0], y = segment[1], i;\n    for(i = 2; i < segment.length; i += 2){\n        x = segment[i] += x;\n        y = segment[i + 1] += y;\n    }\n}, // feed in an array of quadratic bezier points like [{x: 0, y: 0}, ...] and it'll convert it to cubic bezier\n// _quadToCubic = points => {\n// \tlet cubic = [],\n// \t\tl = points.length - 1,\n// \t\ti = 1,\n// \t\ta, b, c;\n// \tfor (; i < l; i+=2) {\n// \t\ta = points[i-1];\n// \t\tb = points[i];\n// \t\tc = points[i+1];\n// \t\tcubic.push(a, {x: (2 * b.x + a.x) / 3, y: (2 * b.y + a.y) / 3}, {x: (2 * b.x + c.x) / 3, y: (2 * b.y + c.y) / 3});\n// \t}\n// \tcubic.push(points[l]);\n// \treturn cubic;\n// },\n_segmentToRawPath = function _segmentToRawPath(plugin, segment, target, x, y, slicer, vars, unitX, unitY) {\n    if (vars.type === \"cubic\") {\n        segment = [\n            segment\n        ];\n    } else {\n        vars.fromCurrent !== false && segment.unshift(_getPropNum(target, x, unitX), y ? _getPropNum(target, y, unitY) : 0);\n        vars.relative && _relativize(segment);\n        var pointFunc = y ? _utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.pointsToSegment : _utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.flatPointsToSegment;\n        segment = [\n            pointFunc(segment, vars.curviness)\n        ];\n    }\n    segment = slicer(_align(segment, target, vars));\n    _addDimensionalPropTween(plugin, target, x, segment, \"x\", unitX);\n    y && _addDimensionalPropTween(plugin, target, y, segment, \"y\", unitY);\n    return (0,_utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.cacheRawPathMeasurements)(segment, vars.resolution || (vars.curviness === 0 ? 20 : 12)); //when curviness is 0, it creates control points right on top of the anchors which makes it more sensitive to resolution, thus we change the default accordingly.\n}, _emptyFunc = function _emptyFunc(v) {\n    return v;\n}, _numExp = /[-+\\.]*\\d+\\.?(?:e-|e\\+)?\\d*/g, _originToPoint = function _originToPoint(element, origin, parentMatrix) {\n    // origin is an array of normalized values (0-1) in relation to the width/height, so [0.5, 0.5] would be the center. It can also be \"auto\" in which case it will be the top left unless it's a <path>, when it will start at the beginning of the path itself.\n    var m = (0,_utils_matrix_js__WEBPACK_IMPORTED_MODULE_1__.getGlobalMatrix)(element), x = 0, y = 0, svg;\n    if ((element.tagName + \"\").toLowerCase() === \"svg\") {\n        svg = element.viewBox.baseVal;\n        svg.width || (svg = {\n            width: +element.getAttribute(\"width\"),\n            height: +element.getAttribute(\"height\")\n        });\n    } else {\n        svg = origin && element.getBBox && element.getBBox();\n    }\n    if (origin && origin !== \"auto\") {\n        x = origin.push ? origin[0] * (svg ? svg.width : element.offsetWidth || 0) : origin.x;\n        y = origin.push ? origin[1] * (svg ? svg.height : element.offsetHeight || 0) : origin.y;\n    }\n    return parentMatrix.apply(x || y ? m.apply({\n        x: x,\n        y: y\n    }) : {\n        x: m.e,\n        y: m.f\n    });\n}, _getAlignMatrix = function _getAlignMatrix(fromElement, toElement, fromOrigin, toOrigin) {\n    var parentMatrix = (0,_utils_matrix_js__WEBPACK_IMPORTED_MODULE_1__.getGlobalMatrix)(fromElement.parentNode, true, true), m = parentMatrix.clone().multiply((0,_utils_matrix_js__WEBPACK_IMPORTED_MODULE_1__.getGlobalMatrix)(toElement)), fromPoint = _originToPoint(fromElement, fromOrigin, parentMatrix), _originToPoint2 = _originToPoint(toElement, toOrigin, parentMatrix), x = _originToPoint2.x, y = _originToPoint2.y, p;\n    m.e = m.f = 0;\n    if (toOrigin === \"auto\" && toElement.getTotalLength && toElement.tagName.toLowerCase() === \"path\") {\n        p = toElement.getAttribute(\"d\").match(_numExp) || [];\n        p = m.apply({\n            x: +p[0],\n            y: +p[1]\n        });\n        x += p.x;\n        y += p.y;\n    } //if (p || (toElement.getBBox && fromElement.getBBox && toElement.ownerSVGElement === fromElement.ownerSVGElement)) {\n    if (p) {\n        p = m.apply(toElement.getBBox());\n        x -= p.x;\n        y -= p.y;\n    }\n    m.e = x - fromPoint.x;\n    m.f = y - fromPoint.y;\n    return m;\n}, _align = function _align(rawPath, target, _ref) {\n    var align = _ref.align, matrix = _ref.matrix, offsetX = _ref.offsetX, offsetY = _ref.offsetY, alignOrigin = _ref.alignOrigin;\n    var x = rawPath[0][0], y = rawPath[0][1], curX = _getPropNum(target, \"x\"), curY = _getPropNum(target, \"y\"), alignTarget, m, p;\n    if (!rawPath || !rawPath.length) {\n        return (0,_utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.getRawPath)(\"M0,0L0,0\");\n    }\n    if (align) {\n        if (align === \"self\" || (alignTarget = _toArray(align)[0] || target) === target) {\n            (0,_utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.transformRawPath)(rawPath, 1, 0, 0, 1, curX - x, curY - y);\n        } else {\n            if (alignOrigin && alignOrigin[2] !== false) {\n                gsap.set(target, {\n                    transformOrigin: alignOrigin[0] * 100 + \"% \" + alignOrigin[1] * 100 + \"%\"\n                });\n            } else {\n                alignOrigin = [\n                    _getPropNum(target, \"xPercent\") / -100,\n                    _getPropNum(target, \"yPercent\") / -100\n                ];\n            }\n            m = _getAlignMatrix(target, alignTarget, alignOrigin, \"auto\");\n            p = m.apply({\n                x: x,\n                y: y\n            });\n            (0,_utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.transformRawPath)(rawPath, m.a, m.b, m.c, m.d, curX + m.e - (p.x - m.e), curY + m.f - (p.y - m.f));\n        }\n    }\n    if (matrix) {\n        (0,_utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.transformRawPath)(rawPath, matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f);\n    } else if (offsetX || offsetY) {\n        (0,_utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.transformRawPath)(rawPath, 1, 0, 0, 1, offsetX || 0, offsetY || 0);\n    }\n    return rawPath;\n}, _addDimensionalPropTween = function _addDimensionalPropTween(plugin, target, property, rawPath, pathProperty, forceUnit) {\n    var cache = target._gsap, harness = cache.harness, alias = harness && harness.aliases && harness.aliases[property], prop = alias && alias.indexOf(\",\") < 0 ? alias : property, pt = plugin._pt = new PropTween(plugin._pt, target, prop, 0, 0, _emptyFunc, 0, cache.set(target, prop, plugin));\n    pt.u = _getUnit(cache.get(target, prop, forceUnit)) || 0;\n    pt.path = rawPath;\n    pt.pp = pathProperty;\n    plugin._props.push(prop);\n}, _sliceModifier = function _sliceModifier(start, end) {\n    return function(rawPath) {\n        return start || end !== 1 ? (0,_utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.sliceRawPath)(rawPath, start, end) : rawPath;\n    };\n};\nvar MotionPathPlugin = {\n    version: \"3.12.5\",\n    name: \"motionPath\",\n    register: function register(core, Plugin, propTween) {\n        gsap = core;\n        _getUnit = gsap.utils.getUnit;\n        _toArray = gsap.utils.toArray;\n        _getStyleSaver = gsap.core.getStyleSaver;\n        _reverting = gsap.core.reverting || function() {};\n        PropTween = propTween;\n    },\n    init: function init(target, vars, tween) {\n        if (!gsap) {\n            console.warn(\"Please gsap.registerPlugin(MotionPathPlugin)\");\n            return false;\n        }\n        if (!(typeof vars === \"object\" && !vars.style) || !vars.path) {\n            vars = {\n                path: vars\n            };\n        }\n        var rawPaths = [], _vars = vars, path = _vars.path, autoRotate = _vars.autoRotate, unitX = _vars.unitX, unitY = _vars.unitY, x = _vars.x, y = _vars.y, firstObj = path[0], slicer = _sliceModifier(vars.start, \"end\" in vars ? vars.end : 1), rawPath, p;\n        this.rawPaths = rawPaths;\n        this.target = target;\n        this.tween = tween;\n        this.styles = _getStyleSaver && _getStyleSaver(target, \"transform\");\n        if (this.rotate = autoRotate || autoRotate === 0) {\n            //get the rotational data FIRST so that the setTransform() method is called in the correct order in the render() loop - rotation gets set last.\n            this.rOffset = parseFloat(autoRotate) || 0;\n            this.radians = !!vars.useRadians;\n            this.rProp = vars.rotation || \"rotation\"; // rotation property\n            this.rSet = target._gsap.set(target, this.rProp, this); // rotation setter\n            this.ru = _getUnit(target._gsap.get(target, this.rProp)) || 0; // rotation units\n        }\n        if (Array.isArray(path) && !(\"closed\" in path) && typeof firstObj !== \"number\") {\n            for(p in firstObj){\n                if (!x && ~_xProps.indexOf(p)) {\n                    x = p;\n                } else if (!y && ~_yProps.indexOf(p)) {\n                    y = p;\n                }\n            }\n            if (x && y) {\n                //correlated values\n                rawPaths.push(_segmentToRawPath(this, _populateSegmentFromArray(_populateSegmentFromArray([], path, x, 0), path, y, 1), target, x, y, slicer, vars, unitX || _getUnit(path[0][x]), unitY || _getUnit(path[0][y])));\n            } else {\n                x = y = 0;\n            }\n            for(p in firstObj){\n                p !== x && p !== y && rawPaths.push(_segmentToRawPath(this, _populateSegmentFromArray([], path, p, 2), target, p, 0, slicer, vars, _getUnit(path[0][p])));\n            }\n        } else {\n            rawPath = slicer(_align((0,_utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.getRawPath)(vars.path), target, vars));\n            (0,_utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.cacheRawPathMeasurements)(rawPath, vars.resolution);\n            rawPaths.push(rawPath);\n            _addDimensionalPropTween(this, target, vars.x || \"x\", rawPath, \"x\", vars.unitX || \"px\");\n            _addDimensionalPropTween(this, target, vars.y || \"y\", rawPath, \"y\", vars.unitY || \"px\");\n        }\n    },\n    render: function render(ratio, data) {\n        var rawPaths = data.rawPaths, i = rawPaths.length, pt = data._pt;\n        if (data.tween._time || !_reverting()) {\n            if (ratio > 1) {\n                ratio = 1;\n            } else if (ratio < 0) {\n                ratio = 0;\n            }\n            while(i--){\n                (0,_utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.getPositionOnPath)(rawPaths[i], ratio, !i && data.rotate, rawPaths[i]);\n            }\n            while(pt){\n                pt.set(pt.t, pt.p, pt.path[pt.pp] + pt.u, pt.d, ratio);\n                pt = pt._next;\n            }\n            data.rotate && data.rSet(data.target, data.rProp, rawPaths[0].angle * (data.radians ? _DEG2RAD : 1) + data.rOffset + data.ru, data, ratio);\n        } else {\n            data.styles.revert();\n        }\n    },\n    getLength: function getLength(path) {\n        return (0,_utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.cacheRawPathMeasurements)((0,_utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.getRawPath)(path)).totalLength;\n    },\n    sliceRawPath: _utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.sliceRawPath,\n    getRawPath: _utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.getRawPath,\n    pointsToSegment: _utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.pointsToSegment,\n    stringToRawPath: _utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.stringToRawPath,\n    rawPathToString: _utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.rawPathToString,\n    transformRawPath: _utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.transformRawPath,\n    getGlobalMatrix: _utils_matrix_js__WEBPACK_IMPORTED_MODULE_1__.getGlobalMatrix,\n    getPositionOnPath: _utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.getPositionOnPath,\n    cacheRawPathMeasurements: _utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.cacheRawPathMeasurements,\n    convertToPath: function convertToPath(targets, swap) {\n        return _toArray(targets).map(function(target) {\n            return (0,_utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.convertToPath)(target, swap !== false);\n        });\n    },\n    convertCoordinates: function convertCoordinates(fromElement, toElement, point) {\n        var m = (0,_utils_matrix_js__WEBPACK_IMPORTED_MODULE_1__.getGlobalMatrix)(toElement, true, true).multiply((0,_utils_matrix_js__WEBPACK_IMPORTED_MODULE_1__.getGlobalMatrix)(fromElement));\n        return point ? m.apply(point) : m;\n    },\n    getAlignMatrix: _getAlignMatrix,\n    getRelativePosition: function getRelativePosition(fromElement, toElement, fromOrigin, toOrigin) {\n        var m = _getAlignMatrix(fromElement, toElement, fromOrigin, toOrigin);\n        return {\n            x: m.e,\n            y: m.f\n        };\n    },\n    arrayToRawPath: function arrayToRawPath(value, vars) {\n        vars = vars || {};\n        var segment = _populateSegmentFromArray(_populateSegmentFromArray([], value, vars.x || \"x\", 0), value, vars.y || \"y\", 1);\n        vars.relative && _relativize(segment);\n        return [\n            vars.type === \"cubic\" ? segment : (0,_utils_paths_js__WEBPACK_IMPORTED_MODULE_0__.pointsToSegment)(segment, vars.curviness)\n        ];\n    }\n};\n_getGSAP() && gsap.registerPlugin(MotionPathPlugin);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/gsap/MotionPathPlugin.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/gsap/gsap-core.js":
/*!****************************************!*\
  !*** ./node_modules/gsap/gsap-core.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Animation: function() { return /* binding */ Animation; },\n/* harmony export */   Back: function() { return /* binding */ Back; },\n/* harmony export */   Bounce: function() { return /* binding */ Bounce; },\n/* harmony export */   Circ: function() { return /* binding */ Circ; },\n/* harmony export */   Cubic: function() { return /* binding */ Cubic; },\n/* harmony export */   Elastic: function() { return /* binding */ Elastic; },\n/* harmony export */   Expo: function() { return /* binding */ Expo; },\n/* harmony export */   GSCache: function() { return /* binding */ GSCache; },\n/* harmony export */   Linear: function() { return /* binding */ Linear; },\n/* harmony export */   Power0: function() { return /* binding */ Power0; },\n/* harmony export */   Power1: function() { return /* binding */ Power1; },\n/* harmony export */   Power2: function() { return /* binding */ Power2; },\n/* harmony export */   Power3: function() { return /* binding */ Power3; },\n/* harmony export */   Power4: function() { return /* binding */ Power4; },\n/* harmony export */   PropTween: function() { return /* binding */ PropTween; },\n/* harmony export */   Quad: function() { return /* binding */ Quad; },\n/* harmony export */   Quart: function() { return /* binding */ Quart; },\n/* harmony export */   Quint: function() { return /* binding */ Quint; },\n/* harmony export */   Sine: function() { return /* binding */ Sine; },\n/* harmony export */   SteppedEase: function() { return /* binding */ SteppedEase; },\n/* harmony export */   Strong: function() { return /* binding */ Strong; },\n/* harmony export */   Timeline: function() { return /* binding */ Timeline; },\n/* harmony export */   TimelineLite: function() { return /* binding */ Timeline; },\n/* harmony export */   TimelineMax: function() { return /* binding */ Timeline; },\n/* harmony export */   Tween: function() { return /* binding */ Tween; },\n/* harmony export */   TweenLite: function() { return /* binding */ Tween; },\n/* harmony export */   TweenMax: function() { return /* binding */ Tween; },\n/* harmony export */   _checkPlugin: function() { return /* binding */ _checkPlugin; },\n/* harmony export */   _colorExp: function() { return /* binding */ _colorExp; },\n/* harmony export */   _colorStringFilter: function() { return /* binding */ _colorStringFilter; },\n/* harmony export */   _config: function() { return /* binding */ _config; },\n/* harmony export */   _forEachName: function() { return /* binding */ _forEachName; },\n/* harmony export */   _getCache: function() { return /* binding */ _getCache; },\n/* harmony export */   _getProperty: function() { return /* binding */ _getProperty; },\n/* harmony export */   _getSetter: function() { return /* binding */ _getSetter; },\n/* harmony export */   _isString: function() { return /* binding */ _isString; },\n/* harmony export */   _isUndefined: function() { return /* binding */ _isUndefined; },\n/* harmony export */   _missingPlugin: function() { return /* binding */ _missingPlugin; },\n/* harmony export */   _numExp: function() { return /* binding */ _numExp; },\n/* harmony export */   _numWithUnitExp: function() { return /* binding */ _numWithUnitExp; },\n/* harmony export */   _parseRelative: function() { return /* binding */ _parseRelative; },\n/* harmony export */   _plugins: function() { return /* binding */ _plugins; },\n/* harmony export */   _relExp: function() { return /* binding */ _relExp; },\n/* harmony export */   _removeLinkedListItem: function() { return /* binding */ _removeLinkedListItem; },\n/* harmony export */   _renderComplexString: function() { return /* binding */ _renderComplexString; },\n/* harmony export */   _replaceRandom: function() { return /* binding */ _replaceRandom; },\n/* harmony export */   _round: function() { return /* binding */ _round; },\n/* harmony export */   _roundModifier: function() { return /* binding */ _roundModifier; },\n/* harmony export */   _setDefaults: function() { return /* binding */ _setDefaults; },\n/* harmony export */   _sortPropTweensByPriority: function() { return /* binding */ _sortPropTweensByPriority; },\n/* harmony export */   _ticker: function() { return /* binding */ _ticker; },\n/* harmony export */   clamp: function() { return /* binding */ clamp; },\n/* harmony export */   \"default\": function() { return /* binding */ gsap; },\n/* harmony export */   distribute: function() { return /* binding */ distribute; },\n/* harmony export */   getUnit: function() { return /* binding */ getUnit; },\n/* harmony export */   gsap: function() { return /* binding */ gsap; },\n/* harmony export */   interpolate: function() { return /* binding */ interpolate; },\n/* harmony export */   mapRange: function() { return /* binding */ mapRange; },\n/* harmony export */   normalize: function() { return /* binding */ normalize; },\n/* harmony export */   pipe: function() { return /* binding */ pipe; },\n/* harmony export */   random: function() { return /* binding */ random; },\n/* harmony export */   selector: function() { return /* binding */ selector; },\n/* harmony export */   shuffle: function() { return /* binding */ shuffle; },\n/* harmony export */   snap: function() { return /* binding */ snap; },\n/* harmony export */   splitColor: function() { return /* binding */ splitColor; },\n/* harmony export */   toArray: function() { return /* binding */ toArray; },\n/* harmony export */   unitize: function() { return /* binding */ unitize; },\n/* harmony export */   wrap: function() { return /* binding */ wrap; },\n/* harmony export */   wrapYoyo: function() { return /* binding */ wrapYoyo; }\n/* harmony export */ });\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\n/*!\n * GSAP 3.12.5\n * https://gsap.com\n *\n * @license Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/ /* eslint-disable */ var _config = {\n    autoSleep: 120,\n    force3D: \"auto\",\n    nullTargetWarn: 1,\n    units: {\n        lineHeight: \"\"\n    }\n}, _defaults = {\n    duration: .5,\n    overwrite: false,\n    delay: 0\n}, _suppressOverwrites, _reverting, _context, _bigNum = 1e8, _tinyNum = 1 / _bigNum, _2PI = Math.PI * 2, _HALF_PI = _2PI / 4, _gsID = 0, _sqrt = Math.sqrt, _cos = Math.cos, _sin = Math.sin, _isString = function _isString(value) {\n    return typeof value === \"string\";\n}, _isFunction = function _isFunction(value) {\n    return typeof value === \"function\";\n}, _isNumber = function _isNumber(value) {\n    return typeof value === \"number\";\n}, _isUndefined = function _isUndefined(value) {\n    return typeof value === \"undefined\";\n}, _isObject = function _isObject(value) {\n    return typeof value === \"object\";\n}, _isNotFalse = function _isNotFalse(value) {\n    return value !== false;\n}, _windowExists = function _windowExists() {\n    return \"object\" !== \"undefined\";\n}, _isFuncOrString = function _isFuncOrString(value) {\n    return _isFunction(value) || _isString(value);\n}, _isTypedArray = typeof ArrayBuffer === \"function\" && ArrayBuffer.isView || function() {}, // note: IE10 has ArrayBuffer, but NOT ArrayBuffer.isView().\n_isArray = Array.isArray, _strictNumExp = /(?:-?\\.?\\d|\\.)+/gi, //only numbers (including negatives and decimals) but NOT relative values.\n_numExp = /[-+=.]*\\d+[.e\\-+]*\\d*[e\\-+]*\\d*/g, //finds any numbers, including ones that start with += or -=, negative numbers, and ones in scientific notation like 1e-8.\n_numWithUnitExp = /[-+=.]*\\d+[.e-]*\\d*[a-z%]*/g, _complexStringNumExp = /[-+=.]*\\d+\\.?\\d*(?:e-|e\\+)?\\d*/gi, //duplicate so that while we're looping through matches from exec(), it doesn't contaminate the lastIndex of _numExp which we use to search for colors too.\n_relExp = /[+-]=-?[.\\d]+/, _delimitedValueExp = /[^,'\"\\[\\]\\s]+/gi, // previously /[#\\-+.]*\\b[a-z\\d\\-=+%.]+/gi but didn't catch special characters.\n_unitExp = /^[+\\-=e\\s\\d]*\\d+[.\\d]*([a-z]*|%)\\s*$/i, _globalTimeline, _win, _coreInitted, _doc, _globals = {}, _installScope = {}, _coreReady, _install = function _install(scope) {\n    return (_installScope = _merge(scope, _globals)) && gsap;\n}, _missingPlugin = function _missingPlugin(property, value) {\n    return console.warn(\"Invalid property\", property, \"set to\", value, \"Missing plugin? gsap.registerPlugin()\");\n}, _warn = function _warn(message, suppress) {\n    return !suppress && console.warn(message);\n}, _addGlobal = function _addGlobal(name, obj) {\n    return name && (_globals[name] = obj) && _installScope && (_installScope[name] = obj) || _globals;\n}, _emptyFunc = function _emptyFunc() {\n    return 0;\n}, _startAtRevertConfig = {\n    suppressEvents: true,\n    isStart: true,\n    kill: false\n}, _revertConfigNoKill = {\n    suppressEvents: true,\n    kill: false\n}, _revertConfig = {\n    suppressEvents: true\n}, _reservedProps = {}, _lazyTweens = [], _lazyLookup = {}, _lastRenderedFrame, _plugins = {}, _effects = {}, _nextGCFrame = 30, _harnessPlugins = [], _callbackNames = \"\", _harness = function _harness(targets) {\n    var target = targets[0], harnessPlugin, i;\n    _isObject(target) || _isFunction(target) || (targets = [\n        targets\n    ]);\n    if (!(harnessPlugin = (target._gsap || {}).harness)) {\n        // find the first target with a harness. We assume targets passed into an animation will be of similar type, meaning the same kind of harness can be used for them all (performance optimization)\n        i = _harnessPlugins.length;\n        while(i-- && !_harnessPlugins[i].targetTest(target)){}\n        harnessPlugin = _harnessPlugins[i];\n    }\n    i = targets.length;\n    while(i--){\n        targets[i] && (targets[i]._gsap || (targets[i]._gsap = new GSCache(targets[i], harnessPlugin))) || targets.splice(i, 1);\n    }\n    return targets;\n}, _getCache = function _getCache(target) {\n    return target._gsap || _harness(toArray(target))[0]._gsap;\n}, _getProperty = function _getProperty(target, property, v) {\n    return (v = target[property]) && _isFunction(v) ? target[property]() : _isUndefined(v) && target.getAttribute && target.getAttribute(property) || v;\n}, _forEachName = function _forEachName(names, func) {\n    return (names = names.split(\",\")).forEach(func) || names;\n}, //split a comma-delimited list of names into an array, then run a forEach() function and return the split array (this is just a way to consolidate/shorten some code).\n_round = function _round(value) {\n    return Math.round(value * 100000) / 100000 || 0;\n}, _roundPrecise = function _roundPrecise(value) {\n    return Math.round(value * 10000000) / 10000000 || 0;\n}, // increased precision mostly for timing values.\n_parseRelative = function _parseRelative(start, value) {\n    var operator = value.charAt(0), end = parseFloat(value.substr(2));\n    start = parseFloat(start);\n    return operator === \"+\" ? start + end : operator === \"-\" ? start - end : operator === \"*\" ? start * end : start / end;\n}, _arrayContainsAny = function _arrayContainsAny(toSearch, toFind) {\n    //searches one array to find matches for any of the items in the toFind array. As soon as one is found, it returns true. It does NOT return all the matches; it's simply a boolean search.\n    var l = toFind.length, i = 0;\n    for(; toSearch.indexOf(toFind[i]) < 0 && ++i < l;){}\n    return i < l;\n}, _lazyRender = function _lazyRender() {\n    var l = _lazyTweens.length, a = _lazyTweens.slice(0), i, tween;\n    _lazyLookup = {};\n    _lazyTweens.length = 0;\n    for(i = 0; i < l; i++){\n        tween = a[i];\n        tween && tween._lazy && (tween.render(tween._lazy[0], tween._lazy[1], true)._lazy = 0);\n    }\n}, _lazySafeRender = function _lazySafeRender(animation, time, suppressEvents, force) {\n    _lazyTweens.length && !_reverting && _lazyRender();\n    animation.render(time, suppressEvents, force || _reverting && time < 0 && (animation._initted || animation._startAt));\n    _lazyTweens.length && !_reverting && _lazyRender(); //in case rendering caused any tweens to lazy-init, we should render them because typically when someone calls seek() or time() or progress(), they expect an immediate render.\n}, _numericIfPossible = function _numericIfPossible(value) {\n    var n = parseFloat(value);\n    return (n || n === 0) && (value + \"\").match(_delimitedValueExp).length < 2 ? n : _isString(value) ? value.trim() : value;\n}, _passThrough = function _passThrough(p) {\n    return p;\n}, _setDefaults = function _setDefaults(obj, defaults) {\n    for(var p in defaults){\n        p in obj || (obj[p] = defaults[p]);\n    }\n    return obj;\n}, _setKeyframeDefaults = function _setKeyframeDefaults(excludeDuration) {\n    return function(obj, defaults) {\n        for(var p in defaults){\n            p in obj || p === \"duration\" && excludeDuration || p === \"ease\" || (obj[p] = defaults[p]);\n        }\n    };\n}, _merge = function _merge(base, toMerge) {\n    for(var p in toMerge){\n        base[p] = toMerge[p];\n    }\n    return base;\n}, _mergeDeep = function _mergeDeep(base, toMerge) {\n    for(var p in toMerge){\n        p !== \"__proto__\" && p !== \"constructor\" && p !== \"prototype\" && (base[p] = _isObject(toMerge[p]) ? _mergeDeep(base[p] || (base[p] = {}), toMerge[p]) : toMerge[p]);\n    }\n    return base;\n}, _copyExcluding = function _copyExcluding(obj, excluding) {\n    var copy = {}, p;\n    for(p in obj){\n        p in excluding || (copy[p] = obj[p]);\n    }\n    return copy;\n}, _inheritDefaults = function _inheritDefaults(vars) {\n    var parent = vars.parent || _globalTimeline, func = vars.keyframes ? _setKeyframeDefaults(_isArray(vars.keyframes)) : _setDefaults;\n    if (_isNotFalse(vars.inherit)) {\n        while(parent){\n            func(vars, parent.vars.defaults);\n            parent = parent.parent || parent._dp;\n        }\n    }\n    return vars;\n}, _arraysMatch = function _arraysMatch(a1, a2) {\n    var i = a1.length, match = i === a2.length;\n    while(match && i-- && a1[i] === a2[i]){}\n    return i < 0;\n}, _addLinkedListItem = function _addLinkedListItem(parent, child, firstProp, lastProp, sortBy) {\n    if (firstProp === void 0) {\n        firstProp = \"_first\";\n    }\n    if (lastProp === void 0) {\n        lastProp = \"_last\";\n    }\n    var prev = parent[lastProp], t;\n    if (sortBy) {\n        t = child[sortBy];\n        while(prev && prev[sortBy] > t){\n            prev = prev._prev;\n        }\n    }\n    if (prev) {\n        child._next = prev._next;\n        prev._next = child;\n    } else {\n        child._next = parent[firstProp];\n        parent[firstProp] = child;\n    }\n    if (child._next) {\n        child._next._prev = child;\n    } else {\n        parent[lastProp] = child;\n    }\n    child._prev = prev;\n    child.parent = child._dp = parent;\n    return child;\n}, _removeLinkedListItem = function _removeLinkedListItem(parent, child, firstProp, lastProp) {\n    if (firstProp === void 0) {\n        firstProp = \"_first\";\n    }\n    if (lastProp === void 0) {\n        lastProp = \"_last\";\n    }\n    var prev = child._prev, next = child._next;\n    if (prev) {\n        prev._next = next;\n    } else if (parent[firstProp] === child) {\n        parent[firstProp] = next;\n    }\n    if (next) {\n        next._prev = prev;\n    } else if (parent[lastProp] === child) {\n        parent[lastProp] = prev;\n    }\n    child._next = child._prev = child.parent = null; // don't delete the _dp just so we can revert if necessary. But parent should be null to indicate the item isn't in a linked list.\n}, _removeFromParent = function _removeFromParent(child, onlyIfParentHasAutoRemove) {\n    child.parent && (!onlyIfParentHasAutoRemove || child.parent.autoRemoveChildren) && child.parent.remove && child.parent.remove(child);\n    child._act = 0;\n}, _uncache = function _uncache(animation, child) {\n    if (animation && (!child || child._end > animation._dur || child._start < 0)) {\n        // performance optimization: if a child animation is passed in we should only uncache if that child EXTENDS the animation (its end time is beyond the end)\n        var a = animation;\n        while(a){\n            a._dirty = 1;\n            a = a.parent;\n        }\n    }\n    return animation;\n}, _recacheAncestors = function _recacheAncestors(animation) {\n    var parent = animation.parent;\n    while(parent && parent.parent){\n        //sometimes we must force a re-sort of all children and update the duration/totalDuration of all ancestor timelines immediately in case, for example, in the middle of a render loop, one tween alters another tween's timeScale which shoves its startTime before 0, forcing the parent timeline to shift around and shiftChildren() which could affect that next tween's render (startTime). Doesn't matter for the root timeline though.\n        parent._dirty = 1;\n        parent.totalDuration();\n        parent = parent.parent;\n    }\n    return animation;\n}, _rewindStartAt = function _rewindStartAt(tween, totalTime, suppressEvents, force) {\n    return tween._startAt && (_reverting ? tween._startAt.revert(_revertConfigNoKill) : tween.vars.immediateRender && !tween.vars.autoRevert || tween._startAt.render(totalTime, true, force));\n}, _hasNoPausedAncestors = function _hasNoPausedAncestors(animation) {\n    return !animation || animation._ts && _hasNoPausedAncestors(animation.parent);\n}, _elapsedCycleDuration = function _elapsedCycleDuration(animation) {\n    return animation._repeat ? _animationCycle(animation._tTime, animation = animation.duration() + animation._rDelay) * animation : 0;\n}, // feed in the totalTime and cycleDuration and it'll return the cycle (iteration minus 1) and if the playhead is exactly at the very END, it will NOT bump up to the next cycle.\n_animationCycle = function _animationCycle(tTime, cycleDuration) {\n    var whole = Math.floor(tTime /= cycleDuration);\n    return tTime && whole === tTime ? whole - 1 : whole;\n}, _parentToChildTotalTime = function _parentToChildTotalTime(parentTime, child) {\n    return (parentTime - child._start) * child._ts + (child._ts >= 0 ? 0 : child._dirty ? child.totalDuration() : child._tDur);\n}, _setEnd = function _setEnd(animation) {\n    return animation._end = _roundPrecise(animation._start + (animation._tDur / Math.abs(animation._ts || animation._rts || _tinyNum) || 0));\n}, _alignPlayhead = function _alignPlayhead(animation, totalTime) {\n    // adjusts the animation's _start and _end according to the provided totalTime (only if the parent's smoothChildTiming is true and the animation isn't paused). It doesn't do any rendering or forcing things back into parent timelines, etc. - that's what totalTime() is for.\n    var parent = animation._dp;\n    if (parent && parent.smoothChildTiming && animation._ts) {\n        animation._start = _roundPrecise(parent._time - (animation._ts > 0 ? totalTime / animation._ts : ((animation._dirty ? animation.totalDuration() : animation._tDur) - totalTime) / -animation._ts));\n        _setEnd(animation);\n        parent._dirty || _uncache(parent, animation); //for performance improvement. If the parent's cache is already dirty, it already took care of marking the ancestors as dirty too, so skip the function call here.\n    }\n    return animation;\n}, /*\n_totalTimeToTime = (clampedTotalTime, duration, repeat, repeatDelay, yoyo) => {\n\tlet cycleDuration = duration + repeatDelay,\n\t\ttime = _round(clampedTotalTime % cycleDuration);\n\tif (time > duration) {\n\t\ttime = duration;\n\t}\n\treturn (yoyo && (~~(clampedTotalTime / cycleDuration) & 1)) ? duration - time : time;\n},\n*/ _postAddChecks = function _postAddChecks(timeline, child) {\n    var t;\n    if (child._time || !child._dur && child._initted || child._start < timeline._time && (child._dur || !child.add)) {\n        // in case, for example, the _start is moved on a tween that has already rendered, or if it's being inserted into a timeline BEFORE where the playhead is currently. Imagine it's at its end state, then the startTime is moved WAY later (after the end of this timeline), it should render at its beginning. Special case: if it's a timeline (has .add() method) and no duration, we can skip rendering because the user may be populating it AFTER adding it to a parent timeline (unconventional, but possible, and we wouldn't want it to get removed if the parent's autoRemoveChildren is true).\n        t = _parentToChildTotalTime(timeline.rawTime(), child);\n        if (!child._dur || _clamp(0, child.totalDuration(), t) - child._tTime > _tinyNum) {\n            child.render(t, true);\n        }\n    } //if the timeline has already ended but the inserted tween/timeline extends the duration, we should enable this timeline again so that it renders properly. We should also align the playhead with the parent timeline's when appropriate.\n    if (_uncache(timeline, child)._dp && timeline._initted && timeline._time >= timeline._dur && timeline._ts) {\n        //in case any of the ancestors had completed but should now be enabled...\n        if (timeline._dur < timeline.duration()) {\n            t = timeline;\n            while(t._dp){\n                t.rawTime() >= 0 && t.totalTime(t._tTime); //moves the timeline (shifts its startTime) if necessary, and also enables it. If it's currently zero, though, it may not be scheduled to render until later so there's no need to force it to align with the current playhead position. Only move to catch up with the playhead.\n                t = t._dp;\n            }\n        }\n        timeline._zTime = -_tinyNum; // helps ensure that the next render() will be forced (crossingStart = true in render()), even if the duration hasn't changed (we're adding a child which would need to get rendered). Definitely an edge case. Note: we MUST do this AFTER the loop above where the totalTime() might trigger a render() because this _addToTimeline() method gets called from the Animation constructor, BEFORE tweens even record their targets, etc. so we wouldn't want things to get triggered in the wrong order.\n    }\n}, _addToTimeline = function _addToTimeline(timeline, child, position, skipChecks) {\n    child.parent && _removeFromParent(child);\n    child._start = _roundPrecise((_isNumber(position) ? position : position || timeline !== _globalTimeline ? _parsePosition(timeline, position, child) : timeline._time) + child._delay);\n    child._end = _roundPrecise(child._start + (child.totalDuration() / Math.abs(child.timeScale()) || 0));\n    _addLinkedListItem(timeline, child, \"_first\", \"_last\", timeline._sort ? \"_start\" : 0);\n    _isFromOrFromStart(child) || (timeline._recent = child);\n    skipChecks || _postAddChecks(timeline, child);\n    timeline._ts < 0 && _alignPlayhead(timeline, timeline._tTime); // if the timeline is reversed and the new child makes it longer, we may need to adjust the parent's _start (push it back)\n    return timeline;\n}, _scrollTrigger = function _scrollTrigger(animation, trigger) {\n    return (_globals.ScrollTrigger || _missingPlugin(\"scrollTrigger\", trigger)) && _globals.ScrollTrigger.create(trigger, animation);\n}, _attemptInitTween = function _attemptInitTween(tween, time, force, suppressEvents, tTime) {\n    _initTween(tween, time, tTime);\n    if (!tween._initted) {\n        return 1;\n    }\n    if (!force && tween._pt && !_reverting && (tween._dur && tween.vars.lazy !== false || !tween._dur && tween.vars.lazy) && _lastRenderedFrame !== _ticker.frame) {\n        _lazyTweens.push(tween);\n        tween._lazy = [\n            tTime,\n            suppressEvents\n        ];\n        return 1;\n    }\n}, _parentPlayheadIsBeforeStart = function _parentPlayheadIsBeforeStart(_ref) {\n    var parent = _ref.parent;\n    return parent && parent._ts && parent._initted && !parent._lock && (parent.rawTime() < 0 || _parentPlayheadIsBeforeStart(parent));\n}, // check parent's _lock because when a timeline repeats/yoyos and does its artificial wrapping, we shouldn't force the ratio back to 0\n_isFromOrFromStart = function _isFromOrFromStart(_ref2) {\n    var data = _ref2.data;\n    return data === \"isFromStart\" || data === \"isStart\";\n}, _renderZeroDurationTween = function _renderZeroDurationTween(tween, totalTime, suppressEvents, force) {\n    var prevRatio = tween.ratio, ratio = totalTime < 0 || !totalTime && (!tween._start && _parentPlayheadIsBeforeStart(tween) && !(!tween._initted && _isFromOrFromStart(tween)) || (tween._ts < 0 || tween._dp._ts < 0) && !_isFromOrFromStart(tween)) ? 0 : 1, // if the tween or its parent is reversed and the totalTime is 0, we should go to a ratio of 0. Edge case: if a from() or fromTo() stagger tween is placed later in a timeline, the \"startAt\" zero-duration tween could initially render at a time when the parent timeline's playhead is technically BEFORE where this tween is, so make sure that any \"from\" and \"fromTo\" startAt tweens are rendered the first time at a ratio of 1.\n    repeatDelay = tween._rDelay, tTime = 0, pt, iteration, prevIteration;\n    if (repeatDelay && tween._repeat) {\n        // in case there's a zero-duration tween that has a repeat with a repeatDelay\n        tTime = _clamp(0, tween._tDur, totalTime);\n        iteration = _animationCycle(tTime, repeatDelay);\n        tween._yoyo && iteration & 1 && (ratio = 1 - ratio);\n        if (iteration !== _animationCycle(tween._tTime, repeatDelay)) {\n            // if iteration changed\n            prevRatio = 1 - ratio;\n            tween.vars.repeatRefresh && tween._initted && tween.invalidate();\n        }\n    }\n    if (ratio !== prevRatio || _reverting || force || tween._zTime === _tinyNum || !totalTime && tween._zTime) {\n        if (!tween._initted && _attemptInitTween(tween, totalTime, force, suppressEvents, tTime)) {\n            // if we render the very beginning (time == 0) of a fromTo(), we must force the render (normal tweens wouldn't need to render at a time of 0 when the prevTime was also 0). This is also mandatory to make sure overwriting kicks in immediately.\n            return;\n        }\n        prevIteration = tween._zTime;\n        tween._zTime = totalTime || (suppressEvents ? _tinyNum : 0); // when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect.\n        suppressEvents || (suppressEvents = totalTime && !prevIteration); // if it was rendered previously at exactly 0 (_zTime) and now the playhead is moving away, DON'T fire callbacks otherwise they'll seem like duplicates.\n        tween.ratio = ratio;\n        tween._from && (ratio = 1 - ratio);\n        tween._time = 0;\n        tween._tTime = tTime;\n        pt = tween._pt;\n        while(pt){\n            pt.r(ratio, pt.d);\n            pt = pt._next;\n        }\n        totalTime < 0 && _rewindStartAt(tween, totalTime, suppressEvents, true);\n        tween._onUpdate && !suppressEvents && _callback(tween, \"onUpdate\");\n        tTime && tween._repeat && !suppressEvents && tween.parent && _callback(tween, \"onRepeat\");\n        if ((totalTime >= tween._tDur || totalTime < 0) && tween.ratio === ratio) {\n            ratio && _removeFromParent(tween, 1);\n            if (!suppressEvents && !_reverting) {\n                _callback(tween, ratio ? \"onComplete\" : \"onReverseComplete\", true);\n                tween._prom && tween._prom();\n            }\n        }\n    } else if (!tween._zTime) {\n        tween._zTime = totalTime;\n    }\n}, _findNextPauseTween = function _findNextPauseTween(animation, prevTime, time) {\n    var child;\n    if (time > prevTime) {\n        child = animation._first;\n        while(child && child._start <= time){\n            if (child.data === \"isPause\" && child._start > prevTime) {\n                return child;\n            }\n            child = child._next;\n        }\n    } else {\n        child = animation._last;\n        while(child && child._start >= time){\n            if (child.data === \"isPause\" && child._start < prevTime) {\n                return child;\n            }\n            child = child._prev;\n        }\n    }\n}, _setDuration = function _setDuration(animation, duration, skipUncache, leavePlayhead) {\n    var repeat = animation._repeat, dur = _roundPrecise(duration) || 0, totalProgress = animation._tTime / animation._tDur;\n    totalProgress && !leavePlayhead && (animation._time *= dur / animation._dur);\n    animation._dur = dur;\n    animation._tDur = !repeat ? dur : repeat < 0 ? 1e10 : _roundPrecise(dur * (repeat + 1) + animation._rDelay * repeat);\n    totalProgress > 0 && !leavePlayhead && _alignPlayhead(animation, animation._tTime = animation._tDur * totalProgress);\n    animation.parent && _setEnd(animation);\n    skipUncache || _uncache(animation.parent, animation);\n    return animation;\n}, _onUpdateTotalDuration = function _onUpdateTotalDuration(animation) {\n    return animation instanceof Timeline ? _uncache(animation) : _setDuration(animation, animation._dur);\n}, _zeroPosition = {\n    _start: 0,\n    endTime: _emptyFunc,\n    totalDuration: _emptyFunc\n}, _parsePosition = function _parsePosition(animation, position, percentAnimation) {\n    var labels = animation.labels, recent = animation._recent || _zeroPosition, clippedDuration = animation.duration() >= _bigNum ? recent.endTime(false) : animation._dur, //in case there's a child that infinitely repeats, users almost never intend for the insertion point of a new child to be based on a SUPER long value like that so we clip it and assume the most recently-added child's endTime should be used instead.\n    i, offset, isPercent;\n    if (_isString(position) && (isNaN(position) || position in labels)) {\n        //if the string is a number like \"1\", check to see if there's a label with that name, otherwise interpret it as a number (absolute value).\n        offset = position.charAt(0);\n        isPercent = position.substr(-1) === \"%\";\n        i = position.indexOf(\"=\");\n        if (offset === \"<\" || offset === \">\") {\n            i >= 0 && (position = position.replace(/=/, \"\"));\n            return (offset === \"<\" ? recent._start : recent.endTime(recent._repeat >= 0)) + (parseFloat(position.substr(1)) || 0) * (isPercent ? (i < 0 ? recent : percentAnimation).totalDuration() / 100 : 1);\n        }\n        if (i < 0) {\n            position in labels || (labels[position] = clippedDuration);\n            return labels[position];\n        }\n        offset = parseFloat(position.charAt(i - 1) + position.substr(i + 1));\n        if (isPercent && percentAnimation) {\n            offset = offset / 100 * (_isArray(percentAnimation) ? percentAnimation[0] : percentAnimation).totalDuration();\n        }\n        return i > 1 ? _parsePosition(animation, position.substr(0, i - 1), percentAnimation) + offset : clippedDuration + offset;\n    }\n    return position == null ? clippedDuration : +position;\n}, _createTweenType = function _createTweenType(type, params, timeline) {\n    var isLegacy = _isNumber(params[1]), varsIndex = (isLegacy ? 2 : 1) + (type < 2 ? 0 : 1), vars = params[varsIndex], irVars, parent;\n    isLegacy && (vars.duration = params[1]);\n    vars.parent = timeline;\n    if (type) {\n        irVars = vars;\n        parent = timeline;\n        while(parent && !(\"immediateRender\" in irVars)){\n            // inheritance hasn't happened yet, but someone may have set a default in an ancestor timeline. We could do vars.immediateRender = _isNotFalse(_inheritDefaults(vars).immediateRender) but that'd exact a slight performance penalty because _inheritDefaults() also runs in the Tween constructor. We're paying a small kb price here to gain speed.\n            irVars = parent.vars.defaults || {};\n            parent = _isNotFalse(parent.vars.inherit) && parent.parent;\n        }\n        vars.immediateRender = _isNotFalse(irVars.immediateRender);\n        type < 2 ? vars.runBackwards = 1 : vars.startAt = params[varsIndex - 1]; // \"from\" vars\n    }\n    return new Tween(params[0], vars, params[varsIndex + 1]);\n}, _conditionalReturn = function _conditionalReturn(value, func) {\n    return value || value === 0 ? func(value) : func;\n}, _clamp = function _clamp(min, max, value) {\n    return value < min ? min : value > max ? max : value;\n}, getUnit = function getUnit(value, v) {\n    return !_isString(value) || !(v = _unitExp.exec(value)) ? \"\" : v[1];\n}, // note: protect against padded numbers as strings, like \"100.100\". That shouldn't return \"00\" as the unit. If it's numeric, return no unit.\nclamp = function clamp(min, max, value) {\n    return _conditionalReturn(value, function(v) {\n        return _clamp(min, max, v);\n    });\n}, _slice = [].slice, _isArrayLike = function _isArrayLike(value, nonEmpty) {\n    return value && _isObject(value) && \"length\" in value && (!nonEmpty && !value.length || value.length - 1 in value && _isObject(value[0])) && !value.nodeType && value !== _win;\n}, _flatten = function _flatten(ar, leaveStrings, accumulator) {\n    if (accumulator === void 0) {\n        accumulator = [];\n    }\n    return ar.forEach(function(value) {\n        var _accumulator;\n        return _isString(value) && !leaveStrings || _isArrayLike(value, 1) ? (_accumulator = accumulator).push.apply(_accumulator, toArray(value)) : accumulator.push(value);\n    }) || accumulator;\n}, //takes any value and returns an array. If it's a string (and leaveStrings isn't true), it'll use document.querySelectorAll() and convert that to an array. It'll also accept iterables like jQuery objects.\ntoArray = function toArray(value, scope, leaveStrings) {\n    return _context && !scope && _context.selector ? _context.selector(value) : _isString(value) && !leaveStrings && (_coreInitted || !_wake()) ? _slice.call((scope || _doc).querySelectorAll(value), 0) : _isArray(value) ? _flatten(value, leaveStrings) : _isArrayLike(value) ? _slice.call(value, 0) : value ? [\n        value\n    ] : [];\n}, selector = function selector(value) {\n    value = toArray(value)[0] || _warn(\"Invalid scope\") || {};\n    return function(v) {\n        var el = value.current || value.nativeElement || value;\n        return toArray(v, el.querySelectorAll ? el : el === value ? _warn(\"Invalid scope\") || _doc.createElement(\"div\") : value);\n    };\n}, shuffle = function shuffle(a) {\n    return a.sort(function() {\n        return .5 - Math.random();\n    });\n}, // alternative that's a bit faster and more reliably diverse but bigger:   for (let j, v, i = a.length; i; j = Math.floor(Math.random() * i), v = a[--i], a[i] = a[j], a[j] = v); return a;\n//for distributing values across an array. Can accept a number, a function or (most commonly) a function which can contain the following properties: {base, amount, from, ease, grid, axis, length, each}. Returns a function that expects the following parameters: index, target, array. Recognizes the following\ndistribute = function distribute(v) {\n    if (_isFunction(v)) {\n        return v;\n    }\n    var vars = _isObject(v) ? v : {\n        each: v\n    }, //n:1 is just to indicate v was a number; we leverage that later to set v according to the length we get. If a number is passed in, we treat it like the old stagger value where 0.1, for example, would mean that things would be distributed with 0.1 between each element in the array rather than a total \"amount\" that's chunked out among them all.\n    ease = _parseEase(vars.ease), from = vars.from || 0, base = parseFloat(vars.base) || 0, cache = {}, isDecimal = from > 0 && from < 1, ratios = isNaN(from) || isDecimal, axis = vars.axis, ratioX = from, ratioY = from;\n    if (_isString(from)) {\n        ratioX = ratioY = ({\n            center: .5,\n            edges: .5,\n            end: 1\n        })[from] || 0;\n    } else if (!isDecimal && ratios) {\n        ratioX = from[0];\n        ratioY = from[1];\n    }\n    return function(i, target, a) {\n        var l = (a || vars).length, distances = cache[l], originX, originY, x, y, d, j, max, min, wrapAt;\n        if (!distances) {\n            wrapAt = vars.grid === \"auto\" ? 0 : (vars.grid || [\n                1,\n                _bigNum\n            ])[1];\n            if (!wrapAt) {\n                max = -_bigNum;\n                while(max < (max = a[wrapAt++].getBoundingClientRect().left) && wrapAt < l){}\n                wrapAt < l && wrapAt--;\n            }\n            distances = cache[l] = [];\n            originX = ratios ? Math.min(wrapAt, l) * ratioX - .5 : from % wrapAt;\n            originY = wrapAt === _bigNum ? 0 : ratios ? l * ratioY / wrapAt - .5 : from / wrapAt | 0;\n            max = 0;\n            min = _bigNum;\n            for(j = 0; j < l; j++){\n                x = j % wrapAt - originX;\n                y = originY - (j / wrapAt | 0);\n                distances[j] = d = !axis ? _sqrt(x * x + y * y) : Math.abs(axis === \"y\" ? y : x);\n                d > max && (max = d);\n                d < min && (min = d);\n            }\n            from === \"random\" && shuffle(distances);\n            distances.max = max - min;\n            distances.min = min;\n            distances.v = l = (parseFloat(vars.amount) || parseFloat(vars.each) * (wrapAt > l ? l - 1 : !axis ? Math.max(wrapAt, l / wrapAt) : axis === \"y\" ? l / wrapAt : wrapAt) || 0) * (from === \"edges\" ? -1 : 1);\n            distances.b = l < 0 ? base - l : base;\n            distances.u = getUnit(vars.amount || vars.each) || 0; //unit\n            ease = ease && l < 0 ? _invertEase(ease) : ease;\n        }\n        l = (distances[i] - distances.min) / distances.max || 0;\n        return _roundPrecise(distances.b + (ease ? ease(l) : l) * distances.v) + distances.u; //round in order to work around floating point errors\n    };\n}, _roundModifier = function _roundModifier(v) {\n    //pass in 0.1 get a function that'll round to the nearest tenth, or 5 to round to the closest 5, or 0.001 to the closest 1000th, etc.\n    var p = Math.pow(10, ((v + \"\").split(\".\")[1] || \"\").length); //to avoid floating point math errors (like 24 * 0.1 == 2.4000000000000004), we chop off at a specific number of decimal places (much faster than toFixed())\n    return function(raw) {\n        var n = _roundPrecise(Math.round(parseFloat(raw) / v) * v * p);\n        return (n - n % 1) / p + (_isNumber(raw) ? 0 : getUnit(raw)); // n - n % 1 replaces Math.floor() in order to handle negative values properly. For example, Math.floor(-150.00000000000003) is 151!\n    };\n}, snap = function snap(snapTo, value) {\n    var isArray = _isArray(snapTo), radius, is2D;\n    if (!isArray && _isObject(snapTo)) {\n        radius = isArray = snapTo.radius || _bigNum;\n        if (snapTo.values) {\n            snapTo = toArray(snapTo.values);\n            if (is2D = !_isNumber(snapTo[0])) {\n                radius *= radius; //performance optimization so we don't have to Math.sqrt() in the loop.\n            }\n        } else {\n            snapTo = _roundModifier(snapTo.increment);\n        }\n    }\n    return _conditionalReturn(value, !isArray ? _roundModifier(snapTo) : _isFunction(snapTo) ? function(raw) {\n        is2D = snapTo(raw);\n        return Math.abs(is2D - raw) <= radius ? is2D : raw;\n    } : function(raw) {\n        var x = parseFloat(is2D ? raw.x : raw), y = parseFloat(is2D ? raw.y : 0), min = _bigNum, closest = 0, i = snapTo.length, dx, dy;\n        while(i--){\n            if (is2D) {\n                dx = snapTo[i].x - x;\n                dy = snapTo[i].y - y;\n                dx = dx * dx + dy * dy;\n            } else {\n                dx = Math.abs(snapTo[i] - x);\n            }\n            if (dx < min) {\n                min = dx;\n                closest = i;\n            }\n        }\n        closest = !radius || min <= radius ? snapTo[closest] : raw;\n        return is2D || closest === raw || _isNumber(raw) ? closest : closest + getUnit(raw);\n    });\n}, random = function random(min, max, roundingIncrement, returnFunction) {\n    return _conditionalReturn(_isArray(min) ? !max : roundingIncrement === true ? !!(roundingIncrement = 0) : !returnFunction, function() {\n        return _isArray(min) ? min[~~(Math.random() * min.length)] : (roundingIncrement = roundingIncrement || 1e-5) && (returnFunction = roundingIncrement < 1 ? Math.pow(10, (roundingIncrement + \"\").length - 2) : 1) && Math.floor(Math.round((min - roundingIncrement / 2 + Math.random() * (max - min + roundingIncrement * .99)) / roundingIncrement) * roundingIncrement * returnFunction) / returnFunction;\n    });\n}, pipe = function pipe() {\n    for(var _len = arguments.length, functions = new Array(_len), _key = 0; _key < _len; _key++){\n        functions[_key] = arguments[_key];\n    }\n    return function(value) {\n        return functions.reduce(function(v, f) {\n            return f(v);\n        }, value);\n    };\n}, unitize = function unitize(func, unit) {\n    return function(value) {\n        return func(parseFloat(value)) + (unit || getUnit(value));\n    };\n}, normalize = function normalize(min, max, value) {\n    return mapRange(min, max, 0, 1, value);\n}, _wrapArray = function _wrapArray(a, wrapper, value) {\n    return _conditionalReturn(value, function(index) {\n        return a[~~wrapper(index)];\n    });\n}, wrap = function wrap(min, max, value) {\n    // NOTE: wrap() CANNOT be an arrow function! A very odd compiling bug causes problems (unrelated to GSAP).\n    var range = max - min;\n    return _isArray(min) ? _wrapArray(min, wrap(0, min.length), max) : _conditionalReturn(value, function(value) {\n        return (range + (value - min) % range) % range + min;\n    });\n}, wrapYoyo = function wrapYoyo(min, max, value) {\n    var range = max - min, total = range * 2;\n    return _isArray(min) ? _wrapArray(min, wrapYoyo(0, min.length - 1), max) : _conditionalReturn(value, function(value) {\n        value = (total + (value - min) % total) % total || 0;\n        return min + (value > range ? total - value : value);\n    });\n}, _replaceRandom = function _replaceRandom(value) {\n    //replaces all occurrences of random(...) in a string with the calculated random value. can be a range like random(-100, 100, 5) or an array like random([0, 100, 500])\n    var prev = 0, s = \"\", i, nums, end, isArray;\n    while(~(i = value.indexOf(\"random(\", prev))){\n        end = value.indexOf(\")\", i);\n        isArray = value.charAt(i + 7) === \"[\";\n        nums = value.substr(i + 7, end - i - 7).match(isArray ? _delimitedValueExp : _strictNumExp);\n        s += value.substr(prev, i - prev) + random(isArray ? nums : +nums[0], isArray ? 0 : +nums[1], +nums[2] || 1e-5);\n        prev = end + 1;\n    }\n    return s + value.substr(prev, value.length - prev);\n}, mapRange = function mapRange(inMin, inMax, outMin, outMax, value) {\n    var inRange = inMax - inMin, outRange = outMax - outMin;\n    return _conditionalReturn(value, function(value) {\n        return outMin + ((value - inMin) / inRange * outRange || 0);\n    });\n}, interpolate = function interpolate(start, end, progress, mutate) {\n    var func = isNaN(start + end) ? 0 : function(p) {\n        return (1 - p) * start + p * end;\n    };\n    if (!func) {\n        var isString = _isString(start), master = {}, p, i, interpolators, l, il;\n        progress === true && (mutate = 1) && (progress = null);\n        if (isString) {\n            start = {\n                p: start\n            };\n            end = {\n                p: end\n            };\n        } else if (_isArray(start) && !_isArray(end)) {\n            interpolators = [];\n            l = start.length;\n            il = l - 2;\n            for(i = 1; i < l; i++){\n                interpolators.push(interpolate(start[i - 1], start[i])); //build the interpolators up front as a performance optimization so that when the function is called many times, it can just reuse them.\n            }\n            l--;\n            func = function func(p) {\n                p *= l;\n                var i = Math.min(il, ~~p);\n                return interpolators[i](p - i);\n            };\n            progress = end;\n        } else if (!mutate) {\n            start = _merge(_isArray(start) ? [] : {}, start);\n        }\n        if (!interpolators) {\n            for(p in end){\n                _addPropTween.call(master, start, p, \"get\", end[p]);\n            }\n            func = function func(p) {\n                return _renderPropTweens(p, master) || (isString ? start.p : start);\n            };\n        }\n    }\n    return _conditionalReturn(progress, func);\n}, _getLabelInDirection = function _getLabelInDirection(timeline, fromTime, backward) {\n    //used for nextLabel() and previousLabel()\n    var labels = timeline.labels, min = _bigNum, p, distance, label;\n    for(p in labels){\n        distance = labels[p] - fromTime;\n        if (distance < 0 === !!backward && distance && min > (distance = Math.abs(distance))) {\n            label = p;\n            min = distance;\n        }\n    }\n    return label;\n}, _callback = function _callback(animation, type, executeLazyFirst) {\n    var v = animation.vars, callback = v[type], prevContext = _context, context = animation._ctx, params, scope, result;\n    if (!callback) {\n        return;\n    }\n    params = v[type + \"Params\"];\n    scope = v.callbackScope || animation;\n    executeLazyFirst && _lazyTweens.length && _lazyRender(); //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onUpdate on a timeline that reports/checks tweened values.\n    context && (_context = context);\n    result = params ? callback.apply(scope, params) : callback.call(scope);\n    _context = prevContext;\n    return result;\n}, _interrupt = function _interrupt(animation) {\n    _removeFromParent(animation);\n    animation.scrollTrigger && animation.scrollTrigger.kill(!!_reverting);\n    animation.progress() < 1 && _callback(animation, \"onInterrupt\");\n    return animation;\n}, _quickTween, _registerPluginQueue = [], _createPlugin = function _createPlugin(config) {\n    if (!config) return;\n    config = !config.name && config[\"default\"] || config; // UMD packaging wraps things oddly, so for example MotionPathHelper becomes {MotionPathHelper:MotionPathHelper, default:MotionPathHelper}.\n    if (_windowExists() || config.headless) {\n        // edge case: some build tools may pass in a null/undefined value\n        var name = config.name, isFunc = _isFunction(config), Plugin = name && !isFunc && config.init ? function() {\n            this._props = [];\n        } : config, //in case someone passes in an object that's not a plugin, like CustomEase\n        instanceDefaults = {\n            init: _emptyFunc,\n            render: _renderPropTweens,\n            add: _addPropTween,\n            kill: _killPropTweensOf,\n            modifier: _addPluginModifier,\n            rawVars: 0\n        }, statics = {\n            targetTest: 0,\n            get: 0,\n            getSetter: _getSetter,\n            aliases: {},\n            register: 0\n        };\n        _wake();\n        if (config !== Plugin) {\n            if (_plugins[name]) {\n                return;\n            }\n            _setDefaults(Plugin, _setDefaults(_copyExcluding(config, instanceDefaults), statics)); //static methods\n            _merge(Plugin.prototype, _merge(instanceDefaults, _copyExcluding(config, statics))); //instance methods\n            _plugins[Plugin.prop = name] = Plugin;\n            if (config.targetTest) {\n                _harnessPlugins.push(Plugin);\n                _reservedProps[name] = 1;\n            }\n            name = (name === \"css\" ? \"CSS\" : name.charAt(0).toUpperCase() + name.substr(1)) + \"Plugin\"; //for the global name. \"motionPath\" should become MotionPathPlugin\n        }\n        _addGlobal(name, Plugin);\n        config.register && config.register(gsap, Plugin, PropTween);\n    } else {\n        _registerPluginQueue.push(config);\n    }\n}, /*\n * --------------------------------------------------------------------------------------\n * COLORS\n * --------------------------------------------------------------------------------------\n */ _255 = 255, _colorLookup = {\n    aqua: [\n        0,\n        _255,\n        _255\n    ],\n    lime: [\n        0,\n        _255,\n        0\n    ],\n    silver: [\n        192,\n        192,\n        192\n    ],\n    black: [\n        0,\n        0,\n        0\n    ],\n    maroon: [\n        128,\n        0,\n        0\n    ],\n    teal: [\n        0,\n        128,\n        128\n    ],\n    blue: [\n        0,\n        0,\n        _255\n    ],\n    navy: [\n        0,\n        0,\n        128\n    ],\n    white: [\n        _255,\n        _255,\n        _255\n    ],\n    olive: [\n        128,\n        128,\n        0\n    ],\n    yellow: [\n        _255,\n        _255,\n        0\n    ],\n    orange: [\n        _255,\n        165,\n        0\n    ],\n    gray: [\n        128,\n        128,\n        128\n    ],\n    purple: [\n        128,\n        0,\n        128\n    ],\n    green: [\n        0,\n        128,\n        0\n    ],\n    red: [\n        _255,\n        0,\n        0\n    ],\n    pink: [\n        _255,\n        192,\n        203\n    ],\n    cyan: [\n        0,\n        _255,\n        _255\n    ],\n    transparent: [\n        _255,\n        _255,\n        _255,\n        0\n    ]\n}, // possible future idea to replace the hard-coded color name values - put this in the ticker.wake() where we set the _doc:\n// let ctx = _doc.createElement(\"canvas\").getContext(\"2d\");\n// _forEachName(\"aqua,lime,silver,black,maroon,teal,blue,navy,white,olive,yellow,orange,gray,purple,green,red,pink,cyan\", color => {ctx.fillStyle = color; _colorLookup[color] = splitColor(ctx.fillStyle)});\n_hue = function _hue(h, m1, m2) {\n    h += h < 0 ? 1 : h > 1 ? -1 : 0;\n    return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < .5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * _255 + .5 | 0;\n}, splitColor = function splitColor(v, toHSL, forceAlpha) {\n    var a = !v ? _colorLookup.black : _isNumber(v) ? [\n        v >> 16,\n        v >> 8 & _255,\n        v & _255\n    ] : 0, r, g, b, h, s, l, max, min, d, wasHSL;\n    if (!a) {\n        if (v.substr(-1) === \",\") {\n            //sometimes a trailing comma is included and we should chop it off (typically from a comma-delimited list of values like a textShadow:\"2px 2px 2px blue, 5px 5px 5px rgb(255,0,0)\" - in this example \"blue,\" has a trailing comma. We could strip it out inside parseComplex() but we'd need to do it to the beginning and ending values plus it wouldn't provide protection from other potential scenarios like if the user passes in a similar value.\n            v = v.substr(0, v.length - 1);\n        }\n        if (_colorLookup[v]) {\n            a = _colorLookup[v];\n        } else if (v.charAt(0) === \"#\") {\n            if (v.length < 6) {\n                //for shorthand like #9F0 or #9F0F (could have alpha)\n                r = v.charAt(1);\n                g = v.charAt(2);\n                b = v.charAt(3);\n                v = \"#\" + r + r + g + g + b + b + (v.length === 5 ? v.charAt(4) + v.charAt(4) : \"\");\n            }\n            if (v.length === 9) {\n                // hex with alpha, like #fd5e53ff\n                a = parseInt(v.substr(1, 6), 16);\n                return [\n                    a >> 16,\n                    a >> 8 & _255,\n                    a & _255,\n                    parseInt(v.substr(7), 16) / 255\n                ];\n            }\n            v = parseInt(v.substr(1), 16);\n            a = [\n                v >> 16,\n                v >> 8 & _255,\n                v & _255\n            ];\n        } else if (v.substr(0, 3) === \"hsl\") {\n            a = wasHSL = v.match(_strictNumExp);\n            if (!toHSL) {\n                h = +a[0] % 360 / 360;\n                s = +a[1] / 100;\n                l = +a[2] / 100;\n                g = l <= .5 ? l * (s + 1) : l + s - l * s;\n                r = l * 2 - g;\n                a.length > 3 && (a[3] *= 1); //cast as number\n                a[0] = _hue(h + 1 / 3, r, g);\n                a[1] = _hue(h, r, g);\n                a[2] = _hue(h - 1 / 3, r, g);\n            } else if (~v.indexOf(\"=\")) {\n                //if relative values are found, just return the raw strings with the relative prefixes in place.\n                a = v.match(_numExp);\n                forceAlpha && a.length < 4 && (a[3] = 1);\n                return a;\n            }\n        } else {\n            a = v.match(_strictNumExp) || _colorLookup.transparent;\n        }\n        a = a.map(Number);\n    }\n    if (toHSL && !wasHSL) {\n        r = a[0] / _255;\n        g = a[1] / _255;\n        b = a[2] / _255;\n        max = Math.max(r, g, b);\n        min = Math.min(r, g, b);\n        l = (max + min) / 2;\n        if (max === min) {\n            h = s = 0;\n        } else {\n            d = max - min;\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n            h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;\n            h *= 60;\n        }\n        a[0] = ~~(h + .5);\n        a[1] = ~~(s * 100 + .5);\n        a[2] = ~~(l * 100 + .5);\n    }\n    forceAlpha && a.length < 4 && (a[3] = 1);\n    return a;\n}, _colorOrderData = function _colorOrderData(v) {\n    // strips out the colors from the string, finds all the numeric slots (with units) and returns an array of those. The Array also has a \"c\" property which is an Array of the index values where the colors belong. This is to help work around issues where there's a mis-matched order of color/numeric data like drop-shadow(#f00 0px 1px 2px) and drop-shadow(0x 1px 2px #f00). This is basically a helper function used in _formatColors()\n    var values = [], c = [], i = -1;\n    v.split(_colorExp).forEach(function(v) {\n        var a = v.match(_numWithUnitExp) || [];\n        values.push.apply(values, a);\n        c.push(i += a.length + 1);\n    });\n    values.c = c;\n    return values;\n}, _formatColors = function _formatColors(s, toHSL, orderMatchData) {\n    var result = \"\", colors = (s + result).match(_colorExp), type = toHSL ? \"hsla(\" : \"rgba(\", i = 0, c, shell, d, l;\n    if (!colors) {\n        return s;\n    }\n    colors = colors.map(function(color) {\n        return (color = splitColor(color, toHSL, 1)) && type + (toHSL ? color[0] + \",\" + color[1] + \"%,\" + color[2] + \"%,\" + color[3] : color.join(\",\")) + \")\";\n    });\n    if (orderMatchData) {\n        d = _colorOrderData(s);\n        c = orderMatchData.c;\n        if (c.join(result) !== d.c.join(result)) {\n            shell = s.replace(_colorExp, \"1\").split(_numWithUnitExp);\n            l = shell.length - 1;\n            for(; i < l; i++){\n                result += shell[i] + (~c.indexOf(i) ? colors.shift() || type + \"0,0,0,0)\" : (d.length ? d : colors.length ? colors : orderMatchData).shift());\n            }\n        }\n    }\n    if (!shell) {\n        shell = s.split(_colorExp);\n        l = shell.length - 1;\n        for(; i < l; i++){\n            result += shell[i] + colors[i];\n        }\n    }\n    return result + shell[l];\n}, _colorExp = function() {\n    var s = \"(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#(?:[0-9a-f]{3,4}){1,2}\\\\b\", //we'll dynamically build this Regular Expression to conserve file size. After building it, it will be able to find rgb(), rgba(), # (hexadecimal), and named color values like red, blue, purple, etc.,\n    p;\n    for(p in _colorLookup){\n        s += \"|\" + p + \"\\\\b\";\n    }\n    return new RegExp(s + \")\", \"gi\");\n}(), _hslExp = /hsl[a]?\\(/, _colorStringFilter = function _colorStringFilter(a) {\n    var combined = a.join(\" \"), toHSL;\n    _colorExp.lastIndex = 0;\n    if (_colorExp.test(combined)) {\n        toHSL = _hslExp.test(combined);\n        a[1] = _formatColors(a[1], toHSL);\n        a[0] = _formatColors(a[0], toHSL, _colorOrderData(a[1])); // make sure the order of numbers/colors match with the END value.\n        return true;\n    }\n}, /*\n * --------------------------------------------------------------------------------------\n * TICKER\n * --------------------------------------------------------------------------------------\n */ _tickerActive, _ticker = function() {\n    var _getTime = Date.now, _lagThreshold = 500, _adjustedLag = 33, _startTime = _getTime(), _lastUpdate = _startTime, _gap = 1000 / 240, _nextTime = _gap, _listeners = [], _id, _req, _raf, _self, _delta, _i, _tick = function _tick(v) {\n        var elapsed = _getTime() - _lastUpdate, manual = v === true, overlap, dispatch, time, frame;\n        (elapsed > _lagThreshold || elapsed < 0) && (_startTime += elapsed - _adjustedLag);\n        _lastUpdate += elapsed;\n        time = _lastUpdate - _startTime;\n        overlap = time - _nextTime;\n        if (overlap > 0 || manual) {\n            frame = ++_self.frame;\n            _delta = time - _self.time * 1000;\n            _self.time = time = time / 1000;\n            _nextTime += overlap + (overlap >= _gap ? 4 : _gap - overlap);\n            dispatch = 1;\n        }\n        manual || (_id = _req(_tick)); //make sure the request is made before we dispatch the \"tick\" event so that timing is maintained. Otherwise, if processing the \"tick\" requires a bunch of time (like 15ms) and we're using a setTimeout() that's based on 16.7ms, it'd technically take 31.7ms between frames otherwise.\n        if (dispatch) {\n            for(_i = 0; _i < _listeners.length; _i++){\n                // use _i and check _listeners.length instead of a variable because a listener could get removed during the loop, and if that happens to an element less than the current index, it'd throw things off in the loop.\n                _listeners[_i](time, _delta, frame, v);\n            }\n        }\n    };\n    _self = {\n        time: 0,\n        frame: 0,\n        tick: function tick() {\n            _tick(true);\n        },\n        deltaRatio: function deltaRatio(fps) {\n            return _delta / (1000 / (fps || 60));\n        },\n        wake: function wake() {\n            if (_coreReady) {\n                if (!_coreInitted && _windowExists()) {\n                    _win = _coreInitted = window;\n                    _doc = _win.document || {};\n                    _globals.gsap = gsap;\n                    (_win.gsapVersions || (_win.gsapVersions = [])).push(gsap.version);\n                    _install(_installScope || _win.GreenSockGlobals || !_win.gsap && _win || {});\n                    _registerPluginQueue.forEach(_createPlugin);\n                }\n                _raf = typeof requestAnimationFrame !== \"undefined\" && requestAnimationFrame;\n                _id && _self.sleep();\n                _req = _raf || function(f) {\n                    return setTimeout(f, _nextTime - _self.time * 1000 + 1 | 0);\n                };\n                _tickerActive = 1;\n                _tick(2);\n            }\n        },\n        sleep: function sleep() {\n            (_raf ? cancelAnimationFrame : clearTimeout)(_id);\n            _tickerActive = 0;\n            _req = _emptyFunc;\n        },\n        lagSmoothing: function lagSmoothing(threshold, adjustedLag) {\n            _lagThreshold = threshold || Infinity; // zero should be interpreted as basically unlimited\n            _adjustedLag = Math.min(adjustedLag || 33, _lagThreshold);\n        },\n        fps: function fps(_fps) {\n            _gap = 1000 / (_fps || 240);\n            _nextTime = _self.time * 1000 + _gap;\n        },\n        add: function add(callback, once, prioritize) {\n            var func = once ? function(t, d, f, v) {\n                callback(t, d, f, v);\n                _self.remove(func);\n            } : callback;\n            _self.remove(callback);\n            _listeners[prioritize ? \"unshift\" : \"push\"](func);\n            _wake();\n            return func;\n        },\n        remove: function remove(callback, i) {\n            ~(i = _listeners.indexOf(callback)) && _listeners.splice(i, 1) && _i >= i && _i--;\n        },\n        _listeners: _listeners\n    };\n    return _self;\n}(), _wake = function _wake() {\n    return !_tickerActive && _ticker.wake();\n}, //also ensures the core classes are initialized.\n/*\n* -------------------------------------------------\n* EASING\n* -------------------------------------------------\n*/ _easeMap = {}, _customEaseExp = /^[\\d.\\-M][\\d.\\-,\\s]/, _quotesExp = /[\"']/g, _parseObjectInString = function _parseObjectInString(value) {\n    //takes a string like \"{wiggles:10, type:anticipate})\" and turns it into a real object. Notice it ends in \")\" and includes the {} wrappers. This is because we only use this function for parsing ease configs and prioritized optimization rather than reusability.\n    var obj = {}, split = value.substr(1, value.length - 3).split(\":\"), key = split[0], i = 1, l = split.length, index, val, parsedVal;\n    for(; i < l; i++){\n        val = split[i];\n        index = i !== l - 1 ? val.lastIndexOf(\",\") : val.length;\n        parsedVal = val.substr(0, index);\n        obj[key] = isNaN(parsedVal) ? parsedVal.replace(_quotesExp, \"\").trim() : +parsedVal;\n        key = val.substr(index + 1).trim();\n    }\n    return obj;\n}, _valueInParentheses = function _valueInParentheses(value) {\n    var open = value.indexOf(\"(\") + 1, close = value.indexOf(\")\"), nested = value.indexOf(\"(\", open);\n    return value.substring(open, ~nested && nested < close ? value.indexOf(\")\", close + 1) : close);\n}, _configEaseFromString = function _configEaseFromString(name) {\n    //name can be a string like \"elastic.out(1,0.5)\", and pass in _easeMap as obj and it'll parse it out and call the actual function like _easeMap.Elastic.easeOut.config(1,0.5). It will also parse custom ease strings as long as CustomEase is loaded and registered (internally as _easeMap._CE).\n    var split = (name + \"\").split(\"(\"), ease = _easeMap[split[0]];\n    return ease && split.length > 1 && ease.config ? ease.config.apply(null, ~name.indexOf(\"{\") ? [\n        _parseObjectInString(split[1])\n    ] : _valueInParentheses(name).split(\",\").map(_numericIfPossible)) : _easeMap._CE && _customEaseExp.test(name) ? _easeMap._CE(\"\", name) : ease;\n}, _invertEase = function _invertEase(ease) {\n    return function(p) {\n        return 1 - ease(1 - p);\n    };\n}, // allow yoyoEase to be set in children and have those affected when the parent/ancestor timeline yoyos.\n_propagateYoyoEase = function _propagateYoyoEase(timeline, isYoyo) {\n    var child = timeline._first, ease;\n    while(child){\n        if (child instanceof Timeline) {\n            _propagateYoyoEase(child, isYoyo);\n        } else if (child.vars.yoyoEase && (!child._yoyo || !child._repeat) && child._yoyo !== isYoyo) {\n            if (child.timeline) {\n                _propagateYoyoEase(child.timeline, isYoyo);\n            } else {\n                ease = child._ease;\n                child._ease = child._yEase;\n                child._yEase = ease;\n                child._yoyo = isYoyo;\n            }\n        }\n        child = child._next;\n    }\n}, _parseEase = function _parseEase(ease, defaultEase) {\n    return !ease ? defaultEase : (_isFunction(ease) ? ease : _easeMap[ease] || _configEaseFromString(ease)) || defaultEase;\n}, _insertEase = function _insertEase(names, easeIn, easeOut, easeInOut) {\n    if (easeOut === void 0) {\n        easeOut = function easeOut(p) {\n            return 1 - easeIn(1 - p);\n        };\n    }\n    if (easeInOut === void 0) {\n        easeInOut = function easeInOut(p) {\n            return p < .5 ? easeIn(p * 2) / 2 : 1 - easeIn((1 - p) * 2) / 2;\n        };\n    }\n    var ease = {\n        easeIn: easeIn,\n        easeOut: easeOut,\n        easeInOut: easeInOut\n    }, lowercaseName;\n    _forEachName(names, function(name) {\n        _easeMap[name] = _globals[name] = ease;\n        _easeMap[lowercaseName = name.toLowerCase()] = easeOut;\n        for(var p in ease){\n            _easeMap[lowercaseName + (p === \"easeIn\" ? \".in\" : p === \"easeOut\" ? \".out\" : \".inOut\")] = _easeMap[name + \".\" + p] = ease[p];\n        }\n    });\n    return ease;\n}, _easeInOutFromOut = function _easeInOutFromOut(easeOut) {\n    return function(p) {\n        return p < .5 ? (1 - easeOut(1 - p * 2)) / 2 : .5 + easeOut((p - .5) * 2) / 2;\n    };\n}, _configElastic = function _configElastic(type, amplitude, period) {\n    var p1 = amplitude >= 1 ? amplitude : 1, //note: if amplitude is < 1, we simply adjust the period for a more natural feel. Otherwise the math doesn't work right and the curve starts at 1.\n    p2 = (period || (type ? .3 : .45)) / (amplitude < 1 ? amplitude : 1), p3 = p2 / _2PI * (Math.asin(1 / p1) || 0), easeOut = function easeOut(p) {\n        return p === 1 ? 1 : p1 * Math.pow(2, -10 * p) * _sin((p - p3) * p2) + 1;\n    }, ease = type === \"out\" ? easeOut : type === \"in\" ? function(p) {\n        return 1 - easeOut(1 - p);\n    } : _easeInOutFromOut(easeOut);\n    p2 = _2PI / p2; //precalculate to optimize\n    ease.config = function(amplitude, period) {\n        return _configElastic(type, amplitude, period);\n    };\n    return ease;\n}, _configBack = function _configBack(type, overshoot) {\n    if (overshoot === void 0) {\n        overshoot = 1.70158;\n    }\n    var easeOut = function easeOut(p) {\n        return p ? --p * p * ((overshoot + 1) * p + overshoot) + 1 : 0;\n    }, ease = type === \"out\" ? easeOut : type === \"in\" ? function(p) {\n        return 1 - easeOut(1 - p);\n    } : _easeInOutFromOut(easeOut);\n    ease.config = function(overshoot) {\n        return _configBack(type, overshoot);\n    };\n    return ease;\n}; // a cheaper (kb and cpu) but more mild way to get a parameterized weighted ease by feeding in a value between -1 (easeIn) and 1 (easeOut) where 0 is linear.\n// _weightedEase = ratio => {\n// \tlet y = 0.5 + ratio / 2;\n// \treturn p => (2 * (1 - p) * p * y + p * p);\n// },\n// a stronger (but more expensive kb/cpu) parameterized weighted ease that lets you feed in a value between -1 (easeIn) and 1 (easeOut) where 0 is linear.\n// _weightedEaseStrong = ratio => {\n// \tratio = .5 + ratio / 2;\n// \tlet o = 1 / 3 * (ratio < .5 ? ratio : 1 - ratio),\n// \t\tb = ratio - o,\n// \t\tc = ratio + o;\n// \treturn p => p === 1 ? p : 3 * b * (1 - p) * (1 - p) * p + 3 * c * (1 - p) * p * p + p * p * p;\n// };\n_forEachName(\"Linear,Quad,Cubic,Quart,Quint,Strong\", function(name, i) {\n    var power = i < 5 ? i + 1 : i;\n    _insertEase(name + \",Power\" + (power - 1), i ? function(p) {\n        return Math.pow(p, power);\n    } : function(p) {\n        return p;\n    }, function(p) {\n        return 1 - Math.pow(1 - p, power);\n    }, function(p) {\n        return p < .5 ? Math.pow(p * 2, power) / 2 : 1 - Math.pow((1 - p) * 2, power) / 2;\n    });\n});\n_easeMap.Linear.easeNone = _easeMap.none = _easeMap.Linear.easeIn;\n_insertEase(\"Elastic\", _configElastic(\"in\"), _configElastic(\"out\"), _configElastic());\n(function(n, c) {\n    var n1 = 1 / c, n2 = 2 * n1, n3 = 2.5 * n1, easeOut = function easeOut(p) {\n        return p < n1 ? n * p * p : p < n2 ? n * Math.pow(p - 1.5 / c, 2) + .75 : p < n3 ? n * (p -= 2.25 / c) * p + .9375 : n * Math.pow(p - 2.625 / c, 2) + .984375;\n    };\n    _insertEase(\"Bounce\", function(p) {\n        return 1 - easeOut(1 - p);\n    }, easeOut);\n})(7.5625, 2.75);\n_insertEase(\"Expo\", function(p) {\n    return p ? Math.pow(2, 10 * (p - 1)) : 0;\n});\n_insertEase(\"Circ\", function(p) {\n    return -(_sqrt(1 - p * p) - 1);\n});\n_insertEase(\"Sine\", function(p) {\n    return p === 1 ? 1 : -_cos(p * _HALF_PI) + 1;\n});\n_insertEase(\"Back\", _configBack(\"in\"), _configBack(\"out\"), _configBack());\n_easeMap.SteppedEase = _easeMap.steps = _globals.SteppedEase = {\n    config: function config(steps, immediateStart) {\n        if (steps === void 0) {\n            steps = 1;\n        }\n        var p1 = 1 / steps, p2 = steps + (immediateStart ? 0 : 1), p3 = immediateStart ? 1 : 0, max = 1 - _tinyNum;\n        return function(p) {\n            return ((p2 * _clamp(0, max, p) | 0) + p3) * p1;\n        };\n    }\n};\n_defaults.ease = _easeMap[\"quad.out\"];\n_forEachName(\"onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt\", function(name) {\n    return _callbackNames += name + \",\" + name + \"Params,\";\n});\n/*\n * --------------------------------------------------------------------------------------\n * CACHE\n * --------------------------------------------------------------------------------------\n */ var GSCache = function GSCache(target, harness) {\n    this.id = _gsID++;\n    target._gsap = this;\n    this.target = target;\n    this.harness = harness;\n    this.get = harness ? harness.get : _getProperty;\n    this.set = harness ? harness.getSetter : _getSetter;\n};\n_c = GSCache;\n/*\n * --------------------------------------------------------------------------------------\n * ANIMATION\n * --------------------------------------------------------------------------------------\n */ var Animation = /*#__PURE__*/ function() {\n    function Animation(vars) {\n        this.vars = vars;\n        this._delay = +vars.delay || 0;\n        if (this._repeat = vars.repeat === Infinity ? -2 : vars.repeat || 0) {\n            // TODO: repeat: Infinity on a timeline's children must flag that timeline internally and affect its totalDuration, otherwise it'll stop in the negative direction when reaching the start.\n            this._rDelay = vars.repeatDelay || 0;\n            this._yoyo = !!vars.yoyo || !!vars.yoyoEase;\n        }\n        this._ts = 1;\n        _setDuration(this, +vars.duration, 1, 1);\n        this.data = vars.data;\n        if (_context) {\n            this._ctx = _context;\n            _context.data.push(this);\n        }\n        _tickerActive || _ticker.wake();\n    }\n    var _proto = Animation.prototype;\n    _proto.delay = function delay(value) {\n        if (value || value === 0) {\n            this.parent && this.parent.smoothChildTiming && this.startTime(this._start + value - this._delay);\n            this._delay = value;\n            return this;\n        }\n        return this._delay;\n    };\n    _proto.duration = function duration(value) {\n        return arguments.length ? this.totalDuration(this._repeat > 0 ? value + (value + this._rDelay) * this._repeat : value) : this.totalDuration() && this._dur;\n    };\n    _proto.totalDuration = function totalDuration(value) {\n        if (!arguments.length) {\n            return this._tDur;\n        }\n        this._dirty = 0;\n        return _setDuration(this, this._repeat < 0 ? value : (value - this._repeat * this._rDelay) / (this._repeat + 1));\n    };\n    _proto.totalTime = function totalTime(_totalTime, suppressEvents) {\n        _wake();\n        if (!arguments.length) {\n            return this._tTime;\n        }\n        var parent = this._dp;\n        if (parent && parent.smoothChildTiming && this._ts) {\n            _alignPlayhead(this, _totalTime);\n            !parent._dp || parent.parent || _postAddChecks(parent, this); // edge case: if this is a child of a timeline that already completed, for example, we must re-activate the parent.\n            //in case any of the ancestor timelines had completed but should now be enabled, we should reset their totalTime() which will also ensure that they're lined up properly and enabled. Skip for animations that are on the root (wasteful). Example: a TimelineLite.exportRoot() is performed when there's a paused tween on the root, the export will not complete until that tween is unpaused, but imagine a child gets restarted later, after all [unpaused] tweens have completed. The start of that child would get pushed out, but one of the ancestors may have completed.\n            while(parent && parent.parent){\n                if (parent.parent._time !== parent._start + (parent._ts >= 0 ? parent._tTime / parent._ts : (parent.totalDuration() - parent._tTime) / -parent._ts)) {\n                    parent.totalTime(parent._tTime, true);\n                }\n                parent = parent.parent;\n            }\n            if (!this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && _totalTime < this._tDur || this._ts < 0 && _totalTime > 0 || !this._tDur && !_totalTime)) {\n                //if the animation doesn't have a parent, put it back into its last parent (recorded as _dp for exactly cases like this). Limit to parents with autoRemoveChildren (like globalTimeline) so that if the user manually removes an animation from a timeline and then alters its playhead, it doesn't get added back in.\n                _addToTimeline(this._dp, this, this._start - this._delay);\n            }\n        }\n        if (this._tTime !== _totalTime || !this._dur && !suppressEvents || this._initted && Math.abs(this._zTime) === _tinyNum || !_totalTime && !this._initted && (this.add || this._ptLookup)) {\n            // check for _ptLookup on a Tween instance to ensure it has actually finished being instantiated, otherwise if this.reverse() gets called in the Animation constructor, it could trigger a render() here even though the _targets weren't populated, thus when _init() is called there won't be any PropTweens (it'll act like the tween is non-functional)\n            this._ts || (this._pTime = _totalTime); // otherwise, if an animation is paused, then the playhead is moved back to zero, then resumed, it'd revert back to the original time at the pause\n            //if (!this._lock) { // avoid endless recursion (not sure we need this yet or if it's worth the performance hit)\n            //   this._lock = 1;\n            _lazySafeRender(this, _totalTime, suppressEvents); //   this._lock = 0;\n        //}\n        }\n        return this;\n    };\n    _proto.time = function time(value, suppressEvents) {\n        return arguments.length ? this.totalTime(Math.min(this.totalDuration(), value + _elapsedCycleDuration(this)) % (this._dur + this._rDelay) || (value ? this._dur : 0), suppressEvents) : this._time; // note: if the modulus results in 0, the playhead could be exactly at the end or the beginning, and we always defer to the END with a non-zero value, otherwise if you set the time() to the very end (duration()), it would render at the START!\n    };\n    _proto.totalProgress = function totalProgress(value, suppressEvents) {\n        return arguments.length ? this.totalTime(this.totalDuration() * value, suppressEvents) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.rawTime() > 0 ? 1 : 0;\n    };\n    _proto.progress = function progress(value, suppressEvents) {\n        return arguments.length ? this.totalTime(this.duration() * (this._yoyo && !(this.iteration() & 1) ? 1 - value : value) + _elapsedCycleDuration(this), suppressEvents) : this.duration() ? Math.min(1, this._time / this._dur) : this.rawTime() > 0 ? 1 : 0;\n    };\n    _proto.iteration = function iteration(value, suppressEvents) {\n        var cycleDuration = this.duration() + this._rDelay;\n        return arguments.length ? this.totalTime(this._time + (value - 1) * cycleDuration, suppressEvents) : this._repeat ? _animationCycle(this._tTime, cycleDuration) + 1 : 1;\n    } // potential future addition:\n    ;\n    _proto.timeScale = function timeScale(value, suppressEvents) {\n        if (!arguments.length) {\n            return this._rts === -_tinyNum ? 0 : this._rts; // recorded timeScale. Special case: if someone calls reverse() on an animation with timeScale of 0, we assign it -_tinyNum to remember it's reversed.\n        }\n        if (this._rts === value) {\n            return this;\n        }\n        var tTime = this.parent && this._ts ? _parentToChildTotalTime(this.parent._time, this) : this._tTime; // make sure to do the parentToChildTotalTime() BEFORE setting the new _ts because the old one must be used in that calculation.\n        // future addition? Up side: fast and minimal file size. Down side: only works on this animation; if a timeline is reversed, for example, its childrens' onReverse wouldn't get called.\n        //(+value < 0 && this._rts >= 0) && _callback(this, \"onReverse\", true);\n        // prioritize rendering where the parent's playhead lines up instead of this._tTime because there could be a tween that's animating another tween's timeScale in the same rendering loop (same parent), thus if the timeScale tween renders first, it would alter _start BEFORE _tTime was set on that tick (in the rendering loop), effectively freezing it until the timeScale tween finishes.\n        this._rts = +value || 0;\n        this._ts = this._ps || value === -_tinyNum ? 0 : this._rts; // _ts is the functional timeScale which would be 0 if the animation is paused.\n        this.totalTime(_clamp(-Math.abs(this._delay), this._tDur, tTime), suppressEvents !== false);\n        _setEnd(this); // if parent.smoothChildTiming was false, the end time didn't get updated in the _alignPlayhead() method, so do it here.\n        return _recacheAncestors(this);\n    };\n    _proto.paused = function paused(value) {\n        if (!arguments.length) {\n            return this._ps;\n        }\n        if (this._ps !== value) {\n            this._ps = value;\n            if (value) {\n                this._pTime = this._tTime || Math.max(-this._delay, this.rawTime()); // if the pause occurs during the delay phase, make sure that's factored in when resuming.\n                this._ts = this._act = 0; // _ts is the functional timeScale, so a paused tween would effectively have a timeScale of 0. We record the \"real\" timeScale as _rts (recorded time scale)\n            } else {\n                _wake();\n                this._ts = this._rts; //only defer to _pTime (pauseTime) if tTime is zero. Remember, someone could pause() an animation, then scrub the playhead and resume(). If the parent doesn't have smoothChildTiming, we render at the rawTime() because the startTime won't get updated.\n                this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, this.progress() === 1 && Math.abs(this._zTime) !== _tinyNum && (this._tTime -= _tinyNum)); // edge case: animation.progress(1).pause().play() wouldn't render again because the playhead is already at the end, but the call to totalTime() below will add it back to its parent...and not remove it again (since removing only happens upon rendering at a new time). Offsetting the _tTime slightly is done simply to cause the final render in totalTime() that'll pop it off its timeline (if autoRemoveChildren is true, of course). Check to make sure _zTime isn't -_tinyNum to avoid an edge case where the playhead is pushed to the end but INSIDE a tween/callback, the timeline itself is paused thus halting rendering and leaving a few unrendered. When resuming, it wouldn't render those otherwise.\n            }\n        }\n        return this;\n    };\n    _proto.startTime = function startTime(value) {\n        if (arguments.length) {\n            this._start = value;\n            var parent = this.parent || this._dp;\n            parent && (parent._sort || !this.parent) && _addToTimeline(parent, this, value - this._delay);\n            return this;\n        }\n        return this._start;\n    };\n    _proto.endTime = function endTime(includeRepeats) {\n        return this._start + (_isNotFalse(includeRepeats) ? this.totalDuration() : this.duration()) / Math.abs(this._ts || 1);\n    };\n    _proto.rawTime = function rawTime(wrapRepeats) {\n        var parent = this.parent || this._dp; // _dp = detached parent\n        return !parent ? this._tTime : wrapRepeats && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : !this._ts ? this._tTime : _parentToChildTotalTime(parent.rawTime(wrapRepeats), this);\n    };\n    _proto.revert = function revert(config) {\n        if (config === void 0) {\n            config = _revertConfig;\n        }\n        var prevIsReverting = _reverting;\n        _reverting = config;\n        if (this._initted || this._startAt) {\n            this.timeline && this.timeline.revert(config);\n            this.totalTime(-0.01, config.suppressEvents);\n        }\n        this.data !== \"nested\" && config.kill !== false && this.kill();\n        _reverting = prevIsReverting;\n        return this;\n    };\n    _proto.globalTime = function globalTime(rawTime) {\n        var animation = this, time = arguments.length ? rawTime : animation.rawTime();\n        while(animation){\n            time = animation._start + time / (Math.abs(animation._ts) || 1);\n            animation = animation._dp;\n        }\n        return !this.parent && this._sat ? this._sat.globalTime(rawTime) : time; // the _startAt tweens for .fromTo() and .from() that have immediateRender should always be FIRST in the timeline (important for context.revert()). \"_sat\" stands for _startAtTween, referring to the parent tween that created the _startAt. We must discern if that tween had immediateRender so that we can know whether or not to prioritize it in revert().\n    };\n    _proto.repeat = function repeat(value) {\n        if (arguments.length) {\n            this._repeat = value === Infinity ? -2 : value;\n            return _onUpdateTotalDuration(this);\n        }\n        return this._repeat === -2 ? Infinity : this._repeat;\n    };\n    _proto.repeatDelay = function repeatDelay(value) {\n        if (arguments.length) {\n            var time = this._time;\n            this._rDelay = value;\n            _onUpdateTotalDuration(this);\n            return time ? this.time(time) : this;\n        }\n        return this._rDelay;\n    };\n    _proto.yoyo = function yoyo(value) {\n        if (arguments.length) {\n            this._yoyo = value;\n            return this;\n        }\n        return this._yoyo;\n    };\n    _proto.seek = function seek(position, suppressEvents) {\n        return this.totalTime(_parsePosition(this, position), _isNotFalse(suppressEvents));\n    };\n    _proto.restart = function restart(includeDelay, suppressEvents) {\n        return this.play().totalTime(includeDelay ? -this._delay : 0, _isNotFalse(suppressEvents));\n    };\n    _proto.play = function play(from, suppressEvents) {\n        from != null && this.seek(from, suppressEvents);\n        return this.reversed(false).paused(false);\n    };\n    _proto.reverse = function reverse(from, suppressEvents) {\n        from != null && this.seek(from || this.totalDuration(), suppressEvents);\n        return this.reversed(true).paused(false);\n    };\n    _proto.pause = function pause(atTime, suppressEvents) {\n        atTime != null && this.seek(atTime, suppressEvents);\n        return this.paused(true);\n    };\n    _proto.resume = function resume() {\n        return this.paused(false);\n    };\n    _proto.reversed = function reversed(value) {\n        if (arguments.length) {\n            !!value !== this.reversed() && this.timeScale(-this._rts || (value ? -_tinyNum : 0)); // in case timeScale is zero, reversing would have no effect so we use _tinyNum.\n            return this;\n        }\n        return this._rts < 0;\n    };\n    _proto.invalidate = function invalidate() {\n        this._initted = this._act = 0;\n        this._zTime = -_tinyNum;\n        return this;\n    };\n    _proto.isActive = function isActive() {\n        var parent = this.parent || this._dp, start = this._start, rawTime;\n        return !!(!parent || this._ts && this._initted && parent.isActive() && (rawTime = parent.rawTime(true)) >= start && rawTime < this.endTime(true) - _tinyNum);\n    };\n    _proto.eventCallback = function eventCallback(type, callback, params) {\n        var vars = this.vars;\n        if (arguments.length > 1) {\n            if (!callback) {\n                delete vars[type];\n            } else {\n                vars[type] = callback;\n                params && (vars[type + \"Params\"] = params);\n                type === \"onUpdate\" && (this._onUpdate = callback);\n            }\n            return this;\n        }\n        return vars[type];\n    };\n    _proto.then = function then(onFulfilled) {\n        var self = this;\n        return new Promise(function(resolve) {\n            var f = _isFunction(onFulfilled) ? onFulfilled : _passThrough, _resolve = function _resolve() {\n                var _then = self.then;\n                self.then = null; // temporarily null the then() method to avoid an infinite loop (see https://github.com/greensock/GSAP/issues/322)\n                _isFunction(f) && (f = f(self)) && (f.then || f === self) && (self.then = _then);\n                resolve(f);\n                self.then = _then;\n            };\n            if (self._initted && self.totalProgress() === 1 && self._ts >= 0 || !self._tTime && self._ts < 0) {\n                _resolve();\n            } else {\n                self._prom = _resolve;\n            }\n        });\n    };\n    _proto.kill = function kill() {\n        _interrupt(this);\n    };\n    return Animation;\n}();\n_setDefaults(Animation.prototype, {\n    _time: 0,\n    _start: 0,\n    _end: 0,\n    _tTime: 0,\n    _tDur: 0,\n    _dirty: 0,\n    _repeat: 0,\n    _yoyo: false,\n    parent: null,\n    _initted: false,\n    _rDelay: 0,\n    _ts: 1,\n    _dp: 0,\n    ratio: 0,\n    _zTime: -_tinyNum,\n    _prom: 0,\n    _ps: false,\n    _rts: 1\n});\n/*\n * -------------------------------------------------\n * TIMELINE\n * -------------------------------------------------\n */ var Timeline = /*#__PURE__*/ function(_Animation) {\n    _inheritsLoose(Timeline, _Animation);\n    function Timeline(vars, position) {\n        var _this;\n        if (vars === void 0) {\n            vars = {};\n        }\n        _this = _Animation.call(this, vars) || this;\n        _this.labels = {};\n        _this.smoothChildTiming = !!vars.smoothChildTiming;\n        _this.autoRemoveChildren = !!vars.autoRemoveChildren;\n        _this._sort = _isNotFalse(vars.sortChildren);\n        _globalTimeline && _addToTimeline(vars.parent || _globalTimeline, _assertThisInitialized(_this), position);\n        vars.reversed && _this.reverse();\n        vars.paused && _this.paused(true);\n        vars.scrollTrigger && _scrollTrigger(_assertThisInitialized(_this), vars.scrollTrigger);\n        return _this;\n    }\n    var _proto2 = Timeline.prototype;\n    _proto2.to = function to(targets, vars, position) {\n        _createTweenType(0, arguments, this);\n        return this;\n    };\n    _proto2.from = function from(targets, vars, position) {\n        _createTweenType(1, arguments, this);\n        return this;\n    };\n    _proto2.fromTo = function fromTo(targets, fromVars, toVars, position) {\n        _createTweenType(2, arguments, this);\n        return this;\n    };\n    _proto2.set = function set(targets, vars, position) {\n        vars.duration = 0;\n        vars.parent = this;\n        _inheritDefaults(vars).repeatDelay || (vars.repeat = 0);\n        vars.immediateRender = !!vars.immediateRender;\n        new Tween(targets, vars, _parsePosition(this, position), 1);\n        return this;\n    };\n    _proto2.call = function call(callback, params, position) {\n        return _addToTimeline(this, Tween.delayedCall(0, callback, params), position);\n    } //ONLY for backward compatibility! Maybe delete?\n    ;\n    _proto2.staggerTo = function staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {\n        vars.duration = duration;\n        vars.stagger = vars.stagger || stagger;\n        vars.onComplete = onCompleteAll;\n        vars.onCompleteParams = onCompleteAllParams;\n        vars.parent = this;\n        new Tween(targets, vars, _parsePosition(this, position));\n        return this;\n    };\n    _proto2.staggerFrom = function staggerFrom(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {\n        vars.runBackwards = 1;\n        _inheritDefaults(vars).immediateRender = _isNotFalse(vars.immediateRender);\n        return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams);\n    };\n    _proto2.staggerFromTo = function staggerFromTo(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams) {\n        toVars.startAt = fromVars;\n        _inheritDefaults(toVars).immediateRender = _isNotFalse(toVars.immediateRender);\n        return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams);\n    };\n    _proto2.render = function render(totalTime, suppressEvents, force) {\n        var prevTime = this._time, tDur = this._dirty ? this.totalDuration() : this._tDur, dur = this._dur, tTime = totalTime <= 0 ? 0 : _roundPrecise(totalTime), // if a paused timeline is resumed (or its _start is updated for another reason...which rounds it), that could result in the playhead shifting a **tiny** amount and a zero-duration child at that spot may get rendered at a different ratio, like its totalTime in render() may be 1e-17 instead of 0, for example.\n        crossingStart = this._zTime < 0 !== totalTime < 0 && (this._initted || !dur), time, child, next, iteration, cycleDuration, prevPaused, pauseTween, timeScale, prevStart, prevIteration, yoyo, isYoyo;\n        this !== _globalTimeline && tTime > tDur && totalTime >= 0 && (tTime = tDur);\n        if (tTime !== this._tTime || force || crossingStart) {\n            if (prevTime !== this._time && dur) {\n                //if totalDuration() finds a child with a negative startTime and smoothChildTiming is true, things get shifted around internally so we need to adjust the time accordingly. For example, if a tween starts at -30 we must shift EVERYTHING forward 30 seconds and move this timeline's startTime backward by 30 seconds so that things align with the playhead (no jump).\n                tTime += this._time - prevTime;\n                totalTime += this._time - prevTime;\n            }\n            time = tTime;\n            prevStart = this._start;\n            timeScale = this._ts;\n            prevPaused = !timeScale;\n            if (crossingStart) {\n                dur || (prevTime = this._zTime); //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect.\n                (totalTime || !suppressEvents) && (this._zTime = totalTime);\n            }\n            if (this._repeat) {\n                //adjust the time for repeats and yoyos\n                yoyo = this._yoyo;\n                cycleDuration = dur + this._rDelay;\n                if (this._repeat < -1 && totalTime < 0) {\n                    return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);\n                }\n                time = _roundPrecise(tTime % cycleDuration); //round to avoid floating point errors. (4 % 0.8 should be 0 but some browsers report it as 0.79999999!)\n                if (tTime === tDur) {\n                    // the tDur === tTime is for edge cases where there's a lengthy decimal on the duration and it may reach the very end but the time is rendered as not-quite-there (remember, tDur is rounded to 4 decimals whereas dur isn't)\n                    iteration = this._repeat;\n                    time = dur;\n                } else {\n                    iteration = ~~(tTime / cycleDuration);\n                    if (iteration && iteration === tTime / cycleDuration) {\n                        time = dur;\n                        iteration--;\n                    }\n                    time > dur && (time = dur);\n                }\n                prevIteration = _animationCycle(this._tTime, cycleDuration);\n                !prevTime && this._tTime && prevIteration !== iteration && this._tTime - prevIteration * cycleDuration - this._dur <= 0 && (prevIteration = iteration); // edge case - if someone does addPause() at the very beginning of a repeating timeline, that pause is technically at the same spot as the end which causes this._time to get set to 0 when the totalTime would normally place the playhead at the end. See https://gsap.com/forums/topic/23823-closing-nav-animation-not-working-on-ie-and-iphone-6-maybe-other-older-browser/?tab=comments#comment-113005 also, this._tTime - prevIteration * cycleDuration - this._dur <= 0 just checks to make sure it wasn't previously in the \"repeatDelay\" portion\n                if (yoyo && iteration & 1) {\n                    time = dur - time;\n                    isYoyo = 1;\n                }\n                /*\n        make sure children at the end/beginning of the timeline are rendered properly. If, for example,\n        a 3-second long timeline rendered at 2.9 seconds previously, and now renders at 3.2 seconds (which\n        would get translated to 2.8 seconds if the timeline yoyos or 0.2 seconds if it just repeats), there\n        could be a callback or a short tween that's at 2.95 or 3 seconds in which wouldn't render. So\n        we need to push the timeline to the end (and/or beginning depending on its yoyo value). Also we must\n        ensure that zero-duration tweens at the very beginning or end of the Timeline work.\n        */ if (iteration !== prevIteration && !this._lock) {\n                    var rewinding = yoyo && prevIteration & 1, doesWrap = rewinding === (yoyo && iteration & 1);\n                    iteration < prevIteration && (rewinding = !rewinding);\n                    prevTime = rewinding ? 0 : tTime % dur ? dur : tTime; // if the playhead is landing exactly at the end of an iteration, use that totalTime rather than only the duration, otherwise it'll skip the 2nd render since it's effectively at the same time.\n                    this._lock = 1;\n                    this.render(prevTime || (isYoyo ? 0 : _roundPrecise(iteration * cycleDuration)), suppressEvents, !dur)._lock = 0;\n                    this._tTime = tTime; // if a user gets the iteration() inside the onRepeat, for example, it should be accurate.\n                    !suppressEvents && this.parent && _callback(this, \"onRepeat\");\n                    this.vars.repeatRefresh && !isYoyo && (this.invalidate()._lock = 1);\n                    if (prevTime && prevTime !== this._time || prevPaused !== !this._ts || this.vars.onRepeat && !this.parent && !this._act) {\n                        // if prevTime is 0 and we render at the very end, _time will be the end, thus won't match. So in this edge case, prevTime won't match _time but that's okay. If it gets killed in the onRepeat, eject as well.\n                        return this;\n                    }\n                    dur = this._dur; // in case the duration changed in the onRepeat\n                    tDur = this._tDur;\n                    if (doesWrap) {\n                        this._lock = 2;\n                        prevTime = rewinding ? dur : -0.0001;\n                        this.render(prevTime, true);\n                        this.vars.repeatRefresh && !isYoyo && this.invalidate();\n                    }\n                    this._lock = 0;\n                    if (!this._ts && !prevPaused) {\n                        return this;\n                    } //in order for yoyoEase to work properly when there's a stagger, we must swap out the ease in each sub-tween.\n                    _propagateYoyoEase(this, isYoyo);\n                }\n            }\n            if (this._hasPause && !this._forcing && this._lock < 2) {\n                pauseTween = _findNextPauseTween(this, _roundPrecise(prevTime), _roundPrecise(time));\n                if (pauseTween) {\n                    tTime -= time - (time = pauseTween._start);\n                }\n            }\n            this._tTime = tTime;\n            this._time = time;\n            this._act = !timeScale; //as long as it's not paused, force it to be active so that if the user renders independent of the parent timeline, it'll be forced to re-render on the next tick.\n            if (!this._initted) {\n                this._onUpdate = this.vars.onUpdate;\n                this._initted = 1;\n                this._zTime = totalTime;\n                prevTime = 0; // upon init, the playhead should always go forward; someone could invalidate() a completed timeline and then if they restart(), that would make child tweens render in reverse order which could lock in the wrong starting values if they build on each other, like tl.to(obj, {x: 100}).to(obj, {x: 0}).\n            }\n            if (!prevTime && time && !suppressEvents && !iteration) {\n                _callback(this, \"onStart\");\n                if (this._tTime !== tTime) {\n                    // in case the onStart triggered a render at a different spot, eject. Like if someone did animation.pause(0.5) or something inside the onStart.\n                    return this;\n                }\n            }\n            if (time >= prevTime && totalTime >= 0) {\n                child = this._first;\n                while(child){\n                    next = child._next;\n                    if ((child._act || time >= child._start) && child._ts && pauseTween !== child) {\n                        if (child.parent !== this) {\n                            // an extreme edge case - the child's render could do something like kill() the \"next\" one in the linked list, or reparent it. In that case we must re-initiate the whole render to be safe.\n                            return this.render(totalTime, suppressEvents, force);\n                        }\n                        child.render(child._ts > 0 ? (time - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (time - child._start) * child._ts, suppressEvents, force);\n                        if (time !== this._time || !this._ts && !prevPaused) {\n                            //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete\n                            pauseTween = 0;\n                            next && (tTime += this._zTime = -_tinyNum); // it didn't finish rendering, so flag zTime as negative so that so that the next time render() is called it'll be forced (to render any remaining children)\n                            break;\n                        }\n                    }\n                    child = next;\n                }\n            } else {\n                child = this._last;\n                var adjustedTime = totalTime < 0 ? totalTime : time; //when the playhead goes backward beyond the start of this timeline, we must pass that information down to the child animations so that zero-duration tweens know whether to render their starting or ending values.\n                while(child){\n                    next = child._prev;\n                    if ((child._act || adjustedTime <= child._end) && child._ts && pauseTween !== child) {\n                        if (child.parent !== this) {\n                            // an extreme edge case - the child's render could do something like kill() the \"next\" one in the linked list, or reparent it. In that case we must re-initiate the whole render to be safe.\n                            return this.render(totalTime, suppressEvents, force);\n                        }\n                        child.render(child._ts > 0 ? (adjustedTime - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (adjustedTime - child._start) * child._ts, suppressEvents, force || _reverting && (child._initted || child._startAt)); // if reverting, we should always force renders of initted tweens (but remember that .fromTo() or .from() may have a _startAt but not _initted yet). If, for example, a .fromTo() tween with a stagger (which creates an internal timeline) gets reverted BEFORE some of its child tweens render for the first time, it may not properly trigger them to revert.\n                        if (time !== this._time || !this._ts && !prevPaused) {\n                            //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete\n                            pauseTween = 0;\n                            next && (tTime += this._zTime = adjustedTime ? -_tinyNum : _tinyNum); // it didn't finish rendering, so adjust zTime so that so that the next time render() is called it'll be forced (to render any remaining children)\n                            break;\n                        }\n                    }\n                    child = next;\n                }\n            }\n            if (pauseTween && !suppressEvents) {\n                this.pause();\n                pauseTween.render(time >= prevTime ? 0 : -_tinyNum)._zTime = time >= prevTime ? 1 : -1;\n                if (this._ts) {\n                    //the callback resumed playback! So since we may have held back the playhead due to where the pause is positioned, go ahead and jump to where it's SUPPOSED to be (if no pause happened).\n                    this._start = prevStart; //if the pause was at an earlier time and the user resumed in the callback, it could reposition the timeline (changing its startTime), throwing things off slightly, so we make sure the _start doesn't shift.\n                    _setEnd(this);\n                    return this.render(totalTime, suppressEvents, force);\n                }\n            }\n            this._onUpdate && !suppressEvents && _callback(this, \"onUpdate\", true);\n            if (tTime === tDur && this._tTime >= this.totalDuration() || !tTime && prevTime) {\n                if (prevStart === this._start || Math.abs(timeScale) !== Math.abs(this._ts)) {\n                    if (!this._lock) {\n                        // remember, a child's callback may alter this timeline's playhead or timeScale which is why we need to add some of these checks.\n                        (totalTime || !dur) && (tTime === tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1); // don't remove if the timeline is reversed and the playhead isn't at 0, otherwise tl.progress(1).reverse() won't work. Only remove if the playhead is at the end and timeScale is positive, or if the playhead is at 0 and the timeScale is negative.\n                        if (!suppressEvents && !(totalTime < 0 && !prevTime) && (tTime || prevTime || !tDur)) {\n                            _callback(this, tTime === tDur && totalTime >= 0 ? \"onComplete\" : \"onReverseComplete\", true);\n                            this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();\n                        }\n                    }\n                }\n            }\n        }\n        return this;\n    };\n    _proto2.add = function add(child, position) {\n        var _this2 = this;\n        _isNumber(position) || (position = _parsePosition(this, position, child));\n        if (!(child instanceof Animation)) {\n            if (_isArray(child)) {\n                child.forEach(function(obj) {\n                    return _this2.add(obj, position);\n                });\n                return this;\n            }\n            if (_isString(child)) {\n                return this.addLabel(child, position);\n            }\n            if (_isFunction(child)) {\n                child = Tween.delayedCall(0, child);\n            } else {\n                return this;\n            }\n        }\n        return this !== child ? _addToTimeline(this, child, position) : this; //don't allow a timeline to be added to itself as a child!\n    };\n    _proto2.getChildren = function getChildren(nested, tweens, timelines, ignoreBeforeTime) {\n        if (nested === void 0) {\n            nested = true;\n        }\n        if (tweens === void 0) {\n            tweens = true;\n        }\n        if (timelines === void 0) {\n            timelines = true;\n        }\n        if (ignoreBeforeTime === void 0) {\n            ignoreBeforeTime = -_bigNum;\n        }\n        var a = [], child = this._first;\n        while(child){\n            if (child._start >= ignoreBeforeTime) {\n                if (child instanceof Tween) {\n                    tweens && a.push(child);\n                } else {\n                    timelines && a.push(child);\n                    nested && a.push.apply(a, child.getChildren(true, tweens, timelines));\n                }\n            }\n            child = child._next;\n        }\n        return a;\n    };\n    _proto2.getById = function getById(id) {\n        var animations = this.getChildren(1, 1, 1), i = animations.length;\n        while(i--){\n            if (animations[i].vars.id === id) {\n                return animations[i];\n            }\n        }\n    };\n    _proto2.remove = function remove(child) {\n        if (_isString(child)) {\n            return this.removeLabel(child);\n        }\n        if (_isFunction(child)) {\n            return this.killTweensOf(child);\n        }\n        _removeLinkedListItem(this, child);\n        if (child === this._recent) {\n            this._recent = this._last;\n        }\n        return _uncache(this);\n    };\n    _proto2.totalTime = function totalTime(_totalTime2, suppressEvents) {\n        if (!arguments.length) {\n            return this._tTime;\n        }\n        this._forcing = 1;\n        if (!this._dp && this._ts) {\n            //special case for the global timeline (or any other that has no parent or detached parent).\n            this._start = _roundPrecise(_ticker.time - (this._ts > 0 ? _totalTime2 / this._ts : (this.totalDuration() - _totalTime2) / -this._ts));\n        }\n        _Animation.prototype.totalTime.call(this, _totalTime2, suppressEvents);\n        this._forcing = 0;\n        return this;\n    };\n    _proto2.addLabel = function addLabel(label, position) {\n        this.labels[label] = _parsePosition(this, position);\n        return this;\n    };\n    _proto2.removeLabel = function removeLabel(label) {\n        delete this.labels[label];\n        return this;\n    };\n    _proto2.addPause = function addPause(position, callback, params) {\n        var t = Tween.delayedCall(0, callback || _emptyFunc, params);\n        t.data = \"isPause\";\n        this._hasPause = 1;\n        return _addToTimeline(this, t, _parsePosition(this, position));\n    };\n    _proto2.removePause = function removePause(position) {\n        var child = this._first;\n        position = _parsePosition(this, position);\n        while(child){\n            if (child._start === position && child.data === \"isPause\") {\n                _removeFromParent(child);\n            }\n            child = child._next;\n        }\n    };\n    _proto2.killTweensOf = function killTweensOf(targets, props, onlyActive) {\n        var tweens = this.getTweensOf(targets, onlyActive), i = tweens.length;\n        while(i--){\n            _overwritingTween !== tweens[i] && tweens[i].kill(targets, props);\n        }\n        return this;\n    };\n    _proto2.getTweensOf = function getTweensOf(targets, onlyActive) {\n        var a = [], parsedTargets = toArray(targets), child = this._first, isGlobalTime = _isNumber(onlyActive), // a number is interpreted as a global time. If the animation spans\n        children;\n        while(child){\n            if (child instanceof Tween) {\n                if (_arrayContainsAny(child._targets, parsedTargets) && (isGlobalTime ? (!_overwritingTween || child._initted && child._ts) && child.globalTime(0) <= onlyActive && child.globalTime(child.totalDuration()) > onlyActive : !onlyActive || child.isActive())) {\n                    // note: if this is for overwriting, it should only be for tweens that aren't paused and are initted.\n                    a.push(child);\n                }\n            } else if ((children = child.getTweensOf(parsedTargets, onlyActive)).length) {\n                a.push.apply(a, children);\n            }\n            child = child._next;\n        }\n        return a;\n    } // potential future feature - targets() on timelines\n    ;\n    _proto2.tweenTo = function tweenTo(position, vars) {\n        vars = vars || {};\n        var tl = this, endTime = _parsePosition(tl, position), _vars = vars, startAt = _vars.startAt, _onStart = _vars.onStart, onStartParams = _vars.onStartParams, immediateRender = _vars.immediateRender, initted, tween = Tween.to(tl, _setDefaults({\n            ease: vars.ease || \"none\",\n            lazy: false,\n            immediateRender: false,\n            time: endTime,\n            overwrite: \"auto\",\n            duration: vars.duration || Math.abs((endTime - (startAt && \"time\" in startAt ? startAt.time : tl._time)) / tl.timeScale()) || _tinyNum,\n            onStart: function onStart() {\n                tl.pause();\n                if (!initted) {\n                    var duration = vars.duration || Math.abs((endTime - (startAt && \"time\" in startAt ? startAt.time : tl._time)) / tl.timeScale());\n                    tween._dur !== duration && _setDuration(tween, duration, 0, 1).render(tween._time, true, true);\n                    initted = 1;\n                }\n                _onStart && _onStart.apply(tween, onStartParams || []); //in case the user had an onStart in the vars - we don't want to overwrite it.\n            }\n        }, vars));\n        return immediateRender ? tween.render(0) : tween;\n    };\n    _proto2.tweenFromTo = function tweenFromTo(fromPosition, toPosition, vars) {\n        return this.tweenTo(toPosition, _setDefaults({\n            startAt: {\n                time: _parsePosition(this, fromPosition)\n            }\n        }, vars));\n    };\n    _proto2.recent = function recent() {\n        return this._recent;\n    };\n    _proto2.nextLabel = function nextLabel(afterTime) {\n        if (afterTime === void 0) {\n            afterTime = this._time;\n        }\n        return _getLabelInDirection(this, _parsePosition(this, afterTime));\n    };\n    _proto2.previousLabel = function previousLabel(beforeTime) {\n        if (beforeTime === void 0) {\n            beforeTime = this._time;\n        }\n        return _getLabelInDirection(this, _parsePosition(this, beforeTime), 1);\n    };\n    _proto2.currentLabel = function currentLabel(value) {\n        return arguments.length ? this.seek(value, true) : this.previousLabel(this._time + _tinyNum);\n    };\n    _proto2.shiftChildren = function shiftChildren(amount, adjustLabels, ignoreBeforeTime) {\n        if (ignoreBeforeTime === void 0) {\n            ignoreBeforeTime = 0;\n        }\n        var child = this._first, labels = this.labels, p;\n        while(child){\n            if (child._start >= ignoreBeforeTime) {\n                child._start += amount;\n                child._end += amount;\n            }\n            child = child._next;\n        }\n        if (adjustLabels) {\n            for(p in labels){\n                if (labels[p] >= ignoreBeforeTime) {\n                    labels[p] += amount;\n                }\n            }\n        }\n        return _uncache(this);\n    };\n    _proto2.invalidate = function invalidate(soft) {\n        var child = this._first;\n        this._lock = 0;\n        while(child){\n            child.invalidate(soft);\n            child = child._next;\n        }\n        return _Animation.prototype.invalidate.call(this, soft);\n    };\n    _proto2.clear = function clear(includeLabels) {\n        if (includeLabels === void 0) {\n            includeLabels = true;\n        }\n        var child = this._first, next;\n        while(child){\n            next = child._next;\n            this.remove(child);\n            child = next;\n        }\n        this._dp && (this._time = this._tTime = this._pTime = 0);\n        includeLabels && (this.labels = {});\n        return _uncache(this);\n    };\n    _proto2.totalDuration = function totalDuration(value) {\n        var max = 0, self = this, child = self._last, prevStart = _bigNum, prev, start, parent;\n        if (arguments.length) {\n            return self.timeScale((self._repeat < 0 ? self.duration() : self.totalDuration()) / (self.reversed() ? -value : value));\n        }\n        if (self._dirty) {\n            parent = self.parent;\n            while(child){\n                prev = child._prev; //record it here in case the tween changes position in the sequence...\n                child._dirty && child.totalDuration(); //could change the tween._startTime, so make sure the animation's cache is clean before analyzing it.\n                start = child._start;\n                if (start > prevStart && self._sort && child._ts && !self._lock) {\n                    //in case one of the tweens shifted out of order, it needs to be re-inserted into the correct position in the sequence\n                    self._lock = 1; //prevent endless recursive calls - there are methods that get triggered that check duration/totalDuration when we add().\n                    _addToTimeline(self, child, start - child._delay, 1)._lock = 0;\n                } else {\n                    prevStart = start;\n                }\n                if (start < 0 && child._ts) {\n                    //children aren't allowed to have negative startTimes unless smoothChildTiming is true, so adjust here if one is found.\n                    max -= start;\n                    if (!parent && !self._dp || parent && parent.smoothChildTiming) {\n                        self._start += start / self._ts;\n                        self._time -= start;\n                        self._tTime -= start;\n                    }\n                    self.shiftChildren(-start, false, -Infinity);\n                    prevStart = 0;\n                }\n                child._end > max && child._ts && (max = child._end);\n                child = prev;\n            }\n            _setDuration(self, self === _globalTimeline && self._time > max ? self._time : max, 1, 1);\n            self._dirty = 0;\n        }\n        return self._tDur;\n    };\n    Timeline.updateRoot = function updateRoot(time) {\n        if (_globalTimeline._ts) {\n            _lazySafeRender(_globalTimeline, _parentToChildTotalTime(time, _globalTimeline));\n            _lastRenderedFrame = _ticker.frame;\n        }\n        if (_ticker.frame >= _nextGCFrame) {\n            _nextGCFrame += _config.autoSleep || 120;\n            var child = _globalTimeline._first;\n            if (!child || !child._ts) {\n                if (_config.autoSleep && _ticker._listeners.length < 2) {\n                    while(child && !child._ts){\n                        child = child._next;\n                    }\n                    child || _ticker.sleep();\n                }\n            }\n        }\n    };\n    return Timeline;\n}(Animation);\n_setDefaults(Timeline.prototype, {\n    _lock: 0,\n    _hasPause: 0,\n    _forcing: 0\n});\nvar _addComplexStringPropTween = function _addComplexStringPropTween(target, prop, start, end, setter, stringFilter, funcParam) {\n    //note: we call _addComplexStringPropTween.call(tweenInstance...) to ensure that it's scoped properly. We may call it from within a plugin too, thus \"this\" would refer to the plugin.\n    var pt = new PropTween(this._pt, target, prop, 0, 1, _renderComplexString, null, setter), index = 0, matchIndex = 0, result, startNums, color, endNum, chunk, startNum, hasRandom, a;\n    pt.b = start;\n    pt.e = end;\n    start += \"\"; //ensure values are strings\n    end += \"\";\n    if (hasRandom = ~end.indexOf(\"random(\")) {\n        end = _replaceRandom(end);\n    }\n    if (stringFilter) {\n        a = [\n            start,\n            end\n        ];\n        stringFilter(a, target, prop); //pass an array with the starting and ending values and let the filter do whatever it needs to the values.\n        start = a[0];\n        end = a[1];\n    }\n    startNums = start.match(_complexStringNumExp) || [];\n    while(result = _complexStringNumExp.exec(end)){\n        endNum = result[0];\n        chunk = end.substring(index, result.index);\n        if (color) {\n            color = (color + 1) % 5;\n        } else if (chunk.substr(-5) === \"rgba(\") {\n            color = 1;\n        }\n        if (endNum !== startNums[matchIndex++]) {\n            startNum = parseFloat(startNums[matchIndex - 1]) || 0; //these nested PropTweens are handled in a special way - we'll never actually call a render or setter method on them. We'll just loop through them in the parent complex string PropTween's render method.\n            pt._pt = {\n                _next: pt._pt,\n                p: chunk || matchIndex === 1 ? chunk : \",\",\n                //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.\n                s: startNum,\n                c: endNum.charAt(1) === \"=\" ? _parseRelative(startNum, endNum) - startNum : parseFloat(endNum) - startNum,\n                m: color && color < 4 ? Math.round : 0\n            };\n            index = _complexStringNumExp.lastIndex;\n        }\n    }\n    pt.c = index < end.length ? end.substring(index, end.length) : \"\"; //we use the \"c\" of the PropTween to store the final part of the string (after the last number)\n    pt.fp = funcParam;\n    if (_relExp.test(end) || hasRandom) {\n        pt.e = 0; //if the end string contains relative values or dynamic random(...) values, delete the end it so that on the final render we don't actually set it to the string with += or -= characters (forces it to use the calculated value).\n    }\n    this._pt = pt; //start the linked list with this new PropTween. Remember, we call _addComplexStringPropTween.call(tweenInstance...) to ensure that it's scoped properly. We may call it from within a plugin too, thus \"this\" would refer to the plugin.\n    return pt;\n}, _addPropTween = function _addPropTween(target, prop, start, end, index, targets, modifier, stringFilter, funcParam, optional) {\n    _isFunction(end) && (end = end(index || 0, target, targets));\n    var currentValue = target[prop], parsedStart = start !== \"get\" ? start : !_isFunction(currentValue) ? currentValue : funcParam ? target[prop.indexOf(\"set\") || !_isFunction(target[\"get\" + prop.substr(3)]) ? prop : \"get\" + prop.substr(3)](funcParam) : target[prop](), setter = !_isFunction(currentValue) ? _setterPlain : funcParam ? _setterFuncWithParam : _setterFunc, pt;\n    if (_isString(end)) {\n        if (~end.indexOf(\"random(\")) {\n            end = _replaceRandom(end);\n        }\n        if (end.charAt(1) === \"=\") {\n            pt = _parseRelative(parsedStart, end) + (getUnit(parsedStart) || 0);\n            if (pt || pt === 0) {\n                // to avoid isNaN, like if someone passes in a value like \"!= whatever\"\n                end = pt;\n            }\n        }\n    }\n    if (!optional || parsedStart !== end || _forceAllPropTweens) {\n        if (!isNaN(parsedStart * end) && end !== \"\") {\n            // fun fact: any number multiplied by \"\" is evaluated as the number 0!\n            pt = new PropTween(this._pt, target, prop, +parsedStart || 0, end - (parsedStart || 0), typeof currentValue === \"boolean\" ? _renderBoolean : _renderPlain, 0, setter);\n            funcParam && (pt.fp = funcParam);\n            modifier && pt.modifier(modifier, this, target);\n            return this._pt = pt;\n        }\n        !currentValue && !(prop in target) && _missingPlugin(prop, end);\n        return _addComplexStringPropTween.call(this, target, prop, parsedStart, end, setter, stringFilter || _config.stringFilter, funcParam);\n    }\n}, //creates a copy of the vars object and processes any function-based values (putting the resulting values directly into the copy) as well as strings with \"random()\" in them. It does NOT process relative values.\n_processVars = function _processVars(vars, index, target, targets, tween) {\n    _isFunction(vars) && (vars = _parseFuncOrString(vars, tween, index, target, targets));\n    if (!_isObject(vars) || vars.style && vars.nodeType || _isArray(vars) || _isTypedArray(vars)) {\n        return _isString(vars) ? _parseFuncOrString(vars, tween, index, target, targets) : vars;\n    }\n    var copy = {}, p;\n    for(p in vars){\n        copy[p] = _parseFuncOrString(vars[p], tween, index, target, targets);\n    }\n    return copy;\n}, _checkPlugin = function _checkPlugin(property, vars, tween, index, target, targets) {\n    var plugin, pt, ptLookup, i;\n    if (_plugins[property] && (plugin = new _plugins[property]()).init(target, plugin.rawVars ? vars[property] : _processVars(vars[property], index, target, targets, tween), tween, index, targets) !== false) {\n        tween._pt = pt = new PropTween(tween._pt, target, property, 0, 1, plugin.render, plugin, 0, plugin.priority);\n        if (tween !== _quickTween) {\n            ptLookup = tween._ptLookup[tween._targets.indexOf(target)]; //note: we can't use tween._ptLookup[index] because for staggered tweens, the index from the fullTargets array won't match what it is in each individual tween that spawns from the stagger.\n            i = plugin._props.length;\n            while(i--){\n                ptLookup[plugin._props[i]] = pt;\n            }\n        }\n    }\n    return plugin;\n}, _overwritingTween, //store a reference temporarily so we can avoid overwriting itself.\n_forceAllPropTweens, _initTween = function _initTween(tween, time, tTime) {\n    var vars = tween.vars, ease = vars.ease, startAt = vars.startAt, immediateRender = vars.immediateRender, lazy = vars.lazy, onUpdate = vars.onUpdate, runBackwards = vars.runBackwards, yoyoEase = vars.yoyoEase, keyframes = vars.keyframes, autoRevert = vars.autoRevert, dur = tween._dur, prevStartAt = tween._startAt, targets = tween._targets, parent = tween.parent, fullTargets = parent && parent.data === \"nested\" ? parent.vars.targets : targets, autoOverwrite = tween._overwrite === \"auto\" && !_suppressOverwrites, tl = tween.timeline, cleanVars, i, p, pt, target, hasPriority, gsData, harness, plugin, ptLookup, index, harnessVars, overwritten;\n    tl && (!keyframes || !ease) && (ease = \"none\");\n    tween._ease = _parseEase(ease, _defaults.ease);\n    tween._yEase = yoyoEase ? _invertEase(_parseEase(yoyoEase === true ? ease : yoyoEase, _defaults.ease)) : 0;\n    if (yoyoEase && tween._yoyo && !tween._repeat) {\n        //there must have been a parent timeline with yoyo:true that is currently in its yoyo phase, so flip the eases.\n        yoyoEase = tween._yEase;\n        tween._yEase = tween._ease;\n        tween._ease = yoyoEase;\n    }\n    tween._from = !tl && !!vars.runBackwards; //nested timelines should never run backwards - the backwards-ness is in the child tweens.\n    if (!tl || keyframes && !vars.stagger) {\n        //if there's an internal timeline, skip all the parsing because we passed that task down the chain.\n        harness = targets[0] ? _getCache(targets[0]).harness : 0;\n        harnessVars = harness && vars[harness.prop]; //someone may need to specify CSS-specific values AND non-CSS values, like if the element has an \"x\" property plus it's a standard DOM element. We allow people to distinguish by wrapping plugin-specific stuff in a css:{} object for example.\n        cleanVars = _copyExcluding(vars, _reservedProps);\n        if (prevStartAt) {\n            prevStartAt._zTime < 0 && prevStartAt.progress(1); // in case it's a lazy startAt that hasn't rendered yet.\n            time < 0 && runBackwards && immediateRender && !autoRevert ? prevStartAt.render(-1, true) : prevStartAt.revert(runBackwards && dur ? _revertConfigNoKill : _startAtRevertConfig); // if it's a \"startAt\" (not \"from()\" or runBackwards: true), we only need to do a shallow revert (keep transforms cached in CSSPlugin)\n            // don't just _removeFromParent(prevStartAt.render(-1, true)) because that'll leave inline styles. We're creating a new _startAt for \"startAt\" tweens that re-capture things to ensure that if the pre-tween values changed since the tween was created, they're recorded.\n            prevStartAt._lazy = 0;\n        }\n        if (startAt) {\n            _removeFromParent(tween._startAt = Tween.set(targets, _setDefaults({\n                data: \"isStart\",\n                overwrite: false,\n                parent: parent,\n                immediateRender: true,\n                lazy: !prevStartAt && _isNotFalse(lazy),\n                startAt: null,\n                delay: 0,\n                onUpdate: onUpdate && function() {\n                    return _callback(tween, \"onUpdate\");\n                },\n                stagger: 0\n            }, startAt))); //copy the properties/values into a new object to avoid collisions, like var to = {x:0}, from = {x:500}; timeline.fromTo(e, from, to).fromTo(e, to, from);\n            tween._startAt._dp = 0; // don't allow it to get put back into root timeline! Like when revert() is called and totalTime() gets set.\n            tween._startAt._sat = tween; // used in globalTime(). _sat stands for _startAtTween\n            time < 0 && (_reverting || !immediateRender && !autoRevert) && tween._startAt.revert(_revertConfigNoKill); // rare edge case, like if a render is forced in the negative direction of a non-initted tween.\n            if (immediateRender) {\n                if (dur && time <= 0 && tTime <= 0) {\n                    // check tTime here because in the case of a yoyo tween whose playhead gets pushed to the end like tween.progress(1), we should allow it through so that the onComplete gets fired properly.\n                    time && (tween._zTime = time);\n                    return; //we skip initialization here so that overwriting doesn't occur until the tween actually begins. Otherwise, if you create several immediateRender:true tweens of the same target/properties to drop into a Timeline, the last one created would overwrite the first ones because they didn't get placed into the timeline yet before the first render occurs and kicks in overwriting.\n                }\n            }\n        } else if (runBackwards && dur) {\n            //from() tweens must be handled uniquely: their beginning values must be rendered but we don't want overwriting to occur yet (when time is still 0). Wait until the tween actually begins before doing all the routines like overwriting. At that time, we should render at the END of the tween to ensure that things initialize correctly (remember, from() tweens go backwards)\n            if (!prevStartAt) {\n                time && (immediateRender = false); //in rare cases (like if a from() tween runs and then is invalidate()-ed), immediateRender could be true but the initial forced-render gets skipped, so there's no need to force the render in this context when the _time is greater than 0\n                p = _setDefaults({\n                    overwrite: false,\n                    data: \"isFromStart\",\n                    //we tag the tween with as \"isFromStart\" so that if [inside a plugin] we need to only do something at the very END of a tween, we have a way of identifying this tween as merely the one that's setting the beginning values for a \"from()\" tween. For example, clearProps in CSSPlugin should only get applied at the very END of a tween and without this tag, from(...{height:100, clearProps:\"height\", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in.\n                    lazy: immediateRender && !prevStartAt && _isNotFalse(lazy),\n                    immediateRender: immediateRender,\n                    //zero-duration tweens render immediately by default, but if we're not specifically instructed to render this tween immediately, we should skip this and merely _init() to record the starting values (rendering them immediately would push them to completion which is wasteful in that case - we'd have to render(-1) immediately after)\n                    stagger: 0,\n                    parent: parent //ensures that nested tweens that had a stagger are handled properly, like gsap.from(\".class\", {y: gsap.utils.wrap([-100,100]), stagger: 0.5})\n                }, cleanVars);\n                harnessVars && (p[harness.prop] = harnessVars); // in case someone does something like .from(..., {css:{}})\n                _removeFromParent(tween._startAt = Tween.set(targets, p));\n                tween._startAt._dp = 0; // don't allow it to get put back into root timeline!\n                tween._startAt._sat = tween; // used in globalTime()\n                time < 0 && (_reverting ? tween._startAt.revert(_revertConfigNoKill) : tween._startAt.render(-1, true));\n                tween._zTime = time;\n                if (!immediateRender) {\n                    _initTween(tween._startAt, _tinyNum, _tinyNum); //ensures that the initial values are recorded\n                } else if (!time) {\n                    return;\n                }\n            }\n        }\n        tween._pt = tween._ptCache = 0;\n        lazy = dur && _isNotFalse(lazy) || lazy && !dur;\n        for(i = 0; i < targets.length; i++){\n            target = targets[i];\n            gsData = target._gsap || _harness(targets)[i]._gsap;\n            tween._ptLookup[i] = ptLookup = {};\n            _lazyLookup[gsData.id] && _lazyTweens.length && _lazyRender(); //if other tweens of the same target have recently initted but haven't rendered yet, we've got to force the render so that the starting values are correct (imagine populating a timeline with a bunch of sequential tweens and then jumping to the end)\n            index = fullTargets === targets ? i : fullTargets.indexOf(target);\n            if (harness && (plugin = new harness()).init(target, harnessVars || cleanVars, tween, index, fullTargets) !== false) {\n                tween._pt = pt = new PropTween(tween._pt, target, plugin.name, 0, 1, plugin.render, plugin, 0, plugin.priority);\n                plugin._props.forEach(function(name) {\n                    ptLookup[name] = pt;\n                });\n                plugin.priority && (hasPriority = 1);\n            }\n            if (!harness || harnessVars) {\n                for(p in cleanVars){\n                    if (_plugins[p] && (plugin = _checkPlugin(p, cleanVars, tween, index, target, fullTargets))) {\n                        plugin.priority && (hasPriority = 1);\n                    } else {\n                        ptLookup[p] = pt = _addPropTween.call(tween, target, p, \"get\", cleanVars[p], index, fullTargets, 0, vars.stringFilter);\n                    }\n                }\n            }\n            tween._op && tween._op[i] && tween.kill(target, tween._op[i]);\n            if (autoOverwrite && tween._pt) {\n                _overwritingTween = tween;\n                _globalTimeline.killTweensOf(target, ptLookup, tween.globalTime(time)); // make sure the overwriting doesn't overwrite THIS tween!!!\n                overwritten = !tween.parent;\n                _overwritingTween = 0;\n            }\n            tween._pt && lazy && (_lazyLookup[gsData.id] = 1);\n        }\n        hasPriority && _sortPropTweensByPriority(tween);\n        tween._onInit && tween._onInit(tween); //plugins like RoundProps must wait until ALL of the PropTweens are instantiated. In the plugin's init() function, it sets the _onInit on the tween instance. May not be pretty/intuitive, but it's fast and keeps file size down.\n    }\n    tween._onUpdate = onUpdate;\n    tween._initted = (!tween._op || tween._pt) && !overwritten; // if overwrittenProps resulted in the entire tween being killed, do NOT flag it as initted or else it may render for one tick.\n    keyframes && time <= 0 && tl.render(_bigNum, true, true); // if there's a 0% keyframe, it'll render in the \"before\" state for any staggered/delayed animations thus when the following tween initializes, it'll use the \"before\" state instead of the \"after\" state as the initial values.\n}, _updatePropTweens = function _updatePropTweens(tween, property, value, start, startIsRelative, ratio, time, skipRecursion) {\n    var ptCache = (tween._pt && tween._ptCache || (tween._ptCache = {}))[property], pt, rootPT, lookup, i;\n    if (!ptCache) {\n        ptCache = tween._ptCache[property] = [];\n        lookup = tween._ptLookup;\n        i = tween._targets.length;\n        while(i--){\n            pt = lookup[i][property];\n            if (pt && pt.d && pt.d._pt) {\n                // it's a plugin, so find the nested PropTween\n                pt = pt.d._pt;\n                while(pt && pt.p !== property && pt.fp !== property){\n                    // \"fp\" is functionParam for things like setting CSS variables which require .setProperty(\"--var-name\", value)\n                    pt = pt._next;\n                }\n            }\n            if (!pt) {\n                // there is no PropTween associated with that property, so we must FORCE one to be created and ditch out of this\n                // if the tween has other properties that already rendered at new positions, we'd normally have to rewind to put them back like tween.render(0, true) before forcing an _initTween(), but that can create another edge case like tweening a timeline's progress would trigger onUpdates to fire which could move other things around. It's better to just inform users that .resetTo() should ONLY be used for tweens that already have that property. For example, you can't gsap.to(...{ y: 0 }) and then tween.restTo(\"x\", 200) for example.\n                _forceAllPropTweens = 1; // otherwise, when we _addPropTween() and it finds no change between the start and end values, it skips creating a PropTween (for efficiency...why tween when there's no difference?) but in this case we NEED that PropTween created so we can edit it.\n                tween.vars[property] = \"+=0\";\n                _initTween(tween, time);\n                _forceAllPropTweens = 0;\n                return skipRecursion ? _warn(property + \" not eligible for reset\") : 1; // if someone tries to do a quickTo() on a special property like borderRadius which must get split into 4 different properties, that's not eligible for .resetTo().\n            }\n            ptCache.push(pt);\n        }\n    }\n    i = ptCache.length;\n    while(i--){\n        rootPT = ptCache[i];\n        pt = rootPT._pt || rootPT; // complex values may have nested PropTweens. We only accommodate the FIRST value.\n        pt.s = (start || start === 0) && !startIsRelative ? start : pt.s + (start || 0) + ratio * pt.c;\n        pt.c = value - pt.s;\n        rootPT.e && (rootPT.e = _round(value) + getUnit(rootPT.e)); // mainly for CSSPlugin (end value)\n        rootPT.b && (rootPT.b = pt.s + getUnit(rootPT.b)); // (beginning value)\n    }\n}, _addAliasesToVars = function _addAliasesToVars(targets, vars) {\n    var harness = targets[0] ? _getCache(targets[0]).harness : 0, propertyAliases = harness && harness.aliases, copy, p, i, aliases;\n    if (!propertyAliases) {\n        return vars;\n    }\n    copy = _merge({}, vars);\n    for(p in propertyAliases){\n        if (p in copy) {\n            aliases = propertyAliases[p].split(\",\");\n            i = aliases.length;\n            while(i--){\n                copy[aliases[i]] = copy[p];\n            }\n        }\n    }\n    return copy;\n}, // parses multiple formats, like {\"0%\": {x: 100}, {\"50%\": {x: -20}} and { x: {\"0%\": 100, \"50%\": -20} }, and an \"ease\" can be set on any object. We populate an \"allProps\" object with an Array for each property, like {x: [{}, {}], y:[{}, {}]} with data for each property tween. The objects have a \"t\" (time), \"v\", (value), and \"e\" (ease) property. This allows us to piece together a timeline later.\n_parseKeyframe = function _parseKeyframe(prop, obj, allProps, easeEach) {\n    var ease = obj.ease || easeEach || \"power1.inOut\", p, a;\n    if (_isArray(obj)) {\n        a = allProps[prop] || (allProps[prop] = []); // t = time (out of 100), v = value, e = ease\n        obj.forEach(function(value, i) {\n            return a.push({\n                t: i / (obj.length - 1) * 100,\n                v: value,\n                e: ease\n            });\n        });\n    } else {\n        for(p in obj){\n            a = allProps[p] || (allProps[p] = []);\n            p === \"ease\" || a.push({\n                t: parseFloat(prop),\n                v: obj[p],\n                e: ease\n            });\n        }\n    }\n}, _parseFuncOrString = function _parseFuncOrString(value, tween, i, target, targets) {\n    return _isFunction(value) ? value.call(tween, i, target, targets) : _isString(value) && ~value.indexOf(\"random(\") ? _replaceRandom(value) : value;\n}, _staggerTweenProps = _callbackNames + \"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert\", _staggerPropsToSkip = {};\n_forEachName(_staggerTweenProps + \",id,stagger,delay,duration,paused,scrollTrigger\", function(name) {\n    return _staggerPropsToSkip[name] = 1;\n});\n/*\n * --------------------------------------------------------------------------------------\n * TWEEN\n * --------------------------------------------------------------------------------------\n */ var Tween = /*#__PURE__*/ function(_Animation2) {\n    _inheritsLoose(Tween, _Animation2);\n    function Tween(targets, vars, position, skipInherit) {\n        var _this3;\n        if (typeof vars === \"number\") {\n            position.duration = vars;\n            vars = position;\n            position = null;\n        }\n        _this3 = _Animation2.call(this, skipInherit ? vars : _inheritDefaults(vars)) || this;\n        var _this3$vars = _this3.vars, duration = _this3$vars.duration, delay = _this3$vars.delay, immediateRender = _this3$vars.immediateRender, stagger = _this3$vars.stagger, overwrite = _this3$vars.overwrite, keyframes = _this3$vars.keyframes, defaults = _this3$vars.defaults, scrollTrigger = _this3$vars.scrollTrigger, yoyoEase = _this3$vars.yoyoEase, parent = vars.parent || _globalTimeline, parsedTargets = (_isArray(targets) || _isTypedArray(targets) ? _isNumber(targets[0]) : \"length\" in vars) ? [\n            targets\n        ] : toArray(targets), tl, i, copy, l, p, curTarget, staggerFunc, staggerVarsToMerge;\n        _this3._targets = parsedTargets.length ? _harness(parsedTargets) : _warn(\"GSAP target \" + targets + \" not found. https://gsap.com\", !_config.nullTargetWarn) || [];\n        _this3._ptLookup = []; //PropTween lookup. An array containing an object for each target, having keys for each tweening property\n        _this3._overwrite = overwrite;\n        if (keyframes || stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {\n            vars = _this3.vars;\n            tl = _this3.timeline = new Timeline({\n                data: \"nested\",\n                defaults: defaults || {},\n                targets: parent && parent.data === \"nested\" ? parent.vars.targets : parsedTargets\n            }); // we need to store the targets because for staggers and keyframes, we end up creating an individual tween for each but function-based values need to know the index and the whole Array of targets.\n            tl.kill();\n            tl.parent = tl._dp = _assertThisInitialized(_this3);\n            tl._start = 0;\n            if (stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {\n                l = parsedTargets.length;\n                staggerFunc = stagger && distribute(stagger);\n                if (_isObject(stagger)) {\n                    //users can pass in callbacks like onStart/onComplete in the stagger object. These should fire with each individual tween.\n                    for(p in stagger){\n                        if (~_staggerTweenProps.indexOf(p)) {\n                            staggerVarsToMerge || (staggerVarsToMerge = {});\n                            staggerVarsToMerge[p] = stagger[p];\n                        }\n                    }\n                }\n                for(i = 0; i < l; i++){\n                    copy = _copyExcluding(vars, _staggerPropsToSkip);\n                    copy.stagger = 0;\n                    yoyoEase && (copy.yoyoEase = yoyoEase);\n                    staggerVarsToMerge && _merge(copy, staggerVarsToMerge);\n                    curTarget = parsedTargets[i]; //don't just copy duration or delay because if they're a string or function, we'd end up in an infinite loop because _isFuncOrString() would evaluate as true in the child tweens, entering this loop, etc. So we parse the value straight from vars and default to 0.\n                    copy.duration = +_parseFuncOrString(duration, _assertThisInitialized(_this3), i, curTarget, parsedTargets);\n                    copy.delay = (+_parseFuncOrString(delay, _assertThisInitialized(_this3), i, curTarget, parsedTargets) || 0) - _this3._delay;\n                    if (!stagger && l === 1 && copy.delay) {\n                        // if someone does delay:\"random(1, 5)\", repeat:-1, for example, the delay shouldn't be inside the repeat.\n                        _this3._delay = delay = copy.delay;\n                        _this3._start += delay;\n                        copy.delay = 0;\n                    }\n                    tl.to(curTarget, copy, staggerFunc ? staggerFunc(i, curTarget, parsedTargets) : 0);\n                    tl._ease = _easeMap.none;\n                }\n                tl.duration() ? duration = delay = 0 : _this3.timeline = 0; // if the timeline's duration is 0, we don't need a timeline internally!\n            } else if (keyframes) {\n                _inheritDefaults(_setDefaults(tl.vars.defaults, {\n                    ease: \"none\"\n                }));\n                tl._ease = _parseEase(keyframes.ease || vars.ease || \"none\");\n                var time = 0, a, kf, v;\n                if (_isArray(keyframes)) {\n                    keyframes.forEach(function(frame) {\n                        return tl.to(parsedTargets, frame, \">\");\n                    });\n                    tl.duration(); // to ensure tl._dur is cached because we tap into it for performance purposes in the render() method.\n                } else {\n                    copy = {};\n                    for(p in keyframes){\n                        p === \"ease\" || p === \"easeEach\" || _parseKeyframe(p, keyframes[p], copy, keyframes.easeEach);\n                    }\n                    for(p in copy){\n                        a = copy[p].sort(function(a, b) {\n                            return a.t - b.t;\n                        });\n                        time = 0;\n                        for(i = 0; i < a.length; i++){\n                            kf = a[i];\n                            v = {\n                                ease: kf.e,\n                                duration: (kf.t - (i ? a[i - 1].t : 0)) / 100 * duration\n                            };\n                            v[p] = kf.v;\n                            tl.to(parsedTargets, v, time);\n                            time += v.duration;\n                        }\n                    }\n                    tl.duration() < duration && tl.to({}, {\n                        duration: duration - tl.duration()\n                    }); // in case keyframes didn't go to 100%\n                }\n            }\n            duration || _this3.duration(duration = tl.duration());\n        } else {\n            _this3.timeline = 0; //speed optimization, faster lookups (no going up the prototype chain)\n        }\n        if (overwrite === true && !_suppressOverwrites) {\n            _overwritingTween = _assertThisInitialized(_this3);\n            _globalTimeline.killTweensOf(parsedTargets);\n            _overwritingTween = 0;\n        }\n        _addToTimeline(parent, _assertThisInitialized(_this3), position);\n        vars.reversed && _this3.reverse();\n        vars.paused && _this3.paused(true);\n        if (immediateRender || !duration && !keyframes && _this3._start === _roundPrecise(parent._time) && _isNotFalse(immediateRender) && _hasNoPausedAncestors(_assertThisInitialized(_this3)) && parent.data !== \"nested\") {\n            _this3._tTime = -_tinyNum; //forces a render without having to set the render() \"force\" parameter to true because we want to allow lazying by default (using the \"force\" parameter always forces an immediate full render)\n            _this3.render(Math.max(0, -delay) || 0); //in case delay is negative\n        }\n        scrollTrigger && _scrollTrigger(_assertThisInitialized(_this3), scrollTrigger);\n        return _this3;\n    }\n    var _proto3 = Tween.prototype;\n    _proto3.render = function render(totalTime, suppressEvents, force) {\n        var prevTime = this._time, tDur = this._tDur, dur = this._dur, isNegative = totalTime < 0, tTime = totalTime > tDur - _tinyNum && !isNegative ? tDur : totalTime < _tinyNum ? 0 : totalTime, time, pt, iteration, cycleDuration, prevIteration, isYoyo, ratio, timeline, yoyoEase;\n        if (!dur) {\n            _renderZeroDurationTween(this, totalTime, suppressEvents, force);\n        } else if (tTime !== this._tTime || !totalTime || force || !this._initted && this._tTime || this._startAt && this._zTime < 0 !== isNegative) {\n            //this senses if we're crossing over the start time, in which case we must record _zTime and force the render, but we do it in this lengthy conditional way for performance reasons (usually we can skip the calculations): this._initted && (this._zTime < 0) !== (totalTime < 0)\n            time = tTime;\n            timeline = this.timeline;\n            if (this._repeat) {\n                //adjust the time for repeats and yoyos\n                cycleDuration = dur + this._rDelay;\n                if (this._repeat < -1 && isNegative) {\n                    return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);\n                }\n                time = _roundPrecise(tTime % cycleDuration); //round to avoid floating point errors. (4 % 0.8 should be 0 but some browsers report it as 0.79999999!)\n                if (tTime === tDur) {\n                    // the tDur === tTime is for edge cases where there's a lengthy decimal on the duration and it may reach the very end but the time is rendered as not-quite-there (remember, tDur is rounded to 4 decimals whereas dur isn't)\n                    iteration = this._repeat;\n                    time = dur;\n                } else {\n                    iteration = ~~(tTime / cycleDuration);\n                    if (iteration && iteration === _roundPrecise(tTime / cycleDuration)) {\n                        time = dur;\n                        iteration--;\n                    }\n                    time > dur && (time = dur);\n                }\n                isYoyo = this._yoyo && iteration & 1;\n                if (isYoyo) {\n                    yoyoEase = this._yEase;\n                    time = dur - time;\n                }\n                prevIteration = _animationCycle(this._tTime, cycleDuration);\n                if (time === prevTime && !force && this._initted && iteration === prevIteration) {\n                    //could be during the repeatDelay part. No need to render and fire callbacks.\n                    this._tTime = tTime;\n                    return this;\n                }\n                if (iteration !== prevIteration) {\n                    timeline && this._yEase && _propagateYoyoEase(timeline, isYoyo); //repeatRefresh functionality\n                    if (this.vars.repeatRefresh && !isYoyo && !this._lock && this._time !== cycleDuration && this._initted) {\n                        // this._time will === cycleDuration when we render at EXACTLY the end of an iteration. Without this condition, it'd often do the repeatRefresh render TWICE (again on the very next tick).\n                        this._lock = force = 1; //force, otherwise if lazy is true, the _attemptInitTween() will return and we'll jump out and get caught bouncing on each tick.\n                        this.render(_roundPrecise(cycleDuration * iteration), true).invalidate()._lock = 0;\n                    }\n                }\n            }\n            if (!this._initted) {\n                if (_attemptInitTween(this, isNegative ? totalTime : time, force, suppressEvents, tTime)) {\n                    this._tTime = 0; // in constructor if immediateRender is true, we set _tTime to -_tinyNum to have the playhead cross the starting point but we can't leave _tTime as a negative number.\n                    return this;\n                }\n                if (prevTime !== this._time && !(force && this.vars.repeatRefresh && iteration !== prevIteration)) {\n                    // rare edge case - during initialization, an onUpdate in the _startAt (.fromTo()) might force this tween to render at a different spot in which case we should ditch this render() call so that it doesn't revert the values. But we also don't want to dump if we're doing a repeatRefresh render!\n                    return this;\n                }\n                if (dur !== this._dur) {\n                    // while initting, a plugin like InertiaPlugin might alter the duration, so rerun from the start to ensure everything renders as it should.\n                    return this.render(totalTime, suppressEvents, force);\n                }\n            }\n            this._tTime = tTime;\n            this._time = time;\n            if (!this._act && this._ts) {\n                this._act = 1; //as long as it's not paused, force it to be active so that if the user renders independent of the parent timeline, it'll be forced to re-render on the next tick.\n                this._lazy = 0;\n            }\n            this.ratio = ratio = (yoyoEase || this._ease)(time / dur);\n            if (this._from) {\n                this.ratio = ratio = 1 - ratio;\n            }\n            if (time && !prevTime && !suppressEvents && !iteration) {\n                _callback(this, \"onStart\");\n                if (this._tTime !== tTime) {\n                    // in case the onStart triggered a render at a different spot, eject. Like if someone did animation.pause(0.5) or something inside the onStart.\n                    return this;\n                }\n            }\n            pt = this._pt;\n            while(pt){\n                pt.r(ratio, pt.d);\n                pt = pt._next;\n            }\n            timeline && timeline.render(totalTime < 0 ? totalTime : timeline._dur * timeline._ease(time / this._dur), suppressEvents, force) || this._startAt && (this._zTime = totalTime);\n            if (this._onUpdate && !suppressEvents) {\n                isNegative && _rewindStartAt(this, totalTime, suppressEvents, force); //note: for performance reasons, we tuck this conditional logic inside less traveled areas (most tweens don't have an onUpdate). We'd just have it at the end before the onComplete, but the values should be updated before any onUpdate is called, so we ALSO put it here and then if it's not called, we do so later near the onComplete.\n                _callback(this, \"onUpdate\");\n            }\n            this._repeat && iteration !== prevIteration && this.vars.onRepeat && !suppressEvents && this.parent && _callback(this, \"onRepeat\");\n            if ((tTime === this._tDur || !tTime) && this._tTime === tTime) {\n                isNegative && !this._onUpdate && _rewindStartAt(this, totalTime, true, true);\n                (totalTime || !dur) && (tTime === this._tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1); // don't remove if we're rendering at exactly a time of 0, as there could be autoRevert values that should get set on the next tick (if the playhead goes backward beyond the startTime, negative totalTime). Don't remove if the timeline is reversed and the playhead isn't at 0, otherwise tl.progress(1).reverse() won't work. Only remove if the playhead is at the end and timeScale is positive, or if the playhead is at 0 and the timeScale is negative.\n                if (!suppressEvents && !(isNegative && !prevTime) && (tTime || prevTime || isYoyo)) {\n                    // if prevTime and tTime are zero, we shouldn't fire the onReverseComplete. This could happen if you gsap.to(... {paused:true}).play();\n                    _callback(this, tTime === tDur ? \"onComplete\" : \"onReverseComplete\", true);\n                    this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();\n                }\n            }\n        }\n        return this;\n    };\n    _proto3.targets = function targets() {\n        return this._targets;\n    };\n    _proto3.invalidate = function invalidate(soft) {\n        // \"soft\" gives us a way to clear out everything EXCEPT the recorded pre-\"from\" portion of from() tweens. Otherwise, for example, if you tween.progress(1).render(0, true true).invalidate(), the \"from\" values would persist and then on the next render, the from() tweens would initialize and the current value would match the \"from\" values, thus animate from the same value to the same value (no animation). We tap into this in ScrollTrigger's refresh() where we must push a tween to completion and then back again but honor its init state in case the tween is dependent on another tween further up on the page.\n        (!soft || !this.vars.runBackwards) && (this._startAt = 0);\n        this._pt = this._op = this._onUpdate = this._lazy = this.ratio = 0;\n        this._ptLookup = [];\n        this.timeline && this.timeline.invalidate(soft);\n        return _Animation2.prototype.invalidate.call(this, soft);\n    };\n    _proto3.resetTo = function resetTo(property, value, start, startIsRelative, skipRecursion) {\n        _tickerActive || _ticker.wake();\n        this._ts || this.play();\n        var time = Math.min(this._dur, (this._dp._time - this._start) * this._ts), ratio;\n        this._initted || _initTween(this, time);\n        ratio = this._ease(time / this._dur); // don't just get tween.ratio because it may not have rendered yet.\n        // possible future addition to allow an object with multiple values to update, like tween.resetTo({x: 100, y: 200}); At this point, it doesn't seem worth the added kb given the fact that most users will likely opt for the convenient gsap.quickTo() way of interacting with this method.\n        // if (_isObject(property)) { // performance optimization\n        // \tfor (p in property) {\n        // \t\tif (_updatePropTweens(this, p, property[p], value ? value[p] : null, start, ratio, time)) {\n        // \t\t\treturn this.resetTo(property, value, start, startIsRelative); // if a PropTween wasn't found for the property, it'll get forced with a re-initialization so we need to jump out and start over again.\n        // \t\t}\n        // \t}\n        // } else {\n        if (_updatePropTweens(this, property, value, start, startIsRelative, ratio, time, skipRecursion)) {\n            return this.resetTo(property, value, start, startIsRelative, 1); // if a PropTween wasn't found for the property, it'll get forced with a re-initialization so we need to jump out and start over again.\n        } //}\n        _alignPlayhead(this, 0);\n        this.parent || _addLinkedListItem(this._dp, this, \"_first\", \"_last\", this._dp._sort ? \"_start\" : 0);\n        return this.render(0);\n    };\n    _proto3.kill = function kill(targets, vars) {\n        if (vars === void 0) {\n            vars = \"all\";\n        }\n        if (!targets && (!vars || vars === \"all\")) {\n            this._lazy = this._pt = 0;\n            return this.parent ? _interrupt(this) : this;\n        }\n        if (this.timeline) {\n            var tDur = this.timeline.totalDuration();\n            this.timeline.killTweensOf(targets, vars, _overwritingTween && _overwritingTween.vars.overwrite !== true)._first || _interrupt(this); // if nothing is left tweening, interrupt.\n            this.parent && tDur !== this.timeline.totalDuration() && _setDuration(this, this._dur * this.timeline._tDur / tDur, 0, 1); // if a nested tween is killed that changes the duration, it should affect this tween's duration. We must use the ratio, though, because sometimes the internal timeline is stretched like for keyframes where they don't all add up to whatever the parent tween's duration was set to.\n            return this;\n        }\n        var parsedTargets = this._targets, killingTargets = targets ? toArray(targets) : parsedTargets, propTweenLookup = this._ptLookup, firstPT = this._pt, overwrittenProps, curLookup, curOverwriteProps, props, p, pt, i;\n        if ((!vars || vars === \"all\") && _arraysMatch(parsedTargets, killingTargets)) {\n            vars === \"all\" && (this._pt = 0);\n            return _interrupt(this);\n        }\n        overwrittenProps = this._op = this._op || [];\n        if (vars !== \"all\") {\n            //so people can pass in a comma-delimited list of property names\n            if (_isString(vars)) {\n                p = {};\n                _forEachName(vars, function(name) {\n                    return p[name] = 1;\n                });\n                vars = p;\n            }\n            vars = _addAliasesToVars(parsedTargets, vars);\n        }\n        i = parsedTargets.length;\n        while(i--){\n            if (~killingTargets.indexOf(parsedTargets[i])) {\n                curLookup = propTweenLookup[i];\n                if (vars === \"all\") {\n                    overwrittenProps[i] = vars;\n                    props = curLookup;\n                    curOverwriteProps = {};\n                } else {\n                    curOverwriteProps = overwrittenProps[i] = overwrittenProps[i] || {};\n                    props = vars;\n                }\n                for(p in props){\n                    pt = curLookup && curLookup[p];\n                    if (pt) {\n                        if (!(\"kill\" in pt.d) || pt.d.kill(p) === true) {\n                            _removeLinkedListItem(this, pt, \"_pt\");\n                        }\n                        delete curLookup[p];\n                    }\n                    if (curOverwriteProps !== \"all\") {\n                        curOverwriteProps[p] = 1;\n                    }\n                }\n            }\n        }\n        this._initted && !this._pt && firstPT && _interrupt(this); //if all tweening properties are killed, kill the tween. Without this line, if there's a tween with multiple targets and then you killTweensOf() each target individually, the tween would technically still remain active and fire its onComplete even though there aren't any more properties tweening.\n        return this;\n    };\n    Tween.to = function to(targets, vars) {\n        return new Tween(targets, vars, arguments[2]);\n    };\n    Tween.from = function from(targets, vars) {\n        return _createTweenType(1, arguments);\n    };\n    Tween.delayedCall = function delayedCall(delay, callback, params, scope) {\n        return new Tween(callback, 0, {\n            immediateRender: false,\n            lazy: false,\n            overwrite: false,\n            delay: delay,\n            onComplete: callback,\n            onReverseComplete: callback,\n            onCompleteParams: params,\n            onReverseCompleteParams: params,\n            callbackScope: scope\n        }); // we must use onReverseComplete too for things like timeline.add(() => {...}) which should be triggered in BOTH directions (forward and reverse)\n    };\n    Tween.fromTo = function fromTo(targets, fromVars, toVars) {\n        return _createTweenType(2, arguments);\n    };\n    Tween.set = function set(targets, vars) {\n        vars.duration = 0;\n        vars.repeatDelay || (vars.repeat = 0);\n        return new Tween(targets, vars);\n    };\n    Tween.killTweensOf = function killTweensOf(targets, props, onlyActive) {\n        return _globalTimeline.killTweensOf(targets, props, onlyActive);\n    };\n    return Tween;\n}(Animation);\n_setDefaults(Tween.prototype, {\n    _targets: [],\n    _lazy: 0,\n    _startAt: 0,\n    _op: 0,\n    _onInit: 0\n}); //add the pertinent timeline methods to Tween instances so that users can chain conveniently and create a timeline automatically. (removed due to concerns that it'd ultimately add to more confusion especially for beginners)\n// _forEachName(\"to,from,fromTo,set,call,add,addLabel,addPause\", name => {\n// \tTween.prototype[name] = function() {\n// \t\tlet tl = new Timeline();\n// \t\treturn _addToTimeline(tl, this)[name].apply(tl, toArray(arguments));\n// \t}\n// });\n//for backward compatibility. Leverage the timeline calls.\n_forEachName(\"staggerTo,staggerFrom,staggerFromTo\", function(name) {\n    Tween[name] = function() {\n        var tl = new Timeline(), params = _slice.call(arguments, 0);\n        params.splice(name === \"staggerFromTo\" ? 5 : 4, 0, 0);\n        return tl[name].apply(tl, params);\n    };\n});\n/*\n * --------------------------------------------------------------------------------------\n * PROPTWEEN\n * --------------------------------------------------------------------------------------\n */ var _setterPlain = function _setterPlain(target, property, value) {\n    return target[property] = value;\n}, _setterFunc = function _setterFunc(target, property, value) {\n    return target[property](value);\n}, _setterFuncWithParam = function _setterFuncWithParam(target, property, value, data) {\n    return target[property](data.fp, value);\n}, _setterAttribute = function _setterAttribute(target, property, value) {\n    return target.setAttribute(property, value);\n}, _getSetter = function _getSetter(target, property) {\n    return _isFunction(target[property]) ? _setterFunc : _isUndefined(target[property]) && target.setAttribute ? _setterAttribute : _setterPlain;\n}, _renderPlain = function _renderPlain(ratio, data) {\n    return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 1000000) / 1000000, data);\n}, _renderBoolean = function _renderBoolean(ratio, data) {\n    return data.set(data.t, data.p, !!(data.s + data.c * ratio), data);\n}, _renderComplexString = function _renderComplexString(ratio, data) {\n    var pt = data._pt, s = \"\";\n    if (!ratio && data.b) {\n        //b = beginning string\n        s = data.b;\n    } else if (ratio === 1 && data.e) {\n        //e = ending string\n        s = data.e;\n    } else {\n        while(pt){\n            s = pt.p + (pt.m ? pt.m(pt.s + pt.c * ratio) : Math.round((pt.s + pt.c * ratio) * 10000) / 10000) + s; //we use the \"p\" property for the text inbetween (like a suffix). And in the context of a complex string, the modifier (m) is typically just Math.round(), like for RGB colors.\n            pt = pt._next;\n        }\n        s += data.c; //we use the \"c\" of the PropTween to store the final chunk of non-numeric text.\n    }\n    data.set(data.t, data.p, s, data);\n}, _renderPropTweens = function _renderPropTweens(ratio, data) {\n    var pt = data._pt;\n    while(pt){\n        pt.r(ratio, pt.d);\n        pt = pt._next;\n    }\n}, _addPluginModifier = function _addPluginModifier(modifier, tween, target, property) {\n    var pt = this._pt, next;\n    while(pt){\n        next = pt._next;\n        pt.p === property && pt.modifier(modifier, tween, target);\n        pt = next;\n    }\n}, _killPropTweensOf = function _killPropTweensOf(property) {\n    var pt = this._pt, hasNonDependentRemaining, next;\n    while(pt){\n        next = pt._next;\n        if (pt.p === property && !pt.op || pt.op === property) {\n            _removeLinkedListItem(this, pt, \"_pt\");\n        } else if (!pt.dep) {\n            hasNonDependentRemaining = 1;\n        }\n        pt = next;\n    }\n    return !hasNonDependentRemaining;\n}, _setterWithModifier = function _setterWithModifier(target, property, value, data) {\n    data.mSet(target, property, data.m.call(data.tween, value, data.mt), data);\n}, _sortPropTweensByPriority = function _sortPropTweensByPriority(parent) {\n    var pt = parent._pt, next, pt2, first, last; //sorts the PropTween linked list in order of priority because some plugins need to do their work after ALL of the PropTweens were created (like RoundPropsPlugin and ModifiersPlugin)\n    while(pt){\n        next = pt._next;\n        pt2 = first;\n        while(pt2 && pt2.pr > pt.pr){\n            pt2 = pt2._next;\n        }\n        if (pt._prev = pt2 ? pt2._prev : last) {\n            pt._prev._next = pt;\n        } else {\n            first = pt;\n        }\n        if (pt._next = pt2) {\n            pt2._prev = pt;\n        } else {\n            last = pt;\n        }\n        pt = next;\n    }\n    parent._pt = first;\n}; //PropTween key: t = target, p = prop, r = renderer, d = data, s = start, c = change, op = overwriteProperty (ONLY populated when it's different than p), pr = priority, _next/_prev for the linked list siblings, set = setter, m = modifier, mSet = modifierSetter (the original setter, before a modifier was added)\nvar PropTween = /*#__PURE__*/ function() {\n    function PropTween(next, target, prop, start, change, renderer, data, setter, priority) {\n        this.t = target;\n        this.s = start;\n        this.c = change;\n        this.p = prop;\n        this.r = renderer || _renderPlain;\n        this.d = data || this;\n        this.set = setter || _setterPlain;\n        this.pr = priority || 0;\n        this._next = next;\n        if (next) {\n            next._prev = this;\n        }\n    }\n    var _proto4 = PropTween.prototype;\n    _proto4.modifier = function modifier(func, tween, target) {\n        this.mSet = this.mSet || this.set; //in case it was already set (a PropTween can only have one modifier)\n        this.set = _setterWithModifier;\n        this.m = func;\n        this.mt = target; //modifier target\n        this.tween = tween;\n    };\n    return PropTween;\n}(); //Initialization tasks\n_forEachName(_callbackNames + \"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger\", function(name) {\n    return _reservedProps[name] = 1;\n});\n_globals.TweenMax = _globals.TweenLite = Tween;\n_globals.TimelineLite = _globals.TimelineMax = Timeline;\n_globalTimeline = new Timeline({\n    sortChildren: false,\n    defaults: _defaults,\n    autoRemoveChildren: true,\n    id: \"root\",\n    smoothChildTiming: true\n});\n_config.stringFilter = _colorStringFilter;\nvar _media = [], _listeners = {}, _emptyArray = [], _lastMediaTime = 0, _contextID = 0, _dispatch = function _dispatch(type) {\n    return (_listeners[type] || _emptyArray).map(function(f) {\n        return f();\n    });\n}, _onMediaChange = function _onMediaChange() {\n    var time = Date.now(), matches = [];\n    if (time - _lastMediaTime > 2) {\n        _dispatch(\"matchMediaInit\");\n        _media.forEach(function(c) {\n            var queries = c.queries, conditions = c.conditions, match, p, anyMatch, toggled;\n            for(p in queries){\n                match = _win.matchMedia(queries[p]).matches; // Firefox doesn't update the \"matches\" property of the MediaQueryList object correctly - it only does so as it calls its change handler - so we must re-create a media query here to ensure it's accurate.\n                match && (anyMatch = 1);\n                if (match !== conditions[p]) {\n                    conditions[p] = match;\n                    toggled = 1;\n                }\n            }\n            if (toggled) {\n                c.revert();\n                anyMatch && matches.push(c);\n            }\n        });\n        _dispatch(\"matchMediaRevert\");\n        matches.forEach(function(c) {\n            return c.onMatch(c, function(func) {\n                return c.add(null, func);\n            });\n        });\n        _lastMediaTime = time;\n        _dispatch(\"matchMedia\");\n    }\n};\nvar Context = /*#__PURE__*/ function() {\n    function Context(func, scope) {\n        this.selector = scope && selector(scope);\n        this.data = [];\n        this._r = []; // returned/cleanup functions\n        this.isReverted = false;\n        this.id = _contextID++; // to work around issues that frameworks like Vue cause by making things into Proxies which make it impossible to do something like _media.indexOf(this) because \"this\" would no longer refer to the Context instance itself - it'd refer to a Proxy! We needed a way to identify the context uniquely\n        func && this.add(func);\n    }\n    var _proto5 = Context.prototype;\n    _proto5.add = function add(name, func, scope) {\n        // possible future addition if we need the ability to add() an animation to a context and for whatever reason cannot create that animation inside of a context.add(() => {...}) function.\n        // if (name && _isFunction(name.revert)) {\n        // \tthis.data.push(name);\n        // \treturn (name._ctx = this);\n        // }\n        if (_isFunction(name)) {\n            scope = func;\n            func = name;\n            name = _isFunction;\n        }\n        var self = this, f = function f() {\n            var prev = _context, prevSelector = self.selector, result;\n            prev && prev !== self && prev.data.push(self);\n            scope && (self.selector = selector(scope));\n            _context = self;\n            result = func.apply(self, arguments);\n            _isFunction(result) && self._r.push(result);\n            _context = prev;\n            self.selector = prevSelector;\n            self.isReverted = false;\n            return result;\n        };\n        self.last = f;\n        return name === _isFunction ? f(self, function(func) {\n            return self.add(null, func);\n        }) : name ? self[name] = f : f;\n    };\n    _proto5.ignore = function ignore(func) {\n        var prev = _context;\n        _context = null;\n        func(this);\n        _context = prev;\n    };\n    _proto5.getTweens = function getTweens() {\n        var a = [];\n        this.data.forEach(function(e) {\n            return e instanceof Context ? a.push.apply(a, e.getTweens()) : e instanceof Tween && !(e.parent && e.parent.data === \"nested\") && a.push(e);\n        });\n        return a;\n    };\n    _proto5.clear = function clear() {\n        this._r.length = this.data.length = 0;\n    };\n    _proto5.kill = function kill(revert, matchMedia) {\n        var _this4 = this;\n        if (revert) {\n            (function() {\n                var tweens = _this4.getTweens(), i = _this4.data.length, t;\n                while(i--){\n                    // Flip plugin tweens are very different in that they should actually be pushed to their end. The plugin replaces the timeline's .revert() method to do exactly that. But we also need to remove any of those nested tweens inside the flip timeline so that they don't get individually reverted.\n                    t = _this4.data[i];\n                    if (t.data === \"isFlip\") {\n                        t.revert();\n                        t.getChildren(true, true, false).forEach(function(tween) {\n                            return tweens.splice(tweens.indexOf(tween), 1);\n                        });\n                    }\n                } // save as an object so that we can cache the globalTime for each tween to optimize performance during the sort\n                tweens.map(function(t) {\n                    return {\n                        g: t._dur || t._delay || t._sat && !t._sat.vars.immediateRender ? t.globalTime(0) : -Infinity,\n                        t: t\n                    };\n                }).sort(function(a, b) {\n                    return b.g - a.g || -Infinity;\n                }).forEach(function(o) {\n                    return o.t.revert(revert);\n                }); // note: all of the _startAt tweens should be reverted in reverse order that they were created, and they'll all have the same globalTime (-1) so the \" || -1\" in the sort keeps the order properly.\n                i = _this4.data.length;\n                while(i--){\n                    // make sure we loop backwards so that, for example, SplitTexts that were created later on the same element get reverted first\n                    t = _this4.data[i];\n                    if (t instanceof Timeline) {\n                        if (t.data !== \"nested\") {\n                            t.scrollTrigger && t.scrollTrigger.revert();\n                            t.kill(); // don't revert() the timeline because that's duplicating efforts since we already reverted all the tweens\n                        }\n                    } else {\n                        !(t instanceof Tween) && t.revert && t.revert(revert);\n                    }\n                }\n                _this4._r.forEach(function(f) {\n                    return f(revert, _this4);\n                });\n                _this4.isReverted = true;\n            })();\n        } else {\n            this.data.forEach(function(e) {\n                return e.kill && e.kill();\n            });\n        }\n        this.clear();\n        if (matchMedia) {\n            var i = _media.length;\n            while(i--){\n                // previously, we checked _media.indexOf(this), but some frameworks like Vue enforce Proxy objects that make it impossible to get the proper result that way, so we must use a unique ID number instead.\n                _media[i].id === this.id && _media.splice(i, 1);\n            }\n        }\n    };\n    _proto5.revert = function revert(config) {\n        this.kill(config || {});\n    };\n    return Context;\n}();\nvar MatchMedia = /*#__PURE__*/ function() {\n    function MatchMedia(scope) {\n        this.contexts = [];\n        this.scope = scope;\n        _context && _context.data.push(this);\n    }\n    var _proto6 = MatchMedia.prototype;\n    _proto6.add = function add(conditions, func, scope) {\n        _isObject(conditions) || (conditions = {\n            matches: conditions\n        });\n        var context = new Context(0, scope || this.scope), cond = context.conditions = {}, mq, p, active;\n        _context && !context.selector && (context.selector = _context.selector); // in case a context is created inside a context. Like a gsap.matchMedia() that's inside a scoped gsap.context()\n        this.contexts.push(context);\n        func = context.add(\"onMatch\", func);\n        context.queries = conditions;\n        for(p in conditions){\n            if (p === \"all\") {\n                active = 1;\n            } else {\n                mq = _win.matchMedia(conditions[p]);\n                if (mq) {\n                    _media.indexOf(context) < 0 && _media.push(context);\n                    (cond[p] = mq.matches) && (active = 1);\n                    mq.addListener ? mq.addListener(_onMediaChange) : mq.addEventListener(\"change\", _onMediaChange);\n                }\n            }\n        }\n        active && func(context, function(f) {\n            return context.add(null, f);\n        });\n        return this;\n    } // refresh() {\n    ;\n    _proto6.revert = function revert(config) {\n        this.kill(config || {});\n    };\n    _proto6.kill = function kill(revert) {\n        this.contexts.forEach(function(c) {\n            return c.kill(revert, true);\n        });\n    };\n    return MatchMedia;\n}();\n/*\n * --------------------------------------------------------------------------------------\n * GSAP\n * --------------------------------------------------------------------------------------\n */ var _gsap = {\n    registerPlugin: function registerPlugin() {\n        for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n            args[_key2] = arguments[_key2];\n        }\n        args.forEach(function(config) {\n            return _createPlugin(config);\n        });\n    },\n    timeline: function timeline(vars) {\n        return new Timeline(vars);\n    },\n    getTweensOf: function getTweensOf(targets, onlyActive) {\n        return _globalTimeline.getTweensOf(targets, onlyActive);\n    },\n    getProperty: function getProperty(target, property, unit, uncache) {\n        _isString(target) && (target = toArray(target)[0]); //in case selector text or an array is passed in\n        var getter = _getCache(target || {}).get, format = unit ? _passThrough : _numericIfPossible;\n        unit === \"native\" && (unit = \"\");\n        return !target ? target : !property ? function(property, unit, uncache) {\n            return format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));\n        } : format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));\n    },\n    quickSetter: function quickSetter(target, property, unit) {\n        target = toArray(target);\n        if (target.length > 1) {\n            var setters = target.map(function(t) {\n                return gsap.quickSetter(t, property, unit);\n            }), l = setters.length;\n            return function(value) {\n                var i = l;\n                while(i--){\n                    setters[i](value);\n                }\n            };\n        }\n        target = target[0] || {};\n        var Plugin = _plugins[property], cache = _getCache(target), p = cache.harness && (cache.harness.aliases || {})[property] || property, // in case it's an alias, like \"rotate\" for \"rotation\".\n        setter = Plugin ? function(value) {\n            var p = new Plugin();\n            _quickTween._pt = 0;\n            p.init(target, unit ? value + unit : value, _quickTween, 0, [\n                target\n            ]);\n            p.render(1, p);\n            _quickTween._pt && _renderPropTweens(1, _quickTween);\n        } : cache.set(target, p);\n        return Plugin ? setter : function(value) {\n            return setter(target, p, unit ? value + unit : value, cache, 1);\n        };\n    },\n    quickTo: function quickTo(target, property, vars) {\n        var _merge2;\n        var tween = gsap.to(target, _merge((_merge2 = {}, _merge2[property] = \"+=0.1\", _merge2.paused = true, _merge2), vars || {})), func = function func(value, start, startIsRelative) {\n            return tween.resetTo(property, value, start, startIsRelative);\n        };\n        func.tween = tween;\n        return func;\n    },\n    isTweening: function isTweening(targets) {\n        return _globalTimeline.getTweensOf(targets, true).length > 0;\n    },\n    defaults: function defaults(value) {\n        value && value.ease && (value.ease = _parseEase(value.ease, _defaults.ease));\n        return _mergeDeep(_defaults, value || {});\n    },\n    config: function config(value) {\n        return _mergeDeep(_config, value || {});\n    },\n    registerEffect: function registerEffect(_ref3) {\n        var name = _ref3.name, effect = _ref3.effect, plugins = _ref3.plugins, defaults = _ref3.defaults, extendTimeline = _ref3.extendTimeline;\n        (plugins || \"\").split(\",\").forEach(function(pluginName) {\n            return pluginName && !_plugins[pluginName] && !_globals[pluginName] && _warn(name + \" effect requires \" + pluginName + \" plugin.\");\n        });\n        _effects[name] = function(targets, vars, tl) {\n            return effect(toArray(targets), _setDefaults(vars || {}, defaults), tl);\n        };\n        if (extendTimeline) {\n            Timeline.prototype[name] = function(targets, vars, position) {\n                return this.add(_effects[name](targets, _isObject(vars) ? vars : (position = vars) && {}, this), position);\n            };\n        }\n    },\n    registerEase: function registerEase(name, ease) {\n        _easeMap[name] = _parseEase(ease);\n    },\n    parseEase: function parseEase(ease, defaultEase) {\n        return arguments.length ? _parseEase(ease, defaultEase) : _easeMap;\n    },\n    getById: function getById(id) {\n        return _globalTimeline.getById(id);\n    },\n    exportRoot: function exportRoot(vars, includeDelayedCalls) {\n        if (vars === void 0) {\n            vars = {};\n        }\n        var tl = new Timeline(vars), child, next;\n        tl.smoothChildTiming = _isNotFalse(vars.smoothChildTiming);\n        _globalTimeline.remove(tl);\n        tl._dp = 0; //otherwise it'll get re-activated when adding children and be re-introduced into _globalTimeline's linked list (then added to itself).\n        tl._time = tl._tTime = _globalTimeline._time;\n        child = _globalTimeline._first;\n        while(child){\n            next = child._next;\n            if (includeDelayedCalls || !(!child._dur && child instanceof Tween && child.vars.onComplete === child._targets[0])) {\n                _addToTimeline(tl, child, child._start - child._delay);\n            }\n            child = next;\n        }\n        _addToTimeline(_globalTimeline, tl, 0);\n        return tl;\n    },\n    context: function context(func, scope) {\n        return func ? new Context(func, scope) : _context;\n    },\n    matchMedia: function matchMedia(scope) {\n        return new MatchMedia(scope);\n    },\n    matchMediaRefresh: function matchMediaRefresh() {\n        return _media.forEach(function(c) {\n            var cond = c.conditions, found, p;\n            for(p in cond){\n                if (cond[p]) {\n                    cond[p] = false;\n                    found = 1;\n                }\n            }\n            found && c.revert();\n        }) || _onMediaChange();\n    },\n    addEventListener: function addEventListener(type, callback) {\n        var a = _listeners[type] || (_listeners[type] = []);\n        ~a.indexOf(callback) || a.push(callback);\n    },\n    removeEventListener: function removeEventListener(type, callback) {\n        var a = _listeners[type], i = a && a.indexOf(callback);\n        i >= 0 && a.splice(i, 1);\n    },\n    utils: {\n        wrap: wrap,\n        wrapYoyo: wrapYoyo,\n        distribute: distribute,\n        random: random,\n        snap: snap,\n        normalize: normalize,\n        getUnit: getUnit,\n        clamp: clamp,\n        splitColor: splitColor,\n        toArray: toArray,\n        selector: selector,\n        mapRange: mapRange,\n        pipe: pipe,\n        unitize: unitize,\n        interpolate: interpolate,\n        shuffle: shuffle\n    },\n    install: _install,\n    effects: _effects,\n    ticker: _ticker,\n    updateRoot: Timeline.updateRoot,\n    plugins: _plugins,\n    globalTimeline: _globalTimeline,\n    core: {\n        PropTween: PropTween,\n        globals: _addGlobal,\n        Tween: Tween,\n        Timeline: Timeline,\n        Animation: Animation,\n        getCache: _getCache,\n        _removeLinkedListItem: _removeLinkedListItem,\n        reverting: function reverting() {\n            return _reverting;\n        },\n        context: function context(toAdd) {\n            if (toAdd && _context) {\n                _context.data.push(toAdd);\n                toAdd._ctx = _context;\n            }\n            return _context;\n        },\n        suppressOverwrites: function suppressOverwrites(value) {\n            return _suppressOverwrites = value;\n        }\n    }\n};\n_forEachName(\"to,from,fromTo,delayedCall,set,killTweensOf\", function(name) {\n    return _gsap[name] = Tween[name];\n});\n_ticker.add(Timeline.updateRoot);\n_quickTween = _gsap.to({}, {\n    duration: 0\n}); // ---- EXTRA PLUGINS --------------------------------------------------------\nvar _getPluginPropTween = function _getPluginPropTween(plugin, prop) {\n    var pt = plugin._pt;\n    while(pt && pt.p !== prop && pt.op !== prop && pt.fp !== prop){\n        pt = pt._next;\n    }\n    return pt;\n}, _addModifiers = function _addModifiers(tween, modifiers) {\n    var targets = tween._targets, p, i, pt;\n    for(p in modifiers){\n        i = targets.length;\n        while(i--){\n            pt = tween._ptLookup[i][p];\n            if (pt && (pt = pt.d)) {\n                if (pt._pt) {\n                    // is a plugin\n                    pt = _getPluginPropTween(pt, p);\n                }\n                pt && pt.modifier && pt.modifier(modifiers[p], tween, targets[i], p);\n            }\n        }\n    }\n}, _buildModifierPlugin = function _buildModifierPlugin(name, modifier) {\n    return {\n        name: name,\n        rawVars: 1,\n        //don't pre-process function-based values or \"random()\" strings.\n        init: function init(target, vars, tween) {\n            tween._onInit = function(tween) {\n                var temp, p;\n                if (_isString(vars)) {\n                    temp = {};\n                    _forEachName(vars, function(name) {\n                        return temp[name] = 1;\n                    }); //if the user passes in a comma-delimited list of property names to roundProps, like \"x,y\", we round to whole numbers.\n                    vars = temp;\n                }\n                if (modifier) {\n                    temp = {};\n                    for(p in vars){\n                        temp[p] = modifier(vars[p]);\n                    }\n                    vars = temp;\n                }\n                _addModifiers(tween, vars);\n            };\n        }\n    };\n}; //register core plugins\nvar gsap = _gsap.registerPlugin({\n    name: \"attr\",\n    init: function init(target, vars, tween, index, targets) {\n        var p, pt, v;\n        this.tween = tween;\n        for(p in vars){\n            v = target.getAttribute(p) || \"\";\n            pt = this.add(target, \"setAttribute\", (v || 0) + \"\", vars[p], index, targets, 0, 0, p);\n            pt.op = p;\n            pt.b = v; // record the beginning value so we can revert()\n            this._props.push(p);\n        }\n    },\n    render: function render(ratio, data) {\n        var pt = data._pt;\n        while(pt){\n            _reverting ? pt.set(pt.t, pt.p, pt.b, pt) : pt.r(ratio, pt.d); // if reverting, go back to the original (pt.b)\n            pt = pt._next;\n        }\n    }\n}, {\n    name: \"endArray\",\n    init: function init(target, value) {\n        var i = value.length;\n        while(i--){\n            this.add(target, i, target[i] || 0, value[i], 0, 0, 0, 0, 0, 1);\n        }\n    }\n}, _buildModifierPlugin(\"roundProps\", _roundModifier), _buildModifierPlugin(\"modifiers\"), _buildModifierPlugin(\"snap\", snap)) || _gsap; //to prevent the core plugins from being dropped via aggressive tree shaking, we must include them in the variable declaration in this way.\nTween.version = Timeline.version = gsap.version = \"3.12.5\";\n_coreReady = 1;\n_windowExists() && _wake();\nvar Power0 = _easeMap.Power0, Power1 = _easeMap.Power1, Power2 = _easeMap.Power2, Power3 = _easeMap.Power3, Power4 = _easeMap.Power4, Linear = _easeMap.Linear, Quad = _easeMap.Quad, Cubic = _easeMap.Cubic, Quart = _easeMap.Quart, Quint = _easeMap.Quint, Strong = _easeMap.Strong, Elastic = _easeMap.Elastic, Back = _easeMap.Back, SteppedEase = _easeMap.SteppedEase, Bounce = _easeMap.Bounce, Sine = _easeMap.Sine, Expo = _easeMap.Expo, Circ = _easeMap.Circ;\n\n //export some internal methods/orojects for use in CSSPlugin so that we can externalize that file and allow custom builds that exclude it.\n\nvar _c;\n$RefreshReg$(_c, \"GSCache\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/gsap/gsap-core.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/gsap/index.js":
/*!************************************!*\
  !*** ./node_modules/gsap/index.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Back: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Back; },\n/* harmony export */   Bounce: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Bounce; },\n/* harmony export */   CSSPlugin: function() { return /* reexport safe */ _CSSPlugin_js__WEBPACK_IMPORTED_MODULE_1__.CSSPlugin; },\n/* harmony export */   Circ: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Circ; },\n/* harmony export */   Cubic: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Cubic; },\n/* harmony export */   Elastic: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Elastic; },\n/* harmony export */   Expo: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Expo; },\n/* harmony export */   Linear: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Linear; },\n/* harmony export */   Power0: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Power0; },\n/* harmony export */   Power1: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Power1; },\n/* harmony export */   Power2: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Power2; },\n/* harmony export */   Power3: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Power3; },\n/* harmony export */   Power4: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Power4; },\n/* harmony export */   Quad: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Quad; },\n/* harmony export */   Quart: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Quart; },\n/* harmony export */   Quint: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Quint; },\n/* harmony export */   Sine: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Sine; },\n/* harmony export */   SteppedEase: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.SteppedEase; },\n/* harmony export */   Strong: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Strong; },\n/* harmony export */   TimelineLite: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.TimelineLite; },\n/* harmony export */   TimelineMax: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.TimelineMax; },\n/* harmony export */   TweenLite: function() { return /* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.TweenLite; },\n/* harmony export */   TweenMax: function() { return /* binding */ TweenMaxWithCSS; },\n/* harmony export */   \"default\": function() { return /* binding */ gsapWithCSS; },\n/* harmony export */   gsap: function() { return /* binding */ gsapWithCSS; }\n/* harmony export */ });\n/* harmony import */ var _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gsap-core.js */ \"(app-pages-browser)/./node_modules/gsap/gsap-core.js\");\n/* harmony import */ var _CSSPlugin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CSSPlugin.js */ \"(app-pages-browser)/./node_modules/gsap/CSSPlugin.js\");\n\n\nvar gsapWithCSS = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.gsap.registerPlugin(_CSSPlugin_js__WEBPACK_IMPORTED_MODULE_1__.CSSPlugin) || _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.gsap, // to protect from tree shaking\nTweenMaxWithCSS = gsapWithCSS.core.Tween;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9nc2FwL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFxTjtBQUMxSztBQUMzQyxJQUFJdUIsY0FBY3ZCLCtDQUFJQSxDQUFDd0IsY0FBYyxDQUFDRixvREFBU0EsS0FBS3RCLCtDQUFJQSxFQUNwRCwrQkFBK0I7QUFDbkN5QixrQkFBa0JGLFlBQVlHLElBQUksQ0FBQ0MsS0FBSztBQUNzTyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZ3NhcC9pbmRleC5qcz8xOGU2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdzYXAsIFBvd2VyMCwgUG93ZXIxLCBQb3dlcjIsIFBvd2VyMywgUG93ZXI0LCBMaW5lYXIsIFF1YWQsIEN1YmljLCBRdWFydCwgUXVpbnQsIFN0cm9uZywgRWxhc3RpYywgQmFjaywgU3RlcHBlZEVhc2UsIEJvdW5jZSwgU2luZSwgRXhwbywgQ2lyYywgVHdlZW5MaXRlLCBUaW1lbGluZUxpdGUsIFRpbWVsaW5lTWF4IH0gZnJvbSBcIi4vZ3NhcC1jb3JlLmpzXCI7XG5pbXBvcnQgeyBDU1NQbHVnaW4gfSBmcm9tIFwiLi9DU1NQbHVnaW4uanNcIjtcbnZhciBnc2FwV2l0aENTUyA9IGdzYXAucmVnaXN0ZXJQbHVnaW4oQ1NTUGx1Z2luKSB8fCBnc2FwLFxuICAgIC8vIHRvIHByb3RlY3QgZnJvbSB0cmVlIHNoYWtpbmdcblR3ZWVuTWF4V2l0aENTUyA9IGdzYXBXaXRoQ1NTLmNvcmUuVHdlZW47XG5leHBvcnQgeyBnc2FwV2l0aENTUyBhcyBnc2FwLCBnc2FwV2l0aENTUyBhcyBkZWZhdWx0LCBDU1NQbHVnaW4sIFR3ZWVuTWF4V2l0aENTUyBhcyBUd2Vlbk1heCwgVHdlZW5MaXRlLCBUaW1lbGluZU1heCwgVGltZWxpbmVMaXRlLCBQb3dlcjAsIFBvd2VyMSwgUG93ZXIyLCBQb3dlcjMsIFBvd2VyNCwgTGluZWFyLCBRdWFkLCBDdWJpYywgUXVhcnQsIFF1aW50LCBTdHJvbmcsIEVsYXN0aWMsIEJhY2ssIFN0ZXBwZWRFYXNlLCBCb3VuY2UsIFNpbmUsIEV4cG8sIENpcmMgfTsiXSwibmFtZXMiOlsiZ3NhcCIsIlBvd2VyMCIsIlBvd2VyMSIsIlBvd2VyMiIsIlBvd2VyMyIsIlBvd2VyNCIsIkxpbmVhciIsIlF1YWQiLCJDdWJpYyIsIlF1YXJ0IiwiUXVpbnQiLCJTdHJvbmciLCJFbGFzdGljIiwiQmFjayIsIlN0ZXBwZWRFYXNlIiwiQm91bmNlIiwiU2luZSIsIkV4cG8iLCJDaXJjIiwiVHdlZW5MaXRlIiwiVGltZWxpbmVMaXRlIiwiVGltZWxpbmVNYXgiLCJDU1NQbHVnaW4iLCJnc2FwV2l0aENTUyIsInJlZ2lzdGVyUGx1Z2luIiwiVHdlZW5NYXhXaXRoQ1NTIiwiY29yZSIsIlR3ZWVuIiwiZGVmYXVsdCIsIlR3ZWVuTWF4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/gsap/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/gsap/utils/matrix.js":
/*!*******************************************!*\
  !*** ./node_modules/gsap/utils/matrix.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Matrix2D: function() { return /* binding */ Matrix2D; },\n/* harmony export */   _getCTM: function() { return /* binding */ _getCTM; },\n/* harmony export */   _getDocScrollLeft: function() { return /* binding */ _getDocScrollLeft; },\n/* harmony export */   _getDocScrollTop: function() { return /* binding */ _getDocScrollTop; },\n/* harmony export */   _isFixed: function() { return /* binding */ _isFixed; },\n/* harmony export */   _setDoc: function() { return /* binding */ _setDoc; },\n/* harmony export */   getGlobalMatrix: function() { return /* binding */ getGlobalMatrix; }\n/* harmony export */ });\n/*!\n * matrix 3.12.5\n * https://gsap.com\n *\n * Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/ /* eslint-disable */ var _doc, _win, _docElement, _body, _divContainer, _svgContainer, _identityMatrix, _gEl, _transformProp = \"transform\", _transformOriginProp = _transformProp + \"Origin\", _hasOffsetBug, _setDoc = function _setDoc(element) {\n    var doc = element.ownerDocument || element;\n    if (!(_transformProp in element.style) && \"msTransform\" in element.style) {\n        //to improve compatibility with old Microsoft browsers\n        _transformProp = \"msTransform\";\n        _transformOriginProp = _transformProp + \"Origin\";\n    }\n    while(doc.parentNode && (doc = doc.parentNode)){}\n    _win = window;\n    _identityMatrix = new Matrix2D();\n    if (doc) {\n        _doc = doc;\n        _docElement = doc.documentElement;\n        _body = doc.body;\n        _gEl = _doc.createElementNS(\"http://www.w3.org/2000/svg\", \"g\"); // prevent any existing CSS from transforming it\n        _gEl.style.transform = \"none\"; // now test for the offset reporting bug. Use feature detection instead of browser sniffing to make things more bulletproof and future-proof. Hopefully Safari will fix their bug soon.\n        var d1 = doc.createElement(\"div\"), d2 = doc.createElement(\"div\"), root = doc && (doc.body || doc.firstElementChild);\n        if (root && root.appendChild) {\n            root.appendChild(d1);\n            d1.appendChild(d2);\n            d1.setAttribute(\"style\", \"position:static;transform:translate3d(0,0,1px)\");\n            _hasOffsetBug = d2.offsetParent !== d1;\n            root.removeChild(d1);\n        }\n    }\n    return doc;\n}, _forceNonZeroScale = function _forceNonZeroScale(e) {\n    // walks up the element's ancestors and finds any that had their scale set to 0 via GSAP, and changes them to 0.0001 to ensure that measurements work. Firefox has a bug that causes it to incorrectly report getBoundingClientRect() when scale is 0.\n    var a, cache;\n    while(e && e !== _body){\n        cache = e._gsap;\n        cache && cache.uncache && cache.get(e, \"x\"); // force re-parsing of transforms if necessary\n        if (cache && !cache.scaleX && !cache.scaleY && cache.renderTransform) {\n            cache.scaleX = cache.scaleY = 1e-4;\n            cache.renderTransform(1, cache);\n            a ? a.push(cache) : a = [\n                cache\n            ];\n        }\n        e = e.parentNode;\n    }\n    return a;\n}, // possible future addition: pass an element to _forceDisplay() and it'll walk up all its ancestors and make sure anything with display: none is set to display: block, and if there's no parentNode, it'll add it to the body. It returns an Array that you can then feed to _revertDisplay() to have it revert all the changes it made.\n// _forceDisplay = e => {\n// \tlet a = [],\n// \t\tparent;\n// \twhile (e && e !== _body) {\n// \t\tparent = e.parentNode;\n// \t\t(_win.getComputedStyle(e).display === \"none\" || !parent) && a.push(e, e.style.display, parent) && (e.style.display = \"block\");\n// \t\tparent || _body.appendChild(e);\n// \t\te = parent;\n// \t}\n// \treturn a;\n// },\n// _revertDisplay = a => {\n// \tfor (let i = 0; i < a.length; i+=3) {\n// \t\ta[i+1] ? (a[i].style.display = a[i+1]) : a[i].style.removeProperty(\"display\");\n// \t\ta[i+2] || a[i].parentNode.removeChild(a[i]);\n// \t}\n// },\n_svgTemps = [], //we create 3 elements for SVG, and 3 for other DOM elements and cache them for performance reasons. They get nested in _divContainer and _svgContainer so that just one element is added to the DOM on each successive attempt. Again, performance is key.\n_divTemps = [], _getDocScrollTop = function _getDocScrollTop() {\n    return _win.pageYOffset || _doc.scrollTop || _docElement.scrollTop || _body.scrollTop || 0;\n}, _getDocScrollLeft = function _getDocScrollLeft() {\n    return _win.pageXOffset || _doc.scrollLeft || _docElement.scrollLeft || _body.scrollLeft || 0;\n}, _svgOwner = function _svgOwner(element) {\n    return element.ownerSVGElement || ((element.tagName + \"\").toLowerCase() === \"svg\" ? element : null);\n}, _isFixed = function _isFixed(element) {\n    if (_win.getComputedStyle(element).position === \"fixed\") {\n        return true;\n    }\n    element = element.parentNode;\n    if (element && element.nodeType === 1) {\n        // avoid document fragments which will throw an error.\n        return _isFixed(element);\n    }\n}, _createSibling = function _createSibling(element, i) {\n    if (element.parentNode && (_doc || _setDoc(element))) {\n        var svg = _svgOwner(element), ns = svg ? svg.getAttribute(\"xmlns\") || \"http://www.w3.org/2000/svg\" : \"http://www.w3.org/1999/xhtml\", type = svg ? i ? \"rect\" : \"g\" : \"div\", x = i !== 2 ? 0 : 100, y = i === 3 ? 100 : 0, css = \"position:absolute;display:block;pointer-events:none;margin:0;padding:0;\", e = _doc.createElementNS ? _doc.createElementNS(ns.replace(/^https/, \"http\"), type) : _doc.createElement(type);\n        if (i) {\n            if (!svg) {\n                if (!_divContainer) {\n                    _divContainer = _createSibling(element);\n                    _divContainer.style.cssText = css;\n                }\n                e.style.cssText = css + \"width:0.1px;height:0.1px;top:\" + y + \"px;left:\" + x + \"px\";\n                _divContainer.appendChild(e);\n            } else {\n                _svgContainer || (_svgContainer = _createSibling(element));\n                e.setAttribute(\"width\", 0.01);\n                e.setAttribute(\"height\", 0.01);\n                e.setAttribute(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n                _svgContainer.appendChild(e);\n            }\n        }\n        return e;\n    }\n    throw \"Need document and parent.\";\n}, _consolidate = function _consolidate(m) {\n    // replaces SVGTransformList.consolidate() because a bug in Firefox causes it to break pointer events. See https://gsap.com/forums/topic/23248-touch-is-not-working-on-draggable-in-firefox-windows-v324/?tab=comments#comment-109800\n    var c = new Matrix2D(), i = 0;\n    for(; i < m.numberOfItems; i++){\n        c.multiply(m.getItem(i).matrix);\n    }\n    return c;\n}, _getCTM = function _getCTM(svg) {\n    var m = svg.getCTM(), transform;\n    if (!m) {\n        // Firefox returns null for getCTM() on root <svg> elements, so this is a workaround using a <g> that we temporarily append.\n        transform = svg.style[_transformProp];\n        svg.style[_transformProp] = \"none\"; // a bug in Firefox causes css transforms to contaminate the getCTM()\n        svg.appendChild(_gEl);\n        m = _gEl.getCTM();\n        svg.removeChild(_gEl);\n        transform ? svg.style[_transformProp] = transform : svg.style.removeProperty(_transformProp.replace(/([A-Z])/g, \"-$1\").toLowerCase());\n    }\n    return m || _identityMatrix.clone(); // Firefox will still return null if the <svg> has a width/height of 0 in the browser.\n}, _placeSiblings = function _placeSiblings(element, adjustGOffset) {\n    var svg = _svgOwner(element), isRootSVG = element === svg, siblings = svg ? _svgTemps : _divTemps, parent = element.parentNode, container, m, b, x, y, cs;\n    if (element === _win) {\n        return element;\n    }\n    siblings.length || siblings.push(_createSibling(element, 1), _createSibling(element, 2), _createSibling(element, 3));\n    container = svg ? _svgContainer : _divContainer;\n    if (svg) {\n        if (isRootSVG) {\n            b = _getCTM(element);\n            x = -b.e / b.a;\n            y = -b.f / b.d;\n            m = _identityMatrix;\n        } else if (element.getBBox) {\n            b = element.getBBox();\n            m = element.transform ? element.transform.baseVal : {}; // IE11 doesn't follow the spec.\n            m = !m.numberOfItems ? _identityMatrix : m.numberOfItems > 1 ? _consolidate(m) : m.getItem(0).matrix; // don't call m.consolidate().matrix because a bug in Firefox makes pointer events not work when consolidate() is called on the same tick as getBoundingClientRect()! See https://gsap.com/forums/topic/23248-touch-is-not-working-on-draggable-in-firefox-windows-v324/?tab=comments#comment-109800\n            x = m.a * b.x + m.c * b.y;\n            y = m.b * b.x + m.d * b.y;\n        } else {\n            // may be a <mask> which has no getBBox() so just use defaults instead of throwing errors.\n            m = new Matrix2D();\n            x = y = 0;\n        }\n        if (adjustGOffset && element.tagName.toLowerCase() === \"g\") {\n            x = y = 0;\n        }\n        (isRootSVG ? svg : parent).appendChild(container);\n        container.setAttribute(\"transform\", \"matrix(\" + m.a + \",\" + m.b + \",\" + m.c + \",\" + m.d + \",\" + (m.e + x) + \",\" + (m.f + y) + \")\");\n    } else {\n        x = y = 0;\n        if (_hasOffsetBug) {\n            // some browsers (like Safari) have a bug that causes them to misreport offset values. When an ancestor element has a transform applied, it's supposed to treat it as if it's position: relative (new context). Safari botches this, so we need to find the closest ancestor (between the element and its offsetParent) that has a transform applied and if one is found, grab its offsetTop/Left and subtract them to compensate.\n            m = element.offsetParent;\n            b = element;\n            while(b && (b = b.parentNode) && b !== m && b.parentNode){\n                if ((_win.getComputedStyle(b)[_transformProp] + \"\").length > 4) {\n                    x = b.offsetLeft;\n                    y = b.offsetTop;\n                    b = 0;\n                }\n            }\n        }\n        cs = _win.getComputedStyle(element);\n        if (cs.position !== \"absolute\" && cs.position !== \"fixed\") {\n            m = element.offsetParent;\n            while(parent && parent !== m){\n                // if there's an ancestor element between the element and its offsetParent that's scrolled, we must factor that in.\n                x += parent.scrollLeft || 0;\n                y += parent.scrollTop || 0;\n                parent = parent.parentNode;\n            }\n        }\n        b = container.style;\n        b.top = element.offsetTop - y + \"px\";\n        b.left = element.offsetLeft - x + \"px\";\n        b[_transformProp] = cs[_transformProp];\n        b[_transformOriginProp] = cs[_transformOriginProp]; // b.border = m.border;\n        // b.borderLeftStyle = m.borderLeftStyle;\n        // b.borderTopStyle = m.borderTopStyle;\n        // b.borderLeftWidth = m.borderLeftWidth;\n        // b.borderTopWidth = m.borderTopWidth;\n        b.position = cs.position === \"fixed\" ? \"fixed\" : \"absolute\";\n        element.parentNode.appendChild(container);\n    }\n    return container;\n}, _setMatrix = function _setMatrix(m, a, b, c, d, e, f) {\n    m.a = a;\n    m.b = b;\n    m.c = c;\n    m.d = d;\n    m.e = e;\n    m.f = f;\n    return m;\n};\nvar Matrix2D = /*#__PURE__*/ function() {\n    function Matrix2D(a, b, c, d, e, f) {\n        if (a === void 0) {\n            a = 1;\n        }\n        if (b === void 0) {\n            b = 0;\n        }\n        if (c === void 0) {\n            c = 0;\n        }\n        if (d === void 0) {\n            d = 1;\n        }\n        if (e === void 0) {\n            e = 0;\n        }\n        if (f === void 0) {\n            f = 0;\n        }\n        _setMatrix(this, a, b, c, d, e, f);\n    }\n    var _proto = Matrix2D.prototype;\n    _proto.inverse = function inverse() {\n        var a = this.a, b = this.b, c = this.c, d = this.d, e = this.e, f = this.f, determinant = a * d - b * c || 1e-10;\n        return _setMatrix(this, d / determinant, -b / determinant, -c / determinant, a / determinant, (c * f - d * e) / determinant, -(a * f - b * e) / determinant);\n    };\n    _proto.multiply = function multiply(matrix) {\n        var a = this.a, b = this.b, c = this.c, d = this.d, e = this.e, f = this.f, a2 = matrix.a, b2 = matrix.c, c2 = matrix.b, d2 = matrix.d, e2 = matrix.e, f2 = matrix.f;\n        return _setMatrix(this, a2 * a + c2 * c, a2 * b + c2 * d, b2 * a + d2 * c, b2 * b + d2 * d, e + e2 * a + f2 * c, f + e2 * b + f2 * d);\n    };\n    _proto.clone = function clone() {\n        return new Matrix2D(this.a, this.b, this.c, this.d, this.e, this.f);\n    };\n    _proto.equals = function equals(matrix) {\n        var a = this.a, b = this.b, c = this.c, d = this.d, e = this.e, f = this.f;\n        return a === matrix.a && b === matrix.b && c === matrix.c && d === matrix.d && e === matrix.e && f === matrix.f;\n    };\n    _proto.apply = function apply(point, decoratee) {\n        if (decoratee === void 0) {\n            decoratee = {};\n        }\n        var x = point.x, y = point.y, a = this.a, b = this.b, c = this.c, d = this.d, e = this.e, f = this.f;\n        decoratee.x = x * a + y * c + e || 0;\n        decoratee.y = x * b + y * d + f || 0;\n        return decoratee;\n    };\n    return Matrix2D;\n}(); // Feed in an element and it'll return a 2D matrix (optionally inverted) so that you can translate between coordinate spaces.\n// Inverting lets you translate a global point into a local coordinate space. No inverting lets you go the other way.\n// We needed this to work around various browser bugs, like Firefox doesn't accurately report getScreenCTM() when there\n// are transforms applied to ancestor elements.\n// The matrix math to convert any x/y coordinate is as follows, which is wrapped in a convenient apply() method of Matrix2D above:\n//     tx = m.a * x + m.c * y + m.e\n//     ty = m.b * x + m.d * y + m.f\nfunction getGlobalMatrix(element, inverse, adjustGOffset, includeScrollInFixed) {\n    // adjustGOffset is typically used only when grabbing an element's PARENT's global matrix, and it ignores the x/y offset of any SVG <g> elements because they behave in a special way.\n    if (!element || !element.parentNode || (_doc || _setDoc(element)).documentElement === element) {\n        return new Matrix2D();\n    }\n    var zeroScales = _forceNonZeroScale(element), svg = _svgOwner(element), temps = svg ? _svgTemps : _divTemps, container = _placeSiblings(element, adjustGOffset), b1 = temps[0].getBoundingClientRect(), b2 = temps[1].getBoundingClientRect(), b3 = temps[2].getBoundingClientRect(), parent = container.parentNode, isFixed = !includeScrollInFixed && _isFixed(element), m = new Matrix2D((b2.left - b1.left) / 100, (b2.top - b1.top) / 100, (b3.left - b1.left) / 100, (b3.top - b1.top) / 100, b1.left + (isFixed ? 0 : _getDocScrollLeft()), b1.top + (isFixed ? 0 : _getDocScrollTop()));\n    parent.removeChild(container);\n    if (zeroScales) {\n        b1 = zeroScales.length;\n        while(b1--){\n            b2 = zeroScales[b1];\n            b2.scaleX = b2.scaleY = 0;\n            b2.renderTransform(1, b2);\n        }\n    }\n    return inverse ? m.inverse() : m;\n}\n // export function getMatrix(element) {\n // \t_doc || _setDoc(element);\n // \tlet m = (_win.getComputedStyle(element)[_transformProp] + \"\").substr(7).match(/[-.]*\\d+[.e\\-+]*\\d*[e\\-\\+]*\\d*/g),\n // \t\tis2D = m && m.length === 6;\n // \treturn !m || m.length < 6 ? new Matrix2D() : new Matrix2D(+m[0], +m[1], +m[is2D ? 2 : 4], +m[is2D ? 3 : 5], +m[is2D ? 4 : 12], +m[is2D ? 5 : 13]);\n // }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/gsap/utils/matrix.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/gsap/utils/paths.js":
/*!******************************************!*\
  !*** ./node_modules/gsap/utils/paths.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bezierToPoints: function() { return /* binding */ bezierToPoints; },\n/* harmony export */   cacheRawPathMeasurements: function() { return /* binding */ cacheRawPathMeasurements; },\n/* harmony export */   convertToPath: function() { return /* binding */ convertToPath; },\n/* harmony export */   copyRawPath: function() { return /* binding */ copyRawPath; },\n/* harmony export */   flatPointsToSegment: function() { return /* binding */ flatPointsToSegment; },\n/* harmony export */   getClosestData: function() { return /* binding */ getClosestData; },\n/* harmony export */   getPositionOnPath: function() { return /* binding */ getPositionOnPath; },\n/* harmony export */   getRawPath: function() { return /* binding */ getRawPath; },\n/* harmony export */   getRotationAtProgress: function() { return /* binding */ getRotationAtProgress; },\n/* harmony export */   pointsToSegment: function() { return /* binding */ pointsToSegment; },\n/* harmony export */   rawPathToString: function() { return /* binding */ rawPathToString; },\n/* harmony export */   reverseSegment: function() { return /* binding */ reverseSegment; },\n/* harmony export */   simplifyPoints: function() { return /* binding */ simplifyPoints; },\n/* harmony export */   sliceRawPath: function() { return /* binding */ sliceRawPath; },\n/* harmony export */   stringToRawPath: function() { return /* binding */ stringToRawPath; },\n/* harmony export */   subdivideSegment: function() { return /* binding */ subdivideSegment; },\n/* harmony export */   subdivideSegmentNear: function() { return /* binding */ subdivideSegmentNear; },\n/* harmony export */   transformRawPath: function() { return /* binding */ transformRawPath; }\n/* harmony export */ });\n/*!\n * paths 3.12.5\n * https://gsap.com\n *\n * Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/ /* eslint-disable */ var _svgPathExp = /[achlmqstvz]|(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig, _numbersExp = /(?:(-)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig, _scientific = /[\\+\\-]?\\d*\\.?\\d+e[\\+\\-]?\\d+/ig, _selectorExp = /(^[#\\.][a-z]|[a-y][a-z])/i, _DEG2RAD = Math.PI / 180, _RAD2DEG = 180 / Math.PI, _sin = Math.sin, _cos = Math.cos, _abs = Math.abs, _sqrt = Math.sqrt, _atan2 = Math.atan2, _largeNum = 1e8, _isString = function _isString(value) {\n    return typeof value === \"string\";\n}, _isNumber = function _isNumber(value) {\n    return typeof value === \"number\";\n}, _isUndefined = function _isUndefined(value) {\n    return typeof value === \"undefined\";\n}, _temp = {}, _temp2 = {}, _roundingNum = 1e5, _wrapProgress = function _wrapProgress(progress) {\n    return Math.round((progress + _largeNum) % 1 * _roundingNum) / _roundingNum || (progress < 0 ? 0 : 1);\n}, //if progress lands on 1, the % will make it 0 which is why we || 1, but not if it's negative because it makes more sense for motion to end at 0 in that case.\n_round = function _round(value) {\n    return Math.round(value * _roundingNum) / _roundingNum || 0;\n}, _roundPrecise = function _roundPrecise(value) {\n    return Math.round(value * 1e10) / 1e10 || 0;\n}, _splitSegment = function _splitSegment(rawPath, segIndex, i, t) {\n    var segment = rawPath[segIndex], shift = t === 1 ? 6 : subdivideSegment(segment, i, t);\n    if ((shift || !t) && shift + i + 2 < segment.length) {\n        rawPath.splice(segIndex, 0, segment.slice(0, i + shift + 2));\n        segment.splice(0, i + shift);\n        return 1;\n    }\n}, _getSampleIndex = function _getSampleIndex(samples, length, progress) {\n    // slightly slower way than doing this (when there's no lookup): segment.lookup[progress < 1 ? ~~(length / segment.minLength) : segment.lookup.length - 1] || 0;\n    var l = samples.length, i = ~~(progress * l);\n    if (samples[i] > length) {\n        while(--i && samples[i] > length){}\n        i < 0 && (i = 0);\n    } else {\n        while(samples[++i] < length && i < l){}\n    }\n    return i < l ? i : l - 1;\n}, _reverseRawPath = function _reverseRawPath(rawPath, skipOuter) {\n    var i = rawPath.length;\n    skipOuter || rawPath.reverse();\n    while(i--){\n        rawPath[i].reversed || reverseSegment(rawPath[i]);\n    }\n}, _copyMetaData = function _copyMetaData(source, copy) {\n    copy.totalLength = source.totalLength;\n    if (source.samples) {\n        //segment\n        copy.samples = source.samples.slice(0);\n        copy.lookup = source.lookup.slice(0);\n        copy.minLength = source.minLength;\n        copy.resolution = source.resolution;\n    } else if (source.totalPoints) {\n        //rawPath\n        copy.totalPoints = source.totalPoints;\n    }\n    return copy;\n}, //pushes a new segment into a rawPath, but if its starting values match the ending values of the last segment, it'll merge it into that same segment (to reduce the number of segments)\n_appendOrMerge = function _appendOrMerge(rawPath, segment) {\n    var index = rawPath.length, prevSeg = rawPath[index - 1] || [], l = prevSeg.length;\n    if (index && segment[0] === prevSeg[l - 2] && segment[1] === prevSeg[l - 1]) {\n        segment = prevSeg.concat(segment.slice(2));\n        index--;\n    }\n    rawPath[index] = segment;\n}, _bestDistance;\n/* TERMINOLOGY\n - RawPath - an array of arrays, one for each Segment. A single RawPath could have multiple \"M\" commands, defining Segments (paths aren't always connected).\n - Segment - an array containing a sequence of Cubic Bezier coordinates in alternating x, y, x, y format. Starting anchor, then control point 1, control point 2, and ending anchor, then the next control point 1, control point 2, anchor, etc. Uses less memory than an array with a bunch of {x, y} points.\n - Bezier - a single cubic Bezier with a starting anchor, two control points, and an ending anchor.\n - the variable \"t\" is typically the position along an individual Bezier path (time) and it's NOT linear, meaning it could accelerate/decelerate based on the control points whereas the \"p\" or \"progress\" value is linearly mapped to the whole path, so it shouldn't really accelerate/decelerate based on control points. So a progress of 0.2 would be almost exactly 20% along the path. \"t\" is ONLY in an individual Bezier piece.\n */ //accepts basic selector text, a path instance, a RawPath instance, or a Segment and returns a RawPath (makes it easy to homogenize things). If an element or selector text is passed in, it'll also cache the value so that if it's queried again, it'll just take the path data from there instead of parsing it all over again (as long as the path data itself hasn't changed - it'll check).\nfunction getRawPath(value) {\n    value = _isString(value) && _selectorExp.test(value) ? document.querySelector(value) || value : value;\n    var e = value.getAttribute ? value : 0, rawPath;\n    if (e && (value = value.getAttribute(\"d\"))) {\n        //implements caching\n        if (!e._gsPath) {\n            e._gsPath = {};\n        }\n        rawPath = e._gsPath[value];\n        return rawPath && !rawPath._dirty ? rawPath : e._gsPath[value] = stringToRawPath(value);\n    }\n    return !value ? console.warn(\"Expecting a <path> element or an SVG path data string\") : _isString(value) ? stringToRawPath(value) : _isNumber(value[0]) ? [\n        value\n    ] : value;\n} //copies a RawPath WITHOUT the length meta data (for speed)\nfunction copyRawPath(rawPath) {\n    var a = [], i = 0;\n    for(; i < rawPath.length; i++){\n        a[i] = _copyMetaData(rawPath[i], rawPath[i].slice(0));\n    }\n    return _copyMetaData(rawPath, a);\n}\nfunction reverseSegment(segment) {\n    var i = 0, y;\n    segment.reverse(); //this will invert the order y, x, y, x so we must flip it back.\n    for(; i < segment.length; i += 2){\n        y = segment[i];\n        segment[i] = segment[i + 1];\n        segment[i + 1] = y;\n    }\n    segment.reversed = !segment.reversed;\n}\nvar _createPath = function _createPath(e, ignore) {\n    var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"), attr = [].slice.call(e.attributes), i = attr.length, name;\n    ignore = \",\" + ignore + \",\";\n    while(--i > -1){\n        name = attr[i].nodeName.toLowerCase(); //in Microsoft Edge, if you don't set the attribute with a lowercase name, it doesn't render correctly! Super weird.\n        if (ignore.indexOf(\",\" + name + \",\") < 0) {\n            path.setAttributeNS(null, name, attr[i].nodeValue);\n        }\n    }\n    return path;\n}, _typeAttrs = {\n    rect: \"rx,ry,x,y,width,height\",\n    circle: \"r,cx,cy\",\n    ellipse: \"rx,ry,cx,cy\",\n    line: \"x1,x2,y1,y2\"\n}, _attrToObj = function _attrToObj(e, attrs) {\n    var props = attrs ? attrs.split(\",\") : [], obj = {}, i = props.length;\n    while(--i > -1){\n        obj[props[i]] = +e.getAttribute(props[i]) || 0;\n    }\n    return obj;\n}; //converts an SVG shape like <circle>, <rect>, <polygon>, <polyline>, <ellipse>, etc. to a <path>, swapping it in and copying the attributes to match.\nfunction convertToPath(element, swap) {\n    var type = element.tagName.toLowerCase(), circ = 0.552284749831, data, x, y, r, ry, path, rcirc, rycirc, points, w, h, x2, x3, x4, x5, x6, y2, y3, y4, y5, y6, attr;\n    if (type === \"path\" || !element.getBBox) {\n        return element;\n    }\n    path = _createPath(element, \"x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points\");\n    attr = _attrToObj(element, _typeAttrs[type]);\n    if (type === \"rect\") {\n        r = attr.rx;\n        ry = attr.ry || r;\n        x = attr.x;\n        y = attr.y;\n        w = attr.width - r * 2;\n        h = attr.height - ry * 2;\n        if (r || ry) {\n            //if there are rounded corners, render cubic beziers\n            x2 = x + r * (1 - circ);\n            x3 = x + r;\n            x4 = x3 + w;\n            x5 = x4 + r * circ;\n            x6 = x4 + r;\n            y2 = y + ry * (1 - circ);\n            y3 = y + ry;\n            y4 = y3 + h;\n            y5 = y4 + ry * circ;\n            y6 = y4 + ry;\n            data = \"M\" + x6 + \",\" + y3 + \" V\" + y4 + \" C\" + [\n                x6,\n                y5,\n                x5,\n                y6,\n                x4,\n                y6,\n                x4 - (x4 - x3) / 3,\n                y6,\n                x3 + (x4 - x3) / 3,\n                y6,\n                x3,\n                y6,\n                x2,\n                y6,\n                x,\n                y5,\n                x,\n                y4,\n                x,\n                y4 - (y4 - y3) / 3,\n                x,\n                y3 + (y4 - y3) / 3,\n                x,\n                y3,\n                x,\n                y2,\n                x2,\n                y,\n                x3,\n                y,\n                x3 + (x4 - x3) / 3,\n                y,\n                x4 - (x4 - x3) / 3,\n                y,\n                x4,\n                y,\n                x5,\n                y,\n                x6,\n                y2,\n                x6,\n                y3\n            ].join(\",\") + \"z\";\n        } else {\n            data = \"M\" + (x + w) + \",\" + y + \" v\" + h + \" h\" + -w + \" v\" + -h + \" h\" + w + \"z\";\n        }\n    } else if (type === \"circle\" || type === \"ellipse\") {\n        if (type === \"circle\") {\n            r = ry = attr.r;\n            rycirc = r * circ;\n        } else {\n            r = attr.rx;\n            ry = attr.ry;\n            rycirc = ry * circ;\n        }\n        x = attr.cx;\n        y = attr.cy;\n        rcirc = r * circ;\n        data = \"M\" + (x + r) + \",\" + y + \" C\" + [\n            x + r,\n            y + rycirc,\n            x + rcirc,\n            y + ry,\n            x,\n            y + ry,\n            x - rcirc,\n            y + ry,\n            x - r,\n            y + rycirc,\n            x - r,\n            y,\n            x - r,\n            y - rycirc,\n            x - rcirc,\n            y - ry,\n            x,\n            y - ry,\n            x + rcirc,\n            y - ry,\n            x + r,\n            y - rycirc,\n            x + r,\n            y\n        ].join(\",\") + \"z\";\n    } else if (type === \"line\") {\n        data = \"M\" + attr.x1 + \",\" + attr.y1 + \" L\" + attr.x2 + \",\" + attr.y2; //previously, we just converted to \"Mx,y Lx,y\" but Safari has bugs that cause that not to render properly when using a stroke-dasharray that's not fully visible! Using a cubic bezier fixes that issue.\n    } else if (type === \"polyline\" || type === \"polygon\") {\n        points = (element.getAttribute(\"points\") + \"\").match(_numbersExp) || [];\n        x = points.shift();\n        y = points.shift();\n        data = \"M\" + x + \",\" + y + \" L\" + points.join(\",\");\n        if (type === \"polygon\") {\n            data += \",\" + x + \",\" + y + \"z\";\n        }\n    }\n    path.setAttribute(\"d\", rawPathToString(path._gsRawPath = stringToRawPath(data)));\n    if (swap && element.parentNode) {\n        element.parentNode.insertBefore(path, element);\n        element.parentNode.removeChild(element);\n    }\n    return path;\n} //returns the rotation (in degrees) at a particular progress on a rawPath (the slope of the tangent)\nfunction getRotationAtProgress(rawPath, progress) {\n    var d = getProgressData(rawPath, progress >= 1 ? 1 - 1e-9 : progress ? progress : 1e-9);\n    return getRotationAtBezierT(d.segment, d.i, d.t);\n}\nfunction getRotationAtBezierT(segment, i, t) {\n    var a = segment[i], b = segment[i + 2], c = segment[i + 4], x;\n    a += (b - a) * t;\n    b += (c - b) * t;\n    a += (b - a) * t;\n    x = b + (c + (segment[i + 6] - c) * t - b) * t - a;\n    a = segment[i + 1];\n    b = segment[i + 3];\n    c = segment[i + 5];\n    a += (b - a) * t;\n    b += (c - b) * t;\n    a += (b - a) * t;\n    return _round(_atan2(b + (c + (segment[i + 7] - c) * t - b) * t - a, x) * _RAD2DEG);\n}\nfunction sliceRawPath(rawPath, start, end) {\n    end = _isUndefined(end) ? 1 : _roundPrecise(end) || 0; // we must round to avoid issues like 4.15 / 8 = 0.8300000000000001 instead of 0.83 or 2.8 / 5 = 0.5599999999999999 instead of 0.56 and if someone is doing a loop like start: 2.8 / 0.5, end: 2.8 / 0.5 + 1.\n    start = _roundPrecise(start) || 0;\n    var loops = Math.max(0, ~~(_abs(end - start) - 1e-8)), path = copyRawPath(rawPath);\n    if (start > end) {\n        start = 1 - start;\n        end = 1 - end;\n        _reverseRawPath(path);\n        path.totalLength = 0;\n    }\n    if (start < 0 || end < 0) {\n        var offset = Math.abs(~~Math.min(start, end)) + 1;\n        start += offset;\n        end += offset;\n    }\n    path.totalLength || cacheRawPathMeasurements(path);\n    var wrap = end > 1, s = getProgressData(path, start, _temp, true), e = getProgressData(path, end, _temp2), eSeg = e.segment, sSeg = s.segment, eSegIndex = e.segIndex, sSegIndex = s.segIndex, ei = e.i, si = s.i, sameSegment = sSegIndex === eSegIndex, sameBezier = ei === si && sameSegment, wrapsBehind, sShift, eShift, i, copy, totalSegments, l, j;\n    if (wrap || loops) {\n        wrapsBehind = eSegIndex < sSegIndex || sameSegment && ei < si || sameBezier && e.t < s.t;\n        if (_splitSegment(path, sSegIndex, si, s.t)) {\n            sSegIndex++;\n            if (!wrapsBehind) {\n                eSegIndex++;\n                if (sameBezier) {\n                    e.t = (e.t - s.t) / (1 - s.t);\n                    ei = 0;\n                } else if (sameSegment) {\n                    ei -= si;\n                }\n            }\n        }\n        if (Math.abs(1 - (end - start)) < 1e-5) {\n            eSegIndex = sSegIndex - 1;\n        } else if (!e.t && eSegIndex) {\n            eSegIndex--;\n        } else if (_splitSegment(path, eSegIndex, ei, e.t) && wrapsBehind) {\n            sSegIndex++;\n        }\n        if (s.t === 1) {\n            sSegIndex = (sSegIndex + 1) % path.length;\n        }\n        copy = [];\n        totalSegments = path.length;\n        l = 1 + totalSegments * loops;\n        j = sSegIndex;\n        l += (totalSegments - sSegIndex + eSegIndex) % totalSegments;\n        for(i = 0; i < l; i++){\n            _appendOrMerge(copy, path[j++ % totalSegments]);\n        }\n        path = copy;\n    } else {\n        eShift = e.t === 1 ? 6 : subdivideSegment(eSeg, ei, e.t);\n        if (start !== end) {\n            sShift = subdivideSegment(sSeg, si, sameBezier ? s.t / e.t : s.t);\n            sameSegment && (eShift += sShift);\n            eSeg.splice(ei + eShift + 2);\n            (sShift || si) && sSeg.splice(0, si + sShift);\n            i = path.length;\n            while(i--){\n                //chop off any extra segments\n                (i < sSegIndex || i > eSegIndex) && path.splice(i, 1);\n            }\n        } else {\n            eSeg.angle = getRotationAtBezierT(eSeg, ei + eShift, 0); //record the value before we chop because it'll be impossible to determine the angle after its length is 0!\n            ei += eShift;\n            s = eSeg[ei];\n            e = eSeg[ei + 1];\n            eSeg.length = eSeg.totalLength = 0;\n            eSeg.totalPoints = path.totalPoints = 8;\n            eSeg.push(s, e, s, e, s, e, s, e);\n        }\n    }\n    path.totalLength = 0;\n    return path;\n} //measures a Segment according to its resolution (so if segment.resolution is 6, for example, it'll take 6 samples equally across each Bezier) and create/populate a \"samples\" Array that has the length up to each of those sample points (always increasing from the start) as well as a \"lookup\" array that's broken up according to the smallest distance between 2 samples. This gives us a very fast way of looking up a progress position rather than looping through all the points/Beziers. You can optionally have it only measure a subset, starting at startIndex and going for a specific number of beziers (remember, there are 3 x/y pairs each, for a total of 6 elements for each Bezier). It will also populate a \"totalLength\" property, but that's not generally super accurate because by default it'll only take 6 samples per Bezier. But for performance reasons, it's perfectly adequate for measuring progress values along the path. If you need a more accurate totalLength, either increase the resolution or use the more advanced bezierToPoints() method which keeps adding points until they don't deviate by more than a certain precision value.\nfunction measureSegment(segment, startIndex, bezierQty) {\n    startIndex = startIndex || 0;\n    if (!segment.samples) {\n        segment.samples = [];\n        segment.lookup = [];\n    }\n    var resolution = ~~segment.resolution || 12, inc = 1 / resolution, endIndex = bezierQty ? startIndex + bezierQty * 6 + 1 : segment.length, x1 = segment[startIndex], y1 = segment[startIndex + 1], samplesIndex = startIndex ? startIndex / 6 * resolution : 0, samples = segment.samples, lookup = segment.lookup, min = (startIndex ? segment.minLength : _largeNum) || _largeNum, prevLength = samples[samplesIndex + bezierQty * resolution - 1], length = startIndex ? samples[samplesIndex - 1] : 0, i, j, x4, x3, x2, xd, xd1, y4, y3, y2, yd, yd1, inv, t, lengthIndex, l, segLength;\n    samples.length = lookup.length = 0;\n    for(j = startIndex + 2; j < endIndex; j += 6){\n        x4 = segment[j + 4] - x1;\n        x3 = segment[j + 2] - x1;\n        x2 = segment[j] - x1;\n        y4 = segment[j + 5] - y1;\n        y3 = segment[j + 3] - y1;\n        y2 = segment[j + 1] - y1;\n        xd = xd1 = yd = yd1 = 0;\n        if (_abs(x4) < .01 && _abs(y4) < .01 && _abs(x2) + _abs(y2) < .01) {\n            //dump points that are sufficiently close (basically right on top of each other, making a bezier super tiny or 0 length)\n            if (segment.length > 8) {\n                segment.splice(j, 6);\n                j -= 6;\n                endIndex -= 6;\n            }\n        } else {\n            for(i = 1; i <= resolution; i++){\n                t = inc * i;\n                inv = 1 - t;\n                xd = xd1 - (xd1 = (t * t * x4 + 3 * inv * (t * x3 + inv * x2)) * t);\n                yd = yd1 - (yd1 = (t * t * y4 + 3 * inv * (t * y3 + inv * y2)) * t);\n                l = _sqrt(yd * yd + xd * xd);\n                if (l < min) {\n                    min = l;\n                }\n                length += l;\n                samples[samplesIndex++] = length;\n            }\n        }\n        x1 += x4;\n        y1 += y4;\n    }\n    if (prevLength) {\n        prevLength -= length;\n        for(; samplesIndex < samples.length; samplesIndex++){\n            samples[samplesIndex] += prevLength;\n        }\n    }\n    if (samples.length && min) {\n        segment.totalLength = segLength = samples[samples.length - 1] || 0;\n        segment.minLength = min;\n        if (segLength / min < 9999) {\n            // if the lookup would require too many values (memory problem), we skip this and instead we use a loop to lookup values directly in the samples Array\n            l = lengthIndex = 0;\n            for(i = 0; i < segLength; i += min){\n                lookup[l++] = samples[lengthIndex] < i ? ++lengthIndex : lengthIndex;\n            }\n        }\n    } else {\n        segment.totalLength = samples[0] = 0;\n    }\n    return startIndex ? length - samples[startIndex / 2 - 1] : length;\n}\nfunction cacheRawPathMeasurements(rawPath, resolution) {\n    var pathLength, points, i;\n    for(i = pathLength = points = 0; i < rawPath.length; i++){\n        rawPath[i].resolution = ~~resolution || 12; //steps per Bezier curve (anchor, 2 control points, to anchor)\n        points += rawPath[i].length;\n        pathLength += measureSegment(rawPath[i]);\n    }\n    rawPath.totalPoints = points;\n    rawPath.totalLength = pathLength;\n    return rawPath;\n} //divide segment[i] at position t (value between 0 and 1, progress along that particular cubic bezier segment that starts at segment[i]). Returns how many elements were spliced into the segment array (either 0 or 6)\nfunction subdivideSegment(segment, i, t) {\n    if (t <= 0 || t >= 1) {\n        return 0;\n    }\n    var ax = segment[i], ay = segment[i + 1], cp1x = segment[i + 2], cp1y = segment[i + 3], cp2x = segment[i + 4], cp2y = segment[i + 5], bx = segment[i + 6], by = segment[i + 7], x1a = ax + (cp1x - ax) * t, x2 = cp1x + (cp2x - cp1x) * t, y1a = ay + (cp1y - ay) * t, y2 = cp1y + (cp2y - cp1y) * t, x1 = x1a + (x2 - x1a) * t, y1 = y1a + (y2 - y1a) * t, x2a = cp2x + (bx - cp2x) * t, y2a = cp2y + (by - cp2y) * t;\n    x2 += (x2a - x2) * t;\n    y2 += (y2a - y2) * t;\n    segment.splice(i + 2, 4, _round(x1a), _round(y1a), _round(x1), _round(y1), _round(x1 + (x2 - x1) * t), _round(y1 + (y2 - y1) * t), _round(x2), _round(y2), _round(x2a), _round(y2a));\n    segment.samples && segment.samples.splice(i / 6 * segment.resolution | 0, 0, 0, 0, 0, 0, 0, 0);\n    return 6;\n} // returns an object {path, segment, segIndex, i, t}\nfunction getProgressData(rawPath, progress, decoratee, pushToNextIfAtEnd) {\n    decoratee = decoratee || {};\n    rawPath.totalLength || cacheRawPathMeasurements(rawPath);\n    if (progress < 0 || progress > 1) {\n        progress = _wrapProgress(progress);\n    }\n    var segIndex = 0, segment = rawPath[0], samples, resolution, length, min, max, i, t;\n    if (!progress) {\n        t = i = segIndex = 0;\n        segment = rawPath[0];\n    } else if (progress === 1) {\n        t = 1;\n        segIndex = rawPath.length - 1;\n        segment = rawPath[segIndex];\n        i = segment.length - 8;\n    } else {\n        if (rawPath.length > 1) {\n            //speed optimization: most of the time, there's only one segment so skip the recursion.\n            length = rawPath.totalLength * progress;\n            max = i = 0;\n            while((max += rawPath[i++].totalLength) < length){\n                segIndex = i;\n            }\n            segment = rawPath[segIndex];\n            min = max - segment.totalLength;\n            progress = (length - min) / (max - min) || 0;\n        }\n        samples = segment.samples;\n        resolution = segment.resolution; //how many samples per cubic bezier chunk\n        length = segment.totalLength * progress;\n        i = segment.lookup.length ? segment.lookup[~~(length / segment.minLength)] || 0 : _getSampleIndex(samples, length, progress);\n        min = i ? samples[i - 1] : 0;\n        max = samples[i];\n        if (max < length) {\n            min = max;\n            max = samples[++i];\n        }\n        t = 1 / resolution * ((length - min) / (max - min) + i % resolution);\n        i = ~~(i / resolution) * 6;\n        if (pushToNextIfAtEnd && t === 1) {\n            if (i + 6 < segment.length) {\n                i += 6;\n                t = 0;\n            } else if (segIndex + 1 < rawPath.length) {\n                i = t = 0;\n                segment = rawPath[++segIndex];\n            }\n        }\n    }\n    decoratee.t = t;\n    decoratee.i = i;\n    decoratee.path = rawPath;\n    decoratee.segment = segment;\n    decoratee.segIndex = segIndex;\n    return decoratee;\n}\nfunction getPositionOnPath(rawPath, progress, includeAngle, point) {\n    var segment = rawPath[0], result = point || {}, samples, resolution, length, min, max, i, t, a, inv;\n    if (progress < 0 || progress > 1) {\n        progress = _wrapProgress(progress);\n    }\n    segment.lookup || cacheRawPathMeasurements(rawPath);\n    if (rawPath.length > 1) {\n        //speed optimization: most of the time, there's only one segment so skip the recursion.\n        length = rawPath.totalLength * progress;\n        max = i = 0;\n        while((max += rawPath[i++].totalLength) < length){\n            segment = rawPath[i];\n        }\n        min = max - segment.totalLength;\n        progress = (length - min) / (max - min) || 0;\n    }\n    samples = segment.samples;\n    resolution = segment.resolution;\n    length = segment.totalLength * progress;\n    i = segment.lookup.length ? segment.lookup[progress < 1 ? ~~(length / segment.minLength) : segment.lookup.length - 1] || 0 : _getSampleIndex(samples, length, progress);\n    min = i ? samples[i - 1] : 0;\n    max = samples[i];\n    if (max < length) {\n        min = max;\n        max = samples[++i];\n    }\n    t = 1 / resolution * ((length - min) / (max - min) + i % resolution) || 0;\n    inv = 1 - t;\n    i = ~~(i / resolution) * 6;\n    a = segment[i];\n    result.x = _round((t * t * (segment[i + 6] - a) + 3 * inv * (t * (segment[i + 4] - a) + inv * (segment[i + 2] - a))) * t + a);\n    result.y = _round((t * t * (segment[i + 7] - (a = segment[i + 1])) + 3 * inv * (t * (segment[i + 5] - a) + inv * (segment[i + 3] - a))) * t + a);\n    if (includeAngle) {\n        result.angle = segment.totalLength ? getRotationAtBezierT(segment, i, t >= 1 ? 1 - 1e-9 : t ? t : 1e-9) : segment.angle || 0;\n    }\n    return result;\n} //applies a matrix transform to RawPath (or a segment in a RawPath) and returns whatever was passed in (it transforms the values in the array(s), not a copy).\nfunction transformRawPath(rawPath, a, b, c, d, tx, ty) {\n    var j = rawPath.length, segment, l, i, x, y;\n    while(--j > -1){\n        segment = rawPath[j];\n        l = segment.length;\n        for(i = 0; i < l; i += 2){\n            x = segment[i];\n            y = segment[i + 1];\n            segment[i] = x * a + y * c + tx;\n            segment[i + 1] = x * b + y * d + ty;\n        }\n    }\n    rawPath._dirty = 1;\n    return rawPath;\n} // translates SVG arc data into a segment (cubic beziers). Angle is in degrees.\nfunction arcToSegment(lastX, lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y) {\n    if (lastX === x && lastY === y) {\n        return;\n    }\n    rx = _abs(rx);\n    ry = _abs(ry);\n    var angleRad = angle % 360 * _DEG2RAD, cosAngle = _cos(angleRad), sinAngle = _sin(angleRad), PI = Math.PI, TWOPI = PI * 2, dx2 = (lastX - x) / 2, dy2 = (lastY - y) / 2, x1 = cosAngle * dx2 + sinAngle * dy2, y1 = -sinAngle * dx2 + cosAngle * dy2, x1_sq = x1 * x1, y1_sq = y1 * y1, radiiCheck = x1_sq / (rx * rx) + y1_sq / (ry * ry);\n    if (radiiCheck > 1) {\n        rx = _sqrt(radiiCheck) * rx;\n        ry = _sqrt(radiiCheck) * ry;\n    }\n    var rx_sq = rx * rx, ry_sq = ry * ry, sq = (rx_sq * ry_sq - rx_sq * y1_sq - ry_sq * x1_sq) / (rx_sq * y1_sq + ry_sq * x1_sq);\n    if (sq < 0) {\n        sq = 0;\n    }\n    var coef = (largeArcFlag === sweepFlag ? -1 : 1) * _sqrt(sq), cx1 = coef * (rx * y1 / ry), cy1 = coef * -(ry * x1 / rx), sx2 = (lastX + x) / 2, sy2 = (lastY + y) / 2, cx = sx2 + (cosAngle * cx1 - sinAngle * cy1), cy = sy2 + (sinAngle * cx1 + cosAngle * cy1), ux = (x1 - cx1) / rx, uy = (y1 - cy1) / ry, vx = (-x1 - cx1) / rx, vy = (-y1 - cy1) / ry, temp = ux * ux + uy * uy, angleStart = (uy < 0 ? -1 : 1) * Math.acos(ux / _sqrt(temp)), angleExtent = (ux * vy - uy * vx < 0 ? -1 : 1) * Math.acos((ux * vx + uy * vy) / _sqrt(temp * (vx * vx + vy * vy)));\n    isNaN(angleExtent) && (angleExtent = PI); //rare edge case. Math.cos(-1) is NaN.\n    if (!sweepFlag && angleExtent > 0) {\n        angleExtent -= TWOPI;\n    } else if (sweepFlag && angleExtent < 0) {\n        angleExtent += TWOPI;\n    }\n    angleStart %= TWOPI;\n    angleExtent %= TWOPI;\n    var segments = Math.ceil(_abs(angleExtent) / (TWOPI / 4)), rawPath = [], angleIncrement = angleExtent / segments, controlLength = 4 / 3 * _sin(angleIncrement / 2) / (1 + _cos(angleIncrement / 2)), ma = cosAngle * rx, mb = sinAngle * rx, mc = sinAngle * -ry, md = cosAngle * ry, i;\n    for(i = 0; i < segments; i++){\n        angle = angleStart + i * angleIncrement;\n        x1 = _cos(angle);\n        y1 = _sin(angle);\n        ux = _cos(angle += angleIncrement);\n        uy = _sin(angle);\n        rawPath.push(x1 - controlLength * y1, y1 + controlLength * x1, ux + controlLength * uy, uy - controlLength * ux, ux, uy);\n    } //now transform according to the actual size of the ellipse/arc (the beziers were noramlized, between 0 and 1 on a circle).\n    for(i = 0; i < rawPath.length; i += 2){\n        x1 = rawPath[i];\n        y1 = rawPath[i + 1];\n        rawPath[i] = x1 * ma + y1 * mc + cx;\n        rawPath[i + 1] = x1 * mb + y1 * md + cy;\n    }\n    rawPath[i - 2] = x; //always set the end to exactly where it's supposed to be\n    rawPath[i - 1] = y;\n    return rawPath;\n} //Spits back a RawPath with absolute coordinates. Each segment starts with a \"moveTo\" command (x coordinate, then y) and then 2 control points (x, y, x, y), then anchor. The goal is to minimize memory and maximize speed.\nfunction stringToRawPath(d) {\n    var a = (d + \"\").replace(_scientific, function(m) {\n        var n = +m;\n        return n < 0.0001 && n > -0.0001 ? 0 : n;\n    }).match(_svgPathExp) || [], //some authoring programs spit out very small numbers in scientific notation like \"1e-5\", so make sure we round that down to 0 first.\n    path = [], relativeX = 0, relativeY = 0, twoThirds = 2 / 3, elements = a.length, points = 0, errorMessage = \"ERROR: malformed path: \" + d, i, j, x, y, command, isRelative, segment, startX, startY, difX, difY, beziers, prevCommand, flag1, flag2, line = function line(sx, sy, ex, ey) {\n        difX = (ex - sx) / 3;\n        difY = (ey - sy) / 3;\n        segment.push(sx + difX, sy + difY, ex - difX, ey - difY, ex, ey);\n    };\n    if (!d || !isNaN(a[0]) || isNaN(a[1])) {\n        console.log(errorMessage);\n        return path;\n    }\n    for(i = 0; i < elements; i++){\n        prevCommand = command;\n        if (isNaN(a[i])) {\n            command = a[i].toUpperCase();\n            isRelative = command !== a[i]; //lower case means relative\n        } else {\n            //commands like \"C\" can be strung together without any new command characters between.\n            i--;\n        }\n        x = +a[i + 1];\n        y = +a[i + 2];\n        if (isRelative) {\n            x += relativeX;\n            y += relativeY;\n        }\n        if (!i) {\n            startX = x;\n            startY = y;\n        } // \"M\" (move)\n        if (command === \"M\") {\n            if (segment) {\n                if (segment.length < 8) {\n                    //if the path data was funky and just had a M with no actual drawing anywhere, skip it.\n                    path.length -= 1;\n                } else {\n                    points += segment.length;\n                }\n            }\n            relativeX = startX = x;\n            relativeY = startY = y;\n            segment = [\n                x,\n                y\n            ];\n            path.push(segment);\n            i += 2;\n            command = \"L\"; //an \"M\" with more than 2 values gets interpreted as \"lineTo\" commands (\"L\").\n        // \"C\" (cubic bezier)\n        } else if (command === \"C\") {\n            if (!segment) {\n                segment = [\n                    0,\n                    0\n                ];\n            }\n            if (!isRelative) {\n                relativeX = relativeY = 0;\n            } //note: \"*1\" is just a fast/short way to cast the value as a Number. WAAAY faster in Chrome, slightly slower in Firefox.\n            segment.push(x, y, relativeX + a[i + 3] * 1, relativeY + a[i + 4] * 1, relativeX += a[i + 5] * 1, relativeY += a[i + 6] * 1);\n            i += 6; // \"S\" (continuation of cubic bezier)\n        } else if (command === \"S\") {\n            difX = relativeX;\n            difY = relativeY;\n            if (prevCommand === \"C\" || prevCommand === \"S\") {\n                difX += relativeX - segment[segment.length - 4];\n                difY += relativeY - segment[segment.length - 3];\n            }\n            if (!isRelative) {\n                relativeX = relativeY = 0;\n            }\n            segment.push(difX, difY, x, y, relativeX += a[i + 3] * 1, relativeY += a[i + 4] * 1);\n            i += 4; // \"Q\" (quadratic bezier)\n        } else if (command === \"Q\") {\n            difX = relativeX + (x - relativeX) * twoThirds;\n            difY = relativeY + (y - relativeY) * twoThirds;\n            if (!isRelative) {\n                relativeX = relativeY = 0;\n            }\n            relativeX += a[i + 3] * 1;\n            relativeY += a[i + 4] * 1;\n            segment.push(difX, difY, relativeX + (x - relativeX) * twoThirds, relativeY + (y - relativeY) * twoThirds, relativeX, relativeY);\n            i += 4; // \"T\" (continuation of quadratic bezier)\n        } else if (command === \"T\") {\n            difX = relativeX - segment[segment.length - 4];\n            difY = relativeY - segment[segment.length - 3];\n            segment.push(relativeX + difX, relativeY + difY, x + (relativeX + difX * 1.5 - x) * twoThirds, y + (relativeY + difY * 1.5 - y) * twoThirds, relativeX = x, relativeY = y);\n            i += 2; // \"H\" (horizontal line)\n        } else if (command === \"H\") {\n            line(relativeX, relativeY, relativeX = x, relativeY);\n            i += 1; // \"V\" (vertical line)\n        } else if (command === \"V\") {\n            //adjust values because the first (and only one) isn't x in this case, it's y.\n            line(relativeX, relativeY, relativeX, relativeY = x + (isRelative ? relativeY - relativeX : 0));\n            i += 1; // \"L\" (line) or \"Z\" (close)\n        } else if (command === \"L\" || command === \"Z\") {\n            if (command === \"Z\") {\n                x = startX;\n                y = startY;\n                segment.closed = true;\n            }\n            if (command === \"L\" || _abs(relativeX - x) > 0.5 || _abs(relativeY - y) > 0.5) {\n                line(relativeX, relativeY, x, y);\n                if (command === \"L\") {\n                    i += 2;\n                }\n            }\n            relativeX = x;\n            relativeY = y; // \"A\" (arc)\n        } else if (command === \"A\") {\n            flag1 = a[i + 4];\n            flag2 = a[i + 5];\n            difX = a[i + 6];\n            difY = a[i + 7];\n            j = 7;\n            if (flag1.length > 1) {\n                // for cases when the flags are merged, like \"a8 8 0 018 8\" (the 0 and 1 flags are WITH the x value of 8, but it could also be \"a8 8 0 01-8 8\" so it may include x or not)\n                if (flag1.length < 3) {\n                    difY = difX;\n                    difX = flag2;\n                    j--;\n                } else {\n                    difY = flag2;\n                    difX = flag1.substr(2);\n                    j -= 2;\n                }\n                flag2 = flag1.charAt(1);\n                flag1 = flag1.charAt(0);\n            }\n            beziers = arcToSegment(relativeX, relativeY, +a[i + 1], +a[i + 2], +a[i + 3], +flag1, +flag2, (isRelative ? relativeX : 0) + difX * 1, (isRelative ? relativeY : 0) + difY * 1);\n            i += j;\n            if (beziers) {\n                for(j = 0; j < beziers.length; j++){\n                    segment.push(beziers[j]);\n                }\n            }\n            relativeX = segment[segment.length - 2];\n            relativeY = segment[segment.length - 1];\n        } else {\n            console.log(errorMessage);\n        }\n    }\n    i = segment.length;\n    if (i < 6) {\n        //in case there's odd SVG like a M0,0 command at the very end.\n        path.pop();\n        i = 0;\n    } else if (segment[0] === segment[i - 2] && segment[1] === segment[i - 1]) {\n        segment.closed = true;\n    }\n    path.totalPoints = points + i;\n    return path;\n} //populates the points array in alternating x/y values (like [x, y, x, y...] instead of individual point objects [{x, y}, {x, y}...] to conserve memory and stay in line with how we're handling segment arrays\nfunction bezierToPoints(x1, y1, x2, y2, x3, y3, x4, y4, threshold, points, index) {\n    var x12 = (x1 + x2) / 2, y12 = (y1 + y2) / 2, x23 = (x2 + x3) / 2, y23 = (y2 + y3) / 2, x34 = (x3 + x4) / 2, y34 = (y3 + y4) / 2, x123 = (x12 + x23) / 2, y123 = (y12 + y23) / 2, x234 = (x23 + x34) / 2, y234 = (y23 + y34) / 2, x1234 = (x123 + x234) / 2, y1234 = (y123 + y234) / 2, dx = x4 - x1, dy = y4 - y1, d2 = _abs((x2 - x4) * dy - (y2 - y4) * dx), d3 = _abs((x3 - x4) * dy - (y3 - y4) * dx), length;\n    if (!points) {\n        points = [\n            x1,\n            y1,\n            x4,\n            y4\n        ];\n        index = 2;\n    }\n    points.splice(index || points.length - 2, 0, x1234, y1234);\n    if ((d2 + d3) * (d2 + d3) > threshold * (dx * dx + dy * dy)) {\n        length = points.length;\n        bezierToPoints(x1, y1, x12, y12, x123, y123, x1234, y1234, threshold, points, index);\n        bezierToPoints(x1234, y1234, x234, y234, x34, y34, x4, y4, threshold, points, index + 2 + (points.length - length));\n    }\n    return points;\n}\n/*\nfunction getAngleBetweenPoints(x0, y0, x1, y1, x2, y2) { //angle between 3 points in radians\n\tvar dx1 = x1 - x0,\n\t\tdy1 = y1 - y0,\n\t\tdx2 = x2 - x1,\n\t\tdy2 = y2 - y1,\n\t\tdx3 = x2 - x0,\n\t\tdy3 = y2 - y0,\n\t\ta = dx1 * dx1 + dy1 * dy1,\n\t\tb = dx2 * dx2 + dy2 * dy2,\n\t\tc = dx3 * dx3 + dy3 * dy3;\n\treturn Math.acos( (a + b - c) / _sqrt(4 * a * b) );\n},\n*/ //pointsToSegment() doesn't handle flat coordinates (where y is always 0) the way we need (the resulting control points are always right on top of the anchors), so this function basically makes the control points go directly up and down, varying in length based on the curviness (more curvy, further control points)\nfunction flatPointsToSegment(points, curviness) {\n    if (curviness === void 0) {\n        curviness = 1;\n    }\n    var x = points[0], y = 0, segment = [\n        x,\n        y\n    ], i = 2;\n    for(; i < points.length; i += 2){\n        segment.push(x, y, points[i], y = (points[i] - x) * curviness / 2, x = points[i], -y);\n    }\n    return segment;\n} //points is an array of x/y points, like [x, y, x, y, x, y]\nfunction pointsToSegment(points, curviness) {\n    //points = simplifyPoints(points, tolerance);\n    _abs(points[0] - points[2]) < 1e-4 && _abs(points[1] - points[3]) < 1e-4 && (points = points.slice(2)); // if the first two points are super close, dump the first one.\n    var l = points.length - 2, x = +points[0], y = +points[1], nextX = +points[2], nextY = +points[3], segment = [\n        x,\n        y,\n        x,\n        y\n    ], dx2 = nextX - x, dy2 = nextY - y, closed = Math.abs(points[l] - x) < 0.001 && Math.abs(points[l + 1] - y) < 0.001, prevX, prevY, i, dx1, dy1, r1, r2, r3, tl, mx1, mx2, mxm, my1, my2, mym;\n    if (closed) {\n        // if the start and end points are basically on top of each other, close the segment by adding the 2nd point to the end, and the 2nd-to-last point to the beginning (we'll remove them at the end, but this allows the curvature to look perfect)\n        points.push(nextX, nextY);\n        nextX = x;\n        nextY = y;\n        x = points[l - 2];\n        y = points[l - 1];\n        points.unshift(x, y);\n        l += 4;\n    }\n    curviness = curviness || curviness === 0 ? +curviness : 1;\n    for(i = 2; i < l; i += 2){\n        prevX = x;\n        prevY = y;\n        x = nextX;\n        y = nextY;\n        nextX = +points[i + 2];\n        nextY = +points[i + 3];\n        if (x === nextX && y === nextY) {\n            continue;\n        }\n        dx1 = dx2;\n        dy1 = dy2;\n        dx2 = nextX - x;\n        dy2 = nextY - y;\n        r1 = _sqrt(dx1 * dx1 + dy1 * dy1); // r1, r2, and r3 correlate x and y (and z in the future). Basically 2D or 3D hypotenuse\n        r2 = _sqrt(dx2 * dx2 + dy2 * dy2);\n        r3 = _sqrt(Math.pow(dx2 / r2 + dx1 / r1, 2) + Math.pow(dy2 / r2 + dy1 / r1, 2));\n        tl = (r1 + r2) * curviness * 0.25 / r3;\n        mx1 = x - (x - prevX) * (r1 ? tl / r1 : 0);\n        mx2 = x + (nextX - x) * (r2 ? tl / r2 : 0);\n        mxm = x - (mx1 + ((mx2 - mx1) * (r1 * 3 / (r1 + r2) + 0.5) / 4 || 0));\n        my1 = y - (y - prevY) * (r1 ? tl / r1 : 0);\n        my2 = y + (nextY - y) * (r2 ? tl / r2 : 0);\n        mym = y - (my1 + ((my2 - my1) * (r1 * 3 / (r1 + r2) + 0.5) / 4 || 0));\n        if (x !== prevX || y !== prevY) {\n            segment.push(_round(mx1 + mxm), _round(my1 + mym), _round(x), _round(y), _round(mx2 + mxm), _round(my2 + mym));\n        }\n    }\n    x !== nextX || y !== nextY || segment.length < 4 ? segment.push(_round(nextX), _round(nextY), _round(nextX), _round(nextY)) : segment.length -= 2;\n    if (segment.length === 2) {\n        // only one point!\n        segment.push(x, y, x, y, x, y);\n    } else if (closed) {\n        segment.splice(0, 6);\n        segment.length = segment.length - 6;\n    }\n    return segment;\n} //returns the squared distance between an x/y coordinate and a segment between x1/y1 and x2/y2\nfunction pointToSegDist(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1, dy = y2 - y1, t;\n    if (dx || dy) {\n        t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        } else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return Math.pow(x - x1, 2) + Math.pow(y - y1, 2);\n}\nfunction simplifyStep(points, first, last, tolerance, simplified) {\n    var maxSqDist = tolerance, firstX = points[first], firstY = points[first + 1], lastX = points[last], lastY = points[last + 1], index, i, d;\n    for(i = first + 2; i < last; i += 2){\n        d = pointToSegDist(points[i], points[i + 1], firstX, firstY, lastX, lastY);\n        if (d > maxSqDist) {\n            index = i;\n            maxSqDist = d;\n        }\n    }\n    if (maxSqDist > tolerance) {\n        index - first > 2 && simplifyStep(points, first, index, tolerance, simplified);\n        simplified.push(points[index], points[index + 1]);\n        last - index > 2 && simplifyStep(points, index, last, tolerance, simplified);\n    }\n} //points is an array of x/y values like [x, y, x, y, x, y]\nfunction simplifyPoints(points, tolerance) {\n    var prevX = parseFloat(points[0]), prevY = parseFloat(points[1]), temp = [\n        prevX,\n        prevY\n    ], l = points.length - 2, i, x, y, dx, dy, result, last;\n    tolerance = Math.pow(tolerance || 1, 2);\n    for(i = 2; i < l; i += 2){\n        x = parseFloat(points[i]);\n        y = parseFloat(points[i + 1]);\n        dx = prevX - x;\n        dy = prevY - y;\n        if (dx * dx + dy * dy > tolerance) {\n            temp.push(x, y);\n            prevX = x;\n            prevY = y;\n        }\n    }\n    temp.push(parseFloat(points[l]), parseFloat(points[l + 1]));\n    last = temp.length - 2;\n    result = [\n        temp[0],\n        temp[1]\n    ];\n    simplifyStep(temp, 0, last, tolerance, result);\n    result.push(temp[last], temp[last + 1]);\n    return result;\n}\nfunction getClosestProgressOnBezier(iterations, px, py, start, end, slices, x0, y0, x1, y1, x2, y2, x3, y3) {\n    var inc = (end - start) / slices, best = 0, t = start, x, y, d, dx, dy, inv;\n    _bestDistance = _largeNum;\n    while(t <= end){\n        inv = 1 - t;\n        x = inv * inv * inv * x0 + 3 * inv * inv * t * x1 + 3 * inv * t * t * x2 + t * t * t * x3;\n        y = inv * inv * inv * y0 + 3 * inv * inv * t * y1 + 3 * inv * t * t * y2 + t * t * t * y3;\n        dx = x - px;\n        dy = y - py;\n        d = dx * dx + dy * dy;\n        if (d < _bestDistance) {\n            _bestDistance = d;\n            best = t;\n        }\n        t += inc;\n    }\n    return iterations > 1 ? getClosestProgressOnBezier(iterations - 1, px, py, Math.max(best - inc, 0), Math.min(best + inc, 1), slices, x0, y0, x1, y1, x2, y2, x3, y3) : best;\n}\nfunction getClosestData(rawPath, x, y, slices) {\n    //returns an object with the closest j, i, and t (j is the segment index, i is the index of the point in that segment, and t is the time/progress along that bezier)\n    var closest = {\n        j: 0,\n        i: 0,\n        t: 0\n    }, bestDistance = _largeNum, i, j, t, segment;\n    for(j = 0; j < rawPath.length; j++){\n        segment = rawPath[j];\n        for(i = 0; i < segment.length; i += 6){\n            t = getClosestProgressOnBezier(1, x, y, 0, 1, slices || 20, segment[i], segment[i + 1], segment[i + 2], segment[i + 3], segment[i + 4], segment[i + 5], segment[i + 6], segment[i + 7]);\n            if (bestDistance > _bestDistance) {\n                bestDistance = _bestDistance;\n                closest.j = j;\n                closest.i = i;\n                closest.t = t;\n            }\n        }\n    }\n    return closest;\n} //subdivide a Segment closest to a specific x,y coordinate\nfunction subdivideSegmentNear(x, y, segment, slices, iterations) {\n    var l = segment.length, bestDistance = _largeNum, bestT = 0, bestSegmentIndex = 0, t, i;\n    slices = slices || 20;\n    iterations = iterations || 3;\n    for(i = 0; i < l; i += 6){\n        t = getClosestProgressOnBezier(1, x, y, 0, 1, slices, segment[i], segment[i + 1], segment[i + 2], segment[i + 3], segment[i + 4], segment[i + 5], segment[i + 6], segment[i + 7]);\n        if (bestDistance > _bestDistance) {\n            bestDistance = _bestDistance;\n            bestT = t;\n            bestSegmentIndex = i;\n        }\n    }\n    t = getClosestProgressOnBezier(iterations, x, y, bestT - 0.05, bestT + 0.05, slices, segment[bestSegmentIndex], segment[bestSegmentIndex + 1], segment[bestSegmentIndex + 2], segment[bestSegmentIndex + 3], segment[bestSegmentIndex + 4], segment[bestSegmentIndex + 5], segment[bestSegmentIndex + 6], segment[bestSegmentIndex + 7]);\n    subdivideSegment(segment, bestSegmentIndex, t);\n    return bestSegmentIndex + 6;\n}\n/*\nTakes any of the following and converts it to an all Cubic Bezier SVG data string:\n- A <path> data string like \"M0,0 L2,4 v20,15 H100\"\n- A RawPath, like [[x, y, x, y, x, y, x, y][[x, y, x, y, x, y, x, y]]\n- A Segment, like [x, y, x, y, x, y, x, y]\n\nNote: all numbers are rounded down to the closest 0.001 to minimize memory, maximize speed, and avoid odd numbers like 1e-13\n*/ function rawPathToString(rawPath) {\n    if (_isNumber(rawPath[0])) {\n        //in case a segment is passed in instead\n        rawPath = [\n            rawPath\n        ];\n    }\n    var result = \"\", l = rawPath.length, sl, s, i, segment;\n    for(s = 0; s < l; s++){\n        segment = rawPath[s];\n        result += \"M\" + _round(segment[0]) + \",\" + _round(segment[1]) + \" C\";\n        sl = segment.length;\n        for(i = 2; i < sl; i++){\n            result += _round(segment[i++]) + \",\" + _round(segment[i++]) + \" \" + _round(segment[i++]) + \",\" + _round(segment[i++]) + \" \" + _round(segment[i++]) + \",\" + _round(segment[i]) + \" \";\n        }\n        if (segment.closed) {\n            result += \"z\";\n        }\n    }\n    return result;\n} /*\n// takes a segment with coordinates [x, y, x, y, ...] and converts the control points into angles and lengths [x, y, angle, length, angle, length, x, y, angle, length, ...] so that it animates more cleanly and avoids odd breaks/kinks. For example, if you animate from 1 o'clock to 6 o'clock, it'd just go directly/linearly rather than around. So the length would be very short in the middle of the tween.\nexport function cpCoordsToAngles(segment, copy) {\n\tvar result = copy ? segment.slice(0) : segment,\n\t\tx, y, i;\n\tfor (i = 0; i < segment.length; i+=6) {\n\t\tx = segment[i+2] - segment[i];\n\t\ty = segment[i+3] - segment[i+1];\n\t\tresult[i+2] = Math.atan2(y, x);\n\t\tresult[i+3] = Math.sqrt(x * x + y * y);\n\t\tx = segment[i+6] - segment[i+4];\n\t\ty = segment[i+7] - segment[i+5];\n\t\tresult[i+4] = Math.atan2(y, x);\n\t\tresult[i+5] = Math.sqrt(x * x + y * y);\n\t}\n\treturn result;\n}\n\n// takes a segment that was converted with cpCoordsToAngles() to have angles and lengths instead of coordinates for the control points, and converts it BACK into coordinates.\nexport function cpAnglesToCoords(segment, copy) {\n\tvar result = copy ? segment.slice(0) : segment,\n\t\tlength = segment.length,\n\t\trnd = 1000,\n\t\tangle, l, i, j;\n\tfor (i = 0; i < length; i+=6) {\n\t\tangle = segment[i+2];\n\t\tl = segment[i+3]; //length\n\t\tresult[i+2] = (((segment[i] + Math.cos(angle) * l) * rnd) | 0) / rnd;\n\t\tresult[i+3] = (((segment[i+1] + Math.sin(angle) * l) * rnd) | 0) / rnd;\n\t\tangle = segment[i+4];\n\t\tl = segment[i+5]; //length\n\t\tresult[i+4] = (((segment[i+6] - Math.cos(angle) * l) * rnd) | 0) / rnd;\n\t\tresult[i+5] = (((segment[i+7] - Math.sin(angle) * l) * rnd) | 0) / rnd;\n\t}\n\treturn result;\n}\n\n//adds an \"isSmooth\" array to each segment and populates it with a boolean value indicating whether or not it's smooth (the control points have basically the same slope). For any smooth control points, it converts the coordinates into angle (x, in radians) and length (y) and puts them into the same index value in a smoothData array.\nexport function populateSmoothData(rawPath) {\n\tlet j = rawPath.length,\n\t\tsmooth, segment, x, y, x2, y2, i, l, a, a2, isSmooth, smoothData;\n\twhile (--j > -1) {\n\t\tsegment = rawPath[j];\n\t\tisSmooth = segment.isSmooth = segment.isSmooth || [0, 0, 0, 0];\n\t\tsmoothData = segment.smoothData = segment.smoothData || [0, 0, 0, 0];\n\t\tisSmooth.length = 4;\n\t\tl = segment.length - 2;\n\t\tfor (i = 6; i < l; i += 6) {\n\t\t\tx = segment[i] - segment[i - 2];\n\t\t\ty = segment[i + 1] - segment[i - 1];\n\t\t\tx2 = segment[i + 2] - segment[i];\n\t\t\ty2 = segment[i + 3] - segment[i + 1];\n\t\t\ta = _atan2(y, x);\n\t\t\ta2 = _atan2(y2, x2);\n\t\t\tsmooth = (Math.abs(a - a2) < 0.09);\n\t\t\tif (smooth) {\n\t\t\t\tsmoothData[i - 2] = a;\n\t\t\t\tsmoothData[i + 2] = a2;\n\t\t\t\tsmoothData[i - 1] = _sqrt(x * x + y * y);\n\t\t\t\tsmoothData[i + 3] = _sqrt(x2 * x2 + y2 * y2);\n\t\t\t}\n\t\t\tisSmooth.push(smooth, smooth, 0, 0, smooth, smooth);\n\t\t}\n\t\t//if the first and last points are identical, check to see if there's a smooth transition. We must handle this a bit differently due to their positions in the array.\n\t\tif (segment[l] === segment[0] && segment[l+1] === segment[1]) {\n\t\t\tx = segment[0] - segment[l-2];\n\t\t\ty = segment[1] - segment[l-1];\n\t\t\tx2 = segment[2] - segment[0];\n\t\t\ty2 = segment[3] - segment[1];\n\t\t\ta = _atan2(y, x);\n\t\t\ta2 = _atan2(y2, x2);\n\t\t\tif (Math.abs(a - a2) < 0.09) {\n\t\t\t\tsmoothData[l-2] = a;\n\t\t\t\tsmoothData[2] = a2;\n\t\t\t\tsmoothData[l-1] = _sqrt(x * x + y * y);\n\t\t\t\tsmoothData[3] = _sqrt(x2 * x2 + y2 * y2);\n\t\t\t\tisSmooth[l-2] = isSmooth[l-1] = true; //don't change indexes 2 and 3 because we'll trigger everything from the END, and this will optimize file size a bit.\n\t\t\t}\n\t\t}\n\t}\n\treturn rawPath;\n}\nexport function pointToScreen(svgElement, point) {\n\tif (arguments.length < 2) { //by default, take the first set of coordinates in the path as the point\n\t\tlet rawPath = getRawPath(svgElement);\n\t\tpoint = svgElement.ownerSVGElement.createSVGPoint();\n\t\tpoint.x = rawPath[0][0];\n\t\tpoint.y = rawPath[0][1];\n\t}\n\treturn point.matrixTransform(svgElement.getScreenCTM());\n}\n\n*/ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/gsap/utils/paths.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash.debounce/index.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash.debounce/index.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */ /** Used as the `TypeError` message for \"Functions\" methods. */ \nvar FUNC_ERROR_TEXT = \"Expected a function\";\n/** Used as references for various `Number` constants. */ var NAN = 0 / 0;\n/** `Object#toString` result references. */ var symbolTag = \"[object Symbol]\";\n/** Used to match leading and trailing whitespace. */ var reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */ var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */ var reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */ var reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */ var freeParseInt = parseInt;\n/** Detect free variable `global` from Node.js. */ var freeGlobal = typeof __webpack_require__.g == \"object\" && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n/** Detect free variable `self`. */ var freeSelf = typeof self == \"object\" && self && self.Object === Object && self;\n/** Used as a reference to the global object. */ var root = freeGlobal || freeSelf || Function(\"return this\")();\n/** Used for built-in method references. */ var objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */ var objectToString = objectProto.toString;\n/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeMax = Math.max, nativeMin = Math.min;\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */ var now = function() {\n    return root.Date.now();\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */ function debounce(func, wait, options) {\n    var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;\n    if (typeof func != \"function\") {\n        throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    wait = toNumber(wait) || 0;\n    if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = \"maxWait\" in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = \"trailing\" in options ? !!options.trailing : trailing;\n    }\n    function invokeFunc(time) {\n        var args = lastArgs, thisArg = lastThis;\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n    }\n    function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n    }\n    function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result = wait - timeSinceLastCall;\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n    }\n    function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n    }\n    function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n            return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n    }\n    function trailingEdge(time) {\n        timerId = undefined;\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n            return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n    }\n    function cancel() {\n        if (timerId !== undefined) {\n            clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n    }\n    function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n    }\n    function debounced() {\n        var time = now(), isInvoking = shouldInvoke(time);\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n        if (isInvoking) {\n            if (timerId === undefined) {\n                return leadingEdge(lastCallTime);\n            }\n            if (maxing) {\n                // Handle invocations in a tight loop.\n                timerId = setTimeout(timerExpired, wait);\n                return invokeFunc(lastCallTime);\n            }\n        }\n        if (timerId === undefined) {\n            timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n    }\n    debounced.cancel = cancel;\n    debounced.flush = flush;\n    return debounced;\n}\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */ function isObject(value) {\n    var type = typeof value;\n    return !!value && (type == \"object\" || type == \"function\");\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */ function isObjectLike(value) {\n    return !!value && typeof value == \"object\";\n}\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */ function isSymbol(value) {\n    return typeof value == \"symbol\" || isObjectLike(value) && objectToString.call(value) == symbolTag;\n}\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */ function toNumber(value) {\n    if (typeof value == \"number\") {\n        return value;\n    }\n    if (isSymbol(value)) {\n        return NAN;\n    }\n    if (isObject(value)) {\n        var other = typeof value.valueOf == \"function\" ? value.valueOf() : value;\n        value = isObject(other) ? other + \"\" : other;\n    }\n    if (typeof value != \"string\") {\n        return value === 0 ? value : +value;\n    }\n    value = value.replace(reTrim, \"\");\n    var isBinary = reIsBinary.test(value);\n    return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\nmodule.exports = debounce;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash.debounce/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types.\n        var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n        var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n        var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n        var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n        var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n        var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n        var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n        var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n        var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n        var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n        var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n        var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n        var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n        var REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\n        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n        function getIteratorFn(maybeIterable) {\n            if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                return null;\n            }\n            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n            if (typeof maybeIterator === \"function\") {\n                return maybeIterator;\n            }\n            return null;\n        }\n        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        // -----------------------------------------------------------------------------\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        var enableCacheElement = false;\n        var enableTransitionTracing = false; // No known bugs, but needs performance testing\n        var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n        // stuff. Intended to enable React core members to more easily debug scheduling\n        // issues in DEV builds.\n        var enableDebugTracing = false;\n        var REACT_CLIENT_REFERENCE$2 = Symbol.for(\"react.client.reference\");\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                // types supported by any Flight configuration anywhere since\n                // we don't know which Flight build this will end up being used\n                // with.\n                type.$$typeof === REACT_CLIENT_REFERENCE$2 || type.getModuleId !== undefined) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function getWrappedName(outerType, innerType, wrapperName) {\n            var displayName = outerType.displayName;\n            if (displayName) {\n                return displayName;\n            }\n            var functionName = innerType.displayName || innerType.name || \"\";\n            return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n        } // Keep in sync with react-reconciler/getComponentNameFromFiber\n        function getContextName(type) {\n            return type.displayName || \"Context\";\n        }\n        var REACT_CLIENT_REFERENCE$1 = Symbol.for(\"react.client.reference\"); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n        function getComponentNameFromType(type) {\n            if (type == null) {\n                // Host root, text node or just invalid type.\n                return null;\n            }\n            if (typeof type === \"function\") {\n                if (type.$$typeof === REACT_CLIENT_REFERENCE$1) {\n                    // TODO: Create a convention for naming client references with debug info.\n                    return null;\n                }\n                return type.displayName || type.name || null;\n            }\n            if (typeof type === \"string\") {\n                return type;\n            }\n            switch(type){\n                case REACT_FRAGMENT_TYPE:\n                    return \"Fragment\";\n                case REACT_PORTAL_TYPE:\n                    return \"Portal\";\n                case REACT_PROFILER_TYPE:\n                    return \"Profiler\";\n                case REACT_STRICT_MODE_TYPE:\n                    return \"StrictMode\";\n                case REACT_SUSPENSE_TYPE:\n                    return \"Suspense\";\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return \"SuspenseList\";\n                case REACT_CACHE_TYPE:\n                    {\n                        return \"Cache\";\n                    }\n            }\n            if (typeof type === \"object\") {\n                {\n                    if (typeof type.tag === \"number\") {\n                        error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                    }\n                }\n                switch(type.$$typeof){\n                    case REACT_CONTEXT_TYPE:\n                        var context = type;\n                        return getContextName(context) + \".Consumer\";\n                    case REACT_PROVIDER_TYPE:\n                        var provider = type;\n                        return getContextName(provider._context) + \".Provider\";\n                    case REACT_FORWARD_REF_TYPE:\n                        return getWrappedName(type, type.render, \"ForwardRef\");\n                    case REACT_MEMO_TYPE:\n                        var outerName = type.displayName || null;\n                        if (outerName !== null) {\n                            return outerName;\n                        }\n                        return getComponentNameFromType(type.type) || \"Memo\";\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                return getComponentNameFromType(init(payload));\n                            } catch (x) {\n                                return null;\n                            }\n                        }\n                }\n            }\n            return null;\n        }\n        var assign = Object.assign;\n        // Helpers to patch console.logs to avoid logging during side-effect free\n        // replaying on render function. This currently only patches the object\n        // lazily which won't cover if the log function was extracted eagerly.\n        // We could also eagerly patch the method.\n        var disabledDepth = 0;\n        var prevLog;\n        var prevInfo;\n        var prevWarn;\n        var prevError;\n        var prevGroup;\n        var prevGroupCollapsed;\n        var prevGroupEnd;\n        function disabledLog() {}\n        disabledLog.__reactDisabledLog = true;\n        function disableLogs() {\n            {\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                    prevInfo = console.info;\n                    prevWarn = console.warn;\n                    prevError = console.error;\n                    prevGroup = console.group;\n                    prevGroupCollapsed = console.groupCollapsed;\n                    prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                    var props = {\n                        configurable: true,\n                        enumerable: true,\n                        value: disabledLog,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        info: props,\n                        log: props,\n                        warn: props,\n                        error: props,\n                        group: props,\n                        groupCollapsed: props,\n                        groupEnd: props\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                disabledDepth++;\n            }\n        }\n        function reenableLogs() {\n            {\n                disabledDepth--;\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ var props = {\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        log: assign({}, props, {\n                            value: prevLog\n                        }),\n                        info: assign({}, props, {\n                            value: prevInfo\n                        }),\n                        warn: assign({}, props, {\n                            value: prevWarn\n                        }),\n                        error: assign({}, props, {\n                            value: prevError\n                        }),\n                        group: assign({}, props, {\n                            value: prevGroup\n                        }),\n                        groupCollapsed: assign({}, props, {\n                            value: prevGroupCollapsed\n                        }),\n                        groupEnd: assign({}, props, {\n                            value: prevGroupEnd\n                        })\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                if (disabledDepth < 0) {\n                    error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                }\n            }\n        }\n        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n        var prefix;\n        function describeBuiltInComponentFrame(name, source, ownerFn) {\n            {\n                if (prefix === undefined) {\n                    // Extract the VM specific prefix used by each line.\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        var match = x.stack.trim().match(/\\n( *(at )?)/);\n                        prefix = match && match[1] || \"\";\n                    }\n                } // We use the prefix to ensure our stacks line up with native stack frames.\n                return \"\\n\" + prefix + name;\n            }\n        }\n        var reentry = false;\n        var componentFrameCache;\n        {\n            var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n            componentFrameCache = new PossiblyWeakMap();\n        }\n        /**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */ function describeNativeComponentFrame(fn, construct) {\n            // If something asked for a stack inside a fake render, it should get ignored.\n            if (!fn || reentry) {\n                return \"\";\n            }\n            {\n                var frame = componentFrameCache.get(fn);\n                if (frame !== undefined) {\n                    return frame;\n                }\n            }\n            reentry = true;\n            var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n            Error.prepareStackTrace = undefined;\n            var previousDispatcher;\n            {\n                previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n                // for warnings.\n                ReactCurrentDispatcher.current = null;\n                disableLogs();\n            }\n            /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */ var RunInRootFrame = {\n                DetermineComponentFrameRoot: function() {\n                    var control;\n                    try {\n                        // This should throw.\n                        if (construct) {\n                            // Something should be setting the props in the constructor.\n                            var Fake = function() {\n                                throw Error();\n                            }; // $FlowFixMe[prop-missing]\n                            Object.defineProperty(Fake.prototype, \"props\", {\n                                set: function() {\n                                    // We use a throwing setter instead of frozen or non-writable props\n                                    // because that won't throw in a non-strict mode function.\n                                    throw Error();\n                                }\n                            });\n                            if (typeof Reflect === \"object\" && Reflect.construct) {\n                                // We construct a different control for this case to include any extra\n                                // frames added by the construct call.\n                                try {\n                                    Reflect.construct(Fake, []);\n                                } catch (x) {\n                                    control = x;\n                                }\n                                Reflect.construct(fn, [], Fake);\n                            } else {\n                                try {\n                                    Fake.call();\n                                } catch (x) {\n                                    control = x;\n                                } // $FlowFixMe[prop-missing] found when upgrading Flow\n                                fn.call(Fake.prototype);\n                            }\n                        } else {\n                            try {\n                                throw Error();\n                            } catch (x) {\n                                control = x;\n                            } // TODO(luna): This will currently only throw if the function component\n                            // tries to access React/ReactDOM/props. We should probably make this throw\n                            // in simple components too\n                            var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n                            // component, which we don't yet support. Attach a noop catch handler to\n                            // silence the error.\n                            // TODO: Implement component stacks for async client components?\n                            if (maybePromise && typeof maybePromise.catch === \"function\") {\n                                maybePromise.catch(function() {});\n                            }\n                        }\n                    } catch (sample) {\n                        // This is inlined manually because closure doesn't do it for us.\n                        if (sample && control && typeof sample.stack === \"string\") {\n                            return [\n                                sample.stack,\n                                control.stack\n                            ];\n                        }\n                    }\n                    return [\n                        null,\n                        null\n                    ];\n                }\n            }; // $FlowFixMe[prop-missing]\n            RunInRootFrame.DetermineComponentFrameRoot.displayName = \"DetermineComponentFrameRoot\";\n            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, \"name\"); // Before ES6, the `name` property was not configurable.\n            if (namePropDescriptor && namePropDescriptor.configurable) {\n                // V8 utilizes a function's `name` property when generating a stack trace.\n                Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // is set to `false`.\n                // $FlowFixMe[cannot-write]\n                \"name\", {\n                    value: \"DetermineComponentFrameRoot\"\n                });\n            }\n            try {\n                var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];\n                if (sampleStack && controlStack) {\n                    // This extracts the first frame from the sample that isn't also in the control.\n                    // Skipping one frame that we assume is the frame that calls the two.\n                    var sampleLines = sampleStack.split(\"\\n\");\n                    var controlLines = controlStack.split(\"\\n\");\n                    var s = 0;\n                    var c = 0;\n                    while(s < sampleLines.length && !sampleLines[s].includes(\"DetermineComponentFrameRoot\")){\n                        s++;\n                    }\n                    while(c < controlLines.length && !controlLines[c].includes(\"DetermineComponentFrameRoot\")){\n                        c++;\n                    } // We couldn't find our intentionally injected common root frame, attempt\n                    // to find another common root frame by search from the bottom of the\n                    // control stack...\n                    if (s === sampleLines.length || c === controlLines.length) {\n                        s = sampleLines.length - 1;\n                        c = controlLines.length - 1;\n                        while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                            // We expect at least one stack frame to be shared.\n                            // Typically this will be the root most one. However, stack frames may be\n                            // cut off due to maximum stack limits. In this case, one maybe cut off\n                            // earlier than the other. We assume that the sample is longer or the same\n                            // and there for cut off earlier. So we should find the root most frame in\n                            // the sample somewhere in the control.\n                            c--;\n                        }\n                    }\n                    for(; s >= 1 && c >= 0; s--, c--){\n                        // Next we find the first one that isn't the same which should be the\n                        // frame that called our sample function and the control.\n                        if (sampleLines[s] !== controlLines[c]) {\n                            // In V8, the first line is describing the message but other VMs don't.\n                            // If we're about to return the first line, and the control is also on the same\n                            // line, that's a pretty good indicator that our sample threw at same line as\n                            // the control. I.e. before we entered the sample frame. So we ignore this result.\n                            // This can happen if you passed a class to function component, or non-function.\n                            if (s !== 1 || c !== 1) {\n                                do {\n                                    s--;\n                                    c--; // We may still have similar intermediate frames from the construct call.\n                                    // The next one that isn't the same should be our match though.\n                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                        // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                        var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                        // but we have a user-provided \"displayName\"\n                                        // splice it in to make the stack more readable.\n                                        if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                            _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                        }\n                                        if (true) {\n                                            if (typeof fn === \"function\") {\n                                                componentFrameCache.set(fn, _frame);\n                                            }\n                                        } // Return the line we found.\n                                        return _frame;\n                                    }\n                                }while (s >= 1 && c >= 0);\n                            }\n                            break;\n                        }\n                    }\n                }\n            } finally{\n                reentry = false;\n                {\n                    ReactCurrentDispatcher.current = previousDispatcher;\n                    reenableLogs();\n                }\n                Error.prepareStackTrace = previousPrepareStackTrace;\n            } // Fallback to just using the name if we couldn't make it throw.\n            var name = fn ? fn.displayName || fn.name : \"\";\n            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n            {\n                if (typeof fn === \"function\") {\n                    componentFrameCache.set(fn, syntheticFrame);\n                }\n            }\n            return syntheticFrame;\n        }\n        function describeFunctionComponentFrame(fn, source, ownerFn) {\n            {\n                return describeNativeComponentFrame(fn, false);\n            }\n        }\n        function shouldConstruct(Component) {\n            var prototype = Component.prototype;\n            return !!(prototype && prototype.isReactComponent);\n        }\n        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n            if (type == null) {\n                return \"\";\n            }\n            if (typeof type === \"function\") {\n                {\n                    return describeNativeComponentFrame(type, shouldConstruct(type));\n                }\n            }\n            if (typeof type === \"string\") {\n                return describeBuiltInComponentFrame(type);\n            }\n            switch(type){\n                case REACT_SUSPENSE_TYPE:\n                    return describeBuiltInComponentFrame(\"Suspense\");\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return describeBuiltInComponentFrame(\"SuspenseList\");\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_FORWARD_REF_TYPE:\n                        return describeFunctionComponentFrame(type.render);\n                    case REACT_MEMO_TYPE:\n                        // Memo may contain any component type so we recursively resolve it.\n                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                // Lazy may contain any component type so we recursively resolve it.\n                                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                            } catch (x) {}\n                        }\n                }\n            }\n            return \"\";\n        }\n        // $FlowFixMe[method-unbinding]\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        var loggedTypeFailures = {};\n        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n        function setCurrentlyValidatingElement$1(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n                }\n            }\n        }\n        function checkPropTypes(typeSpecs, values, location, componentName, element) {\n            {\n                // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n                var has = Function.call.bind(hasOwnProperty);\n                for(var typeSpecName in typeSpecs){\n                    if (has(typeSpecs, typeSpecName)) {\n                        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                        // fail the render phase where it didn't fail before. So we log it.\n                        // After these have been cleaned up, we'll let them throw.\n                        try {\n                            // This is intentionally an invariant that gets caught. It's the same\n                            // behavior as without this statement except with a better message.\n                            if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                // eslint-disable-next-line react-internal/prod-error-codes\n                                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                err.name = \"Invariant Violation\";\n                                throw err;\n                            }\n                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                        } catch (ex) {\n                            error$1 = ex;\n                        }\n                        if (error$1 && !(error$1 instanceof Error)) {\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                            // Only monitor this failure once because there tends to be a lot of the\n                            // same error.\n                            loggedTypeFailures[error$1.message] = true;\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"Failed %s type: %s\", location, error$1.message);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                    }\n                }\n            }\n        }\n        var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n        function isArray(a) {\n            return isArrayImpl(a);\n        }\n        /*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */ // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function typeName(value) {\n            {\n                // toStringTag is needed for namespaced types like Temporal.Instant\n                var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\"; // $FlowFixMe[incompatible-return]\n                return type;\n            }\n        } // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function willCoercionThrow(value) {\n            {\n                try {\n                    testStringCoercion(value);\n                    return false;\n                } catch (e) {\n                    return true;\n                }\n            }\n        }\n        function testStringCoercion(value) {\n            // If you ended up here by following an exception call stack, here's what's\n            // happened: you supplied an object or symbol value to React (as a prop, key,\n            // DOM attribute, CSS property, string ref, etc.) and when React tried to\n            // coerce it to a string using `'' + value`, an exception was thrown.\n            //\n            // The most common types that will cause this exception are `Symbol` instances\n            // and Temporal objects like `Temporal.Instant`. But any object that has a\n            // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n            // exception. (Library authors do this to prevent users from using built-in\n            // numeric operators like `+` or comparison operators like `>=` because custom\n            // methods are needed to perform accurate arithmetic or comparison.)\n            //\n            // To fix the problem, coerce this object or symbol value to a string before\n            // passing it to React. The most reliable way is usually `String(value)`.\n            //\n            // To find which value is throwing, check the browser or debugger console.\n            // Before this exception was thrown, there should be `console.error` output\n            // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n            // problem and how that type was used: key, atrribute, input value prop, etc.\n            // In most cases, this console output also shows the component and its\n            // ancestor components where the exception happened.\n            //\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            return \"\" + value;\n        }\n        function checkKeyStringCoercion(value) {\n            {\n                if (willCoercionThrow(value)) {\n                    error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before using it here.\", typeName(value));\n                    return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                }\n            }\n        }\n        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n        var RESERVED_PROPS = {\n            key: true,\n            ref: true,\n            __self: true,\n            __source: true\n        };\n        var specialPropKeyWarningShown;\n        var specialPropRefWarningShown;\n        var didWarnAboutStringRefs;\n        {\n            didWarnAboutStringRefs = {};\n        }\n        function hasValidRef(config) {\n            {\n                if (hasOwnProperty.call(config, \"ref\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.ref !== undefined;\n        }\n        function hasValidKey(config) {\n            {\n                if (hasOwnProperty.call(config, \"key\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.key !== undefined;\n        }\n        function warnIfStringRefCannotBeAutoConverted(config, self) {\n            {\n                if (typeof config.ref === \"string\" && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n                    var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n                    if (!didWarnAboutStringRefs[componentName]) {\n                        error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n                        didWarnAboutStringRefs[componentName] = true;\n                    }\n                }\n            }\n        }\n        function defineKeyPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingKey = function() {\n                    if (!specialPropKeyWarningShown) {\n                        specialPropKeyWarningShown = true;\n                        error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingKey.isReactWarning = true;\n                Object.defineProperty(props, \"key\", {\n                    get: warnAboutAccessingKey,\n                    configurable: true\n                });\n            }\n        }\n        function defineRefPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingRef = function() {\n                    if (!specialPropRefWarningShown) {\n                        specialPropRefWarningShown = true;\n                        error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingRef.isReactWarning = true;\n                Object.defineProperty(props, \"ref\", {\n                    get: warnAboutAccessingRef,\n                    configurable: true\n                });\n            }\n        }\n        /**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */ function ReactElement(type, key, ref, self, source, owner, props) {\n            var element = {\n                // This tag allows us to uniquely identify this as a React Element\n                $$typeof: REACT_ELEMENT_TYPE,\n                // Built-in properties that belong on the element\n                type: type,\n                key: key,\n                ref: ref,\n                props: props,\n                // Record the component responsible for creating this element.\n                _owner: owner\n            };\n            {\n                // The validation flag is currently mutative. We put it on\n                // an external backing store so that we can freeze the whole object.\n                // This can be replaced with a WeakMap once they are implemented in\n                // commonly used development environments.\n                element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                // the validation flag non-enumerable (where possible, which should\n                // include every environment we run tests in), so the test framework\n                // ignores it.\n                Object.defineProperty(element._store, \"validated\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: false\n                }); // self and source are DEV only properties.\n                Object.defineProperty(element, \"_self\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: self\n                }); // Two elements created in two different places should be considered\n                // equal for testing purposes and therefore we hide it from enumeration.\n                Object.defineProperty(element, \"_source\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: source\n                });\n                if (Object.freeze) {\n                    Object.freeze(element.props);\n                    Object.freeze(element);\n                }\n            }\n            return element;\n        }\n        /**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */ function jsxDEV$1(type, config, maybeKey, source, self) {\n            {\n                var propName; // Reserved names are extracted\n                var props = {};\n                var key = null;\n                var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n                // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n                // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n                // but as an intermediary step, we will use jsxDEV for everything except\n                // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n                // key is explicitly declared to be undefined or not.\n                if (maybeKey !== undefined) {\n                    {\n                        checkKeyStringCoercion(maybeKey);\n                    }\n                    key = \"\" + maybeKey;\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                }\n                if (hasValidRef(config)) {\n                    ref = config.ref;\n                    warnIfStringRefCannotBeAutoConverted(config, self);\n                } // Remaining properties are added to a new props object\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        props[propName] = config[propName];\n                    }\n                } // Resolve default props\n                if (type && type.defaultProps) {\n                    var defaultProps = type.defaultProps;\n                    for(propName in defaultProps){\n                        if (props[propName] === undefined) {\n                            props[propName] = defaultProps[propName];\n                        }\n                    }\n                }\n                if (key || ref) {\n                    var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                    if (key) {\n                        defineKeyPropWarningGetter(props, displayName);\n                    }\n                    if (ref) {\n                        defineRefPropWarningGetter(props, displayName);\n                    }\n                }\n                return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n            }\n        }\n        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\n        function setCurrentlyValidatingElement(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame.setExtraStackFrame(null);\n                }\n            }\n        }\n        var propTypesMisspellWarningShown;\n        {\n            propTypesMisspellWarningShown = false;\n        }\n        /**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */ function isValidElement(object) {\n            {\n                return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n            }\n        }\n        function getDeclarationErrorAddendum() {\n            {\n                if (ReactCurrentOwner.current) {\n                    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n                    if (name) {\n                        return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                    }\n                }\n                return \"\";\n            }\n        }\n        function getSourceInfoErrorAddendum(source) {\n            {\n                if (source !== undefined) {\n                    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                    var lineNumber = source.lineNumber;\n                    return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n                }\n                return \"\";\n            }\n        }\n        /**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */ var ownerHasKeyUseWarning = {};\n        function getCurrentComponentErrorInfo(parentType) {\n            {\n                var info = getDeclarationErrorAddendum();\n                if (!info) {\n                    var parentName = getComponentNameFromType(parentType);\n                    if (parentName) {\n                        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                    }\n                }\n                return info;\n            }\n        }\n        /**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */ function validateExplicitKey(element, parentType) {\n            {\n                if (!element._store || element._store.validated || element.key != null) {\n                    return;\n                }\n                element._store.validated = true;\n                var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n                if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                    return;\n                }\n                ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n                // property, it may be the creator of the child that's responsible for\n                // assigning it a key.\n                var childOwner = \"\";\n                if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n                    // Give the component that originally created this child.\n                    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n                }\n                setCurrentlyValidatingElement(element);\n                error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                setCurrentlyValidatingElement(null);\n            }\n        }\n        /**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */ function validateChildKeys(node, parentType) {\n            {\n                if (typeof node !== \"object\" || !node) {\n                    return;\n                }\n                if (node.$$typeof === REACT_CLIENT_REFERENCE) ;\n                else if (isArray(node)) {\n                    for(var i = 0; i < node.length; i++){\n                        var child = node[i];\n                        if (isValidElement(child)) {\n                            validateExplicitKey(child, parentType);\n                        }\n                    }\n                } else if (isValidElement(node)) {\n                    // This element was passed in a valid location.\n                    if (node._store) {\n                        node._store.validated = true;\n                    }\n                } else {\n                    var iteratorFn = getIteratorFn(node);\n                    if (typeof iteratorFn === \"function\") {\n                        // Entry iterators used to provide implicit keys,\n                        // but now we print a separate warning for them later.\n                        if (iteratorFn !== node.entries) {\n                            var iterator = iteratorFn.call(node);\n                            var step;\n                            while(!(step = iterator.next()).done){\n                                if (isValidElement(step.value)) {\n                                    validateExplicitKey(step.value, parentType);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */ function validatePropTypes(element) {\n            {\n                var type = element.type;\n                if (type === null || type === undefined || typeof type === \"string\") {\n                    return;\n                }\n                if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n                    return;\n                }\n                var propTypes;\n                if (typeof type === \"function\") {\n                    propTypes = type.propTypes;\n                } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                // Inner props are checked in the reconciler.\n                type.$$typeof === REACT_MEMO_TYPE)) {\n                    propTypes = type.propTypes;\n                } else {\n                    return;\n                }\n                if (propTypes) {\n                    // Intentionally inside to avoid triggering lazy initializers:\n                    var name = getComponentNameFromType(type);\n                    checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                    propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                    var _name = getComponentNameFromType(type);\n                    error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                }\n                if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                    error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                }\n            }\n        }\n        /**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */ function validateFragmentProps(fragment) {\n            {\n                var keys = Object.keys(fragment.props);\n                for(var i = 0; i < keys.length; i++){\n                    var key = keys[i];\n                    if (key !== \"children\" && key !== \"key\") {\n                        setCurrentlyValidatingElement(fragment);\n                        error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                        setCurrentlyValidatingElement(null);\n                        break;\n                    }\n                }\n                if (fragment.ref !== null) {\n                    setCurrentlyValidatingElement(fragment);\n                    error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                    setCurrentlyValidatingElement(null);\n                }\n            }\n        }\n        var didWarnAboutKeySpread = {};\n        function jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n            {\n                var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n                // succeed and there will likely be errors in render.\n                if (!validType) {\n                    var info = \"\";\n                    if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                        info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                    }\n                    var sourceInfo = getSourceInfoErrorAddendum(source);\n                    if (sourceInfo) {\n                        info += sourceInfo;\n                    } else {\n                        info += getDeclarationErrorAddendum();\n                    }\n                    var typeString;\n                    if (type === null) {\n                        typeString = \"null\";\n                    } else if (isArray(type)) {\n                        typeString = \"array\";\n                    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                        typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                        info = \" Did you accidentally export a JSX literal instead of a component?\";\n                    } else {\n                        typeString = typeof type;\n                    }\n                    error(\"React.jsx: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                }\n                var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n                // TODO: Drop this when these are no longer allowed as the type argument.\n                if (element == null) {\n                    return element;\n                } // Skip key warning if the type isn't valid since our key validation logic\n                // doesn't expect a non-string/function type and can throw confusing errors.\n                // We don't want exception behavior to differ between dev and prod.\n                // (Rendering will throw with a helpful message and as soon as the type is\n                // fixed, the key warnings will appear.)\n                if (validType) {\n                    var children = props.children;\n                    if (children !== undefined) {\n                        if (isStaticChildren) {\n                            if (isArray(children)) {\n                                for(var i = 0; i < children.length; i++){\n                                    validateChildKeys(children[i], type);\n                                }\n                                if (Object.freeze) {\n                                    Object.freeze(children);\n                                }\n                            } else {\n                                error(\"React.jsx: Static children should always be an array. \" + \"You are likely explicitly calling React.jsxs or React.jsxDEV. \" + \"Use the Babel transform instead.\");\n                            }\n                        } else {\n                            validateChildKeys(children, type);\n                        }\n                    }\n                }\n                if (hasOwnProperty.call(props, \"key\")) {\n                    var componentName = getComponentNameFromType(type);\n                    var keys = Object.keys(props).filter(function(k) {\n                        return k !== \"key\";\n                    });\n                    var beforeExample = keys.length > 0 ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\" : \"{key: someKey}\";\n                    if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n                        var afterExample = keys.length > 0 ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\";\n                        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + \"  let props = %s;\\n\" + \"  <%s {...props} />\\n\" + \"React keys must be passed directly to JSX without using spread:\\n\" + \"  let props = %s;\\n\" + \"  <%s key={someKey} {...props} />\", beforeExample, componentName, afterExample, componentName);\n                        didWarnAboutKeySpread[componentName + beforeExample] = true;\n                    }\n                }\n                if (type === REACT_FRAGMENT_TYPE) {\n                    validateFragmentProps(element);\n                } else {\n                    validatePropTypes(element);\n                }\n                return element;\n            }\n        } // These two functions exist to still get child warnings in dev\n        var jsxDEV = jsxWithValidation;\n        exports.Fragment = REACT_FRAGMENT_TYPE;\n        exports.jsxDEV = jsxDEV;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsS0FBeUIsRUFBYyxFQUUxQyxNQUFNO0lBQ0xDLDhMQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz9jYTIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOlsicHJvY2VzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/context/index.tsx":
/*!*******************************!*\
  !*** ./app/context/index.tsx ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppWrapper: function() { return /* binding */ AppWrapper; },\n/* harmony export */   useAppContext: function() { return /* binding */ useAppContext; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\"use-client\";\n\nconst AppContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction AppWrapper(param) {\n    let { children } = param;\n    _s();\n    let [nightMode, setNightMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AppContext.Provider, {\n        value: {\n            nightMode,\n            setNightMode\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/app/context/index.tsx\",\n        lineNumber: 11,\n        columnNumber: 9\n    }, this);\n}\n_s(AppWrapper, \"gHgUca7JAY0SyrraqAusjcoUI8E=\");\n_c = AppWrapper;\nfunction useAppContext() {\n    _s1();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AppContext);\n}\n_s1(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppWrapper\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb250ZXh0L2luZGV4LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDbUU7QUFFbkUsTUFBTUksMkJBQWFILG9EQUFhQSxDQUFNSTtBQUUvQixTQUFTQyxXQUFXLEtBQTBDO1FBQTFDLEVBQUNDLFFBQVEsRUFBaUMsR0FBMUM7O0lBRXZCLElBQUksQ0FBRUMsV0FBV0MsYUFBYyxHQUFHTiwrQ0FBUUEsQ0FBVTtJQUVwRCxxQkFDSSw4REFBQ0MsV0FBV00sUUFBUTtRQUFFQyxPQUFTO1lBQUVIO1lBQVdDO1FBQWE7a0JBQ3BERjs7Ozs7O0FBR2I7R0FUZ0JEO0tBQUFBO0FBV1QsU0FBU007O0lBRVosT0FBT1YsaURBQVVBLENBQUNFO0FBRXRCO0lBSmdCUSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvY29udGV4dC9pbmRleC50c3g/MzA4NiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlLWNsaWVudCdcbmltcG9ydCBSZWFjdCwgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuXG5jb25zdCBBcHBDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxhbnk+KHVuZGVmaW5lZClcblxuZXhwb3J0IGZ1bmN0aW9uIEFwcFdyYXBwZXIoe2NoaWxkcmVufSA6IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KXtcblxuICAgIGxldCBbIG5pZ2h0TW9kZSwgc2V0TmlnaHRNb2RlIF0gPSB1c2VTdGF0ZTxib29sZWFuPihmYWxzZSlcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxBcHBDb250ZXh0LlByb3ZpZGVyICB2YWx1ZSA9IHt7IG5pZ2h0TW9kZSwgc2V0TmlnaHRNb2RlIH19PlxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L0FwcENvbnRleHQuUHJvdmlkZXI+XG4gICAgKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlQXBwQ29udGV4dCAoKSB7XG5cbiAgICByZXR1cm4gdXNlQ29udGV4dChBcHBDb250ZXh0KVxuXG59Il0sIm5hbWVzIjpbIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VTdGF0ZSIsIkFwcENvbnRleHQiLCJ1bmRlZmluZWQiLCJBcHBXcmFwcGVyIiwiY2hpbGRyZW4iLCJuaWdodE1vZGUiLCJzZXROaWdodE1vZGUiLCJQcm92aWRlciIsInZhbHVlIiwidXNlQXBwQ29udGV4dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/context/index.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! gsap */ \"(app-pages-browser)/./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_trial_ScrollTrigger__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! gsap-trial/ScrollTrigger */ \"(app-pages-browser)/./node_modules/gsap-trial/ScrollTrigger.js\");\n/* harmony import */ var gsap_trial_ScrollSmoother__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! gsap-trial/ScrollSmoother */ \"(app-pages-browser)/./node_modules/gsap-trial/ScrollSmoother.js\");\n/* harmony import */ var _gsap_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @gsap/react */ \"(app-pages-browser)/./node_modules/@gsap/react/src/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _appearance_nightskystar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../appearance/nightskystar */ \"(app-pages-browser)/./appearance/nightskystar.ts\");\n/* harmony import */ var _components_sections_first__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/sections/first */ \"(app-pages-browser)/./components/sections/first.tsx\");\n/* harmony import */ var _components_sections_second__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/sections/second */ \"(app-pages-browser)/./components/sections/second.tsx\");\n/* harmony import */ var _components_sections_third__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/sections/third */ \"(app-pages-browser)/./components/sections/third.tsx\");\n/* harmony import */ var _components_sections_forth__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/sections/forth */ \"(app-pages-browser)/./components/sections/forth.tsx\");\n/* harmony import */ var _components_navbar_hamburgerMenu__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/navbar/hamburgerMenu */ \"(app-pages-browser)/./components/navbar/hamburgerMenu.tsx\");\n/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./context */ \"(app-pages-browser)/./app/context/index.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\ngsap__WEBPACK_IMPORTED_MODULE_10__.gsap.registerPlugin(gsap_trial_ScrollTrigger__WEBPACK_IMPORTED_MODULE_11__.ScrollTrigger, gsap_trial_ScrollSmoother__WEBPACK_IMPORTED_MODULE_12__.ScrollSmoother);\nfunction App() {\n    _s();\n    const main = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)();\n    const smoother = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)();\n    const [darkMode, setDarkMode] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const handleClick = ()=>{\n        setDarkMode(!darkMode);\n    };\n    (0,_gsap_react__WEBPACK_IMPORTED_MODULE_1__.useGSAP)(()=>{\n        smoother.current = gsap_trial_ScrollSmoother__WEBPACK_IMPORTED_MODULE_12__.ScrollSmoother.create({\n            smooth: 0.8,\n            effects: true\n        });\n        gsap_trial_ScrollTrigger__WEBPACK_IMPORTED_MODULE_11__.ScrollTrigger.create({\n            start: \"bottom bottom\",\n            markers: true\n        });\n    }, {\n        scope: main\n    });\n    const { nightMode, setNightMode } = (0,_context__WEBPACK_IMPORTED_MODULE_9__.useAppContext)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                className: \"fixed top-0 w-full z-50\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_navbar_hamburgerMenu__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {}, void 0, false, {\n                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/app/page.tsx\",\n                    lineNumber: 49,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/app/page.tsx\",\n                lineNumber: 48,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"\".concat(nightMode ? \"morningMode\" : \"\"),\n                id: \"smooth-wrapper\",\n                ref: main,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"\".concat(darkMode ? \"night\" : \"morning\"),\n                    id: \"smooth-content\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                            className: \"relative w-screen h-screen\",\n                            id: \"firstSec\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_sections_first__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {}, void 0, false, {\n                                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/app/page.tsx\",\n                                lineNumber: 54,\n                                columnNumber: 17\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/app/page.tsx\",\n                            lineNumber: 53,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                            className: \"relative w-screen h-screen\",\n                            id: \"secondSec\",\n                            children: [\n                                '\"\"',\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_sections_second__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {}, void 0, false, {\n                                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/app/page.tsx\",\n                                    lineNumber: 57,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/app/page.tsx\",\n                            lineNumber: 56,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                            className: \"relative w-screen h-screen\",\n                            id: \"thirdSec\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_sections_third__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {}, void 0, false, {\n                                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/app/page.tsx\",\n                                lineNumber: 60,\n                                columnNumber: 17\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/app/page.tsx\",\n                            lineNumber: 59,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                            className: \"relative w-screen h-screen\",\n                            id: \"forthSec\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_sections_forth__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {}, void 0, false, {\n                                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/app/page.tsx\",\n                                lineNumber: 63,\n                                columnNumber: 17\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/app/page.tsx\",\n                            lineNumber: 62,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/app/page.tsx\",\n                    lineNumber: 52,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/app/page.tsx\",\n                lineNumber: 51,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_appearance_nightskystar__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/app/page.tsx\",\n                lineNumber: 67,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(App, \"DwWqvB9ZkAyHh19nZnKedMnVMCU=\", false, function() {\n    return [\n        _gsap_react__WEBPACK_IMPORTED_MODULE_1__.useGSAP,\n        _context__WEBPACK_IMPORTED_MODULE_9__.useAppContext\n    ];\n});\n_c = App;\n/* harmony default export */ __webpack_exports__[\"default\"] = (App);\nvar _c;\n$RefreshReg$(_c, \"App\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9wYWdlLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUU0QjtBQUM2QjtBQUNFO0FBQ3JCO0FBQ1U7QUFDRTtBQUNEO0FBQ0U7QUFDRjtBQUNBO0FBQ2E7QUFDcEI7QUFHMUNBLHVDQUFJQSxDQUFDYyxjQUFjLENBQUNiLG9FQUFhQSxFQUFFQyxzRUFBY0E7QUFFakQsU0FBU2E7O0lBRVAsTUFBTUMsT0FBWVgsNkNBQU1BO0lBQ3hCLE1BQU1ZLFdBQWdCWiw2Q0FBTUE7SUFFNUIsTUFBTSxDQUFFYSxVQUFVQyxZQUFhLEdBQUdiLCtDQUFRQSxDQUFVO0lBRXBELE1BQU1jLGNBQWM7UUFDbEJELFlBQVksQ0FBQ0Q7SUFDZjtJQUVDZixvREFBT0EsQ0FDTDtRQUNFYyxTQUFTSSxPQUFPLEdBQUduQixzRUFBY0EsQ0FBQ29CLE1BQU0sQ0FBQztZQUN2Q0MsUUFBUTtZQUNSQyxTQUFTO1FBQ1g7UUFDQXZCLG9FQUFhQSxDQUFDcUIsTUFBTSxDQUFDO1lBQ25CRyxPQUFPO1lBQ1BDLFNBQVM7UUFDWDtJQUNGLEdBQ0E7UUFBRUMsT0FBT1g7SUFBSztJQUdqQixNQUFNLEVBQUVZLFNBQVMsRUFBRUMsWUFBWSxFQUFFLEdBQUdoQix1REFBYUE7SUFFakQscUJBQ0U7OzBCQUNJLDhEQUFDaUI7Z0JBQVFDLFdBQVU7MEJBQ2pCLDRFQUFDbkIsd0VBQWFBOzs7Ozs7Ozs7OzBCQUVoQiw4REFBQ29CO2dCQUFJRCxXQUFZLEdBQWtDLE9BQS9CSCxZQUFZLGdCQUFnQjtnQkFBT0ssSUFBRztnQkFBa0JDLEtBQUtsQjswQkFDL0UsNEVBQUNnQjtvQkFBSUQsV0FBVyxHQUFrQyxPQUEvQmIsV0FBVyxVQUFVO29CQUFhZSxJQUFHOztzQ0FDcEQsOERBQUNIOzRCQUFRQyxXQUFVOzRCQUE2QkUsSUFBRztzQ0FDakQsNEVBQUN6QixrRUFBS0E7Ozs7Ozs7Ozs7c0NBRVIsOERBQUNzQjs0QkFBUUMsV0FBVTs0QkFBNkJFLElBQUc7O2dDQUFZOzhDQUM3RCw4REFBQ3hCLG1FQUFNQTs7Ozs7Ozs7Ozs7c0NBRVQsOERBQUNxQjs0QkFBUUMsV0FBVTs0QkFBNkJFLElBQUc7c0NBQ2pELDRFQUFDdkIsa0VBQUtBOzs7Ozs7Ozs7O3NDQUVSLDhEQUFDb0I7NEJBQVFDLFdBQVU7NEJBQTZCRSxJQUFHO3NDQUNqRCw0RUFBQ3RCLGtFQUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUloQiw4REFBQ0osZ0VBQVFBOzs7Ozs7O0FBR2Y7R0FuRFNROztRQVdOWixnREFBT0E7UUFjNEJVLG1EQUFhQTs7O0tBekIxQ0U7QUFvRFQsK0RBQWVBLEdBQUdBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL3BhZ2UudHN4Pzc2MDMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXG5cbmltcG9ydCB7IGdzYXAgfSBmcm9tICdnc2FwJztcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tICdnc2FwLXRyaWFsL1Njcm9sbFRyaWdnZXInO1xuaW1wb3J0IHsgU2Nyb2xsU21vb3RoZXIgfSBmcm9tICdnc2FwLXRyaWFsL1Njcm9sbFNtb290aGVyJztcbmltcG9ydCB7IHVzZUdTQVAgfSBmcm9tICdAZ3NhcC9yZWFjdCc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBOaWdodFNreSBmcm9tICcuLi9hcHBlYXJhbmNlL25pZ2h0c2t5c3Rhcic7XG5pbXBvcnQgRmlyc3QgZnJvbSAnLi4vY29tcG9uZW50cy9zZWN0aW9ucy9maXJzdCc7XG5pbXBvcnQgU2Vjb25kIGZyb20gJy4uL2NvbXBvbmVudHMvc2VjdGlvbnMvc2Vjb25kJztcbmltcG9ydCBUaGlyZCBmcm9tICcuLi9jb21wb25lbnRzL3NlY3Rpb25zL3RoaXJkJztcbmltcG9ydCBGb3J0aCBmcm9tICcuLi9jb21wb25lbnRzL3NlY3Rpb25zL2ZvcnRoJztcbmltcG9ydCBIYW1idXJnZXJNZW51IGZyb20gJy4uL2NvbXBvbmVudHMvbmF2YmFyL2hhbWJ1cmdlck1lbnUnXG5pbXBvcnQgeyB1c2VBcHBDb250ZXh0IH0gZnJvbSAnLi9jb250ZXh0JztcblxuXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIsIFNjcm9sbFNtb290aGVyKTtcblxuZnVuY3Rpb24gQXBwKCkge1xuXG4gIGNvbnN0IG1haW46IGFueSA9IHVzZVJlZigpOyBcbiAgY29uc3Qgc21vb3RoZXI6IGFueSA9IHVzZVJlZigpO1xuXG4gIGNvbnN0IFsgZGFya01vZGUsIHNldERhcmtNb2RlIF0gPSB1c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XG5cbiAgY29uc3QgaGFuZGxlQ2xpY2sgPSAoKSA9PiB7XG4gICAgc2V0RGFya01vZGUoIWRhcmtNb2RlKVxuICB9O1xuIFxuICAgdXNlR1NBUChcbiAgICAgKCkgPT4ge1xuICAgICAgIHNtb290aGVyLmN1cnJlbnQgPSBTY3JvbGxTbW9vdGhlci5jcmVhdGUoe1xuICAgICAgICAgc21vb3RoOiAwLjgsIFxuICAgICAgICAgZWZmZWN0czogdHJ1ZVxuICAgICAgIH0pO1xuICAgICAgIFNjcm9sbFRyaWdnZXIuY3JlYXRlKHtcbiAgICAgICAgIHN0YXJ0OiAnYm90dG9tIGJvdHRvbScsXG4gICAgICAgICBtYXJrZXJzOiB0cnVlXG4gICAgICAgfSk7XG4gICAgIH0sXG4gICAgIHsgc2NvcGU6IG1haW4gfVxuICAgKTtcblxuICBjb25zdCB7IG5pZ2h0TW9kZSwgc2V0TmlnaHRNb2RlIH0gPSB1c2VBcHBDb250ZXh0KCkgXG5cbiAgcmV0dXJuKFxuICAgIDw+XG4gICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT0nZml4ZWQgdG9wLTAgdy1mdWxsIHotNTAnPlxuICAgICAgICAgIDxIYW1idXJnZXJNZW51Lz5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZSA9e2Ake25pZ2h0TW9kZSA/ICdtb3JuaW5nTW9kZScgOiAnJ31gfSAgaWQ9J3Ntb290aC13cmFwcGVyJyAgcmVmPXttYWlufT5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YCR7ZGFya01vZGUgPyAnbmlnaHQnIDogJ21vcm5pbmcnfWB9IGlkPSdzbW9vdGgtY29udGVudCcgPlxuICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9J3JlbGF0aXZlIHctc2NyZWVuIGgtc2NyZWVuJyBpZD0nZmlyc3RTZWMnPlxuICAgICAgICAgICAgICAgIDxGaXJzdCAvPlxuICAgICAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT0ncmVsYXRpdmUgdy1zY3JlZW4gaC1zY3JlZW4nIGlkPSdzZWNvbmRTZWMnPlwiXCJcbiAgICAgICAgICAgICAgICA8U2Vjb25kIC8+XG4gICAgICAgICAgICAgIDwvc2VjdGlvbj5cbiAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPSdyZWxhdGl2ZSB3LXNjcmVlbiBoLXNjcmVlbicgaWQ9J3RoaXJkU2VjJz5cbiAgICAgICAgICAgICAgICA8VGhpcmQgLz5cbiAgICAgICAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9J3JlbGF0aXZlIHctc2NyZWVuIGgtc2NyZWVuJyBpZD0nZm9ydGhTZWMnPlxuICAgICAgICAgICAgICAgIDxGb3J0aCAvPlxuICAgICAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPE5pZ2h0U2t5IC8+XG4gICAgPC8+XG4gICk7XG59XG5leHBvcnQgZGVmYXVsdCBBcHA7XG4iXSwibmFtZXMiOlsiZ3NhcCIsIlNjcm9sbFRyaWdnZXIiLCJTY3JvbGxTbW9vdGhlciIsInVzZUdTQVAiLCJSZWFjdCIsInVzZVJlZiIsInVzZVN0YXRlIiwiTmlnaHRTa3kiLCJGaXJzdCIsIlNlY29uZCIsIlRoaXJkIiwiRm9ydGgiLCJIYW1idXJnZXJNZW51IiwidXNlQXBwQ29udGV4dCIsInJlZ2lzdGVyUGx1Z2luIiwiQXBwIiwibWFpbiIsInNtb290aGVyIiwiZGFya01vZGUiLCJzZXREYXJrTW9kZSIsImhhbmRsZUNsaWNrIiwiY3VycmVudCIsImNyZWF0ZSIsInNtb290aCIsImVmZmVjdHMiLCJzdGFydCIsIm1hcmtlcnMiLCJzY29wZSIsIm5pZ2h0TW9kZSIsInNldE5pZ2h0TW9kZSIsInNlY3Rpb24iLCJjbGFzc05hbWUiLCJkaXYiLCJpZCIsInJlZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./appearance/nightskystar.ts":
/*!************************************!*\
  !*** ./appearance/nightskystar.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nconst NightSky = ()=>{\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const createStars = ()=>{\n            const stars = 500;\n            const body = document.querySelector(\"body\");\n            if (!body) return;\n            for(let i = 0; i < stars; i++){\n                const star = document.createElement(\"div\");\n                star.className = \"star\";\n                const duration = Math.random() * 5 + 5;\n                star.style.left = \"\".concat(Math.random() * 100, \"vw\");\n                star.style.animation = \"twinkle \".concat(duration, \"s infinite, moveStar 60s infinite\");\n                star.style.top = \"\".concat(Math.random() * 400, \"vh\");\n                body.appendChild(star);\n            }\n        };\n        createStars();\n    }, []);\n    return null;\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (NightSky);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcGVhcmFuY2UvbmlnaHRza3lzdGFyLnRzIiwibWFwcGluZ3MiOiI7Ozs2REFDa0M7QUFFbEMsTUFBTUMsV0FBcUI7SUFDekJELGdEQUFTQSxDQUFDO1FBQ1IsTUFBTUUsY0FBYztZQUNsQixNQUFNQyxRQUFnQjtZQUN0QixNQUFNQyxPQUEyQkMsU0FBU0MsYUFBYSxDQUFDO1lBQ3hELElBQUksQ0FBQ0YsTUFBTTtZQUNYLElBQUssSUFBSUcsSUFBSSxHQUFHQSxJQUFJSixPQUFPSSxJQUFLO2dCQUM5QixNQUFNQyxPQUF1QkgsU0FBU0ksYUFBYSxDQUFDO2dCQUNwREQsS0FBS0UsU0FBUyxHQUFHO2dCQUNqQixNQUFNQyxXQUFtQkMsS0FBS0MsTUFBTSxLQUFLLElBQUk7Z0JBQzdDTCxLQUFLTSxLQUFLLENBQUNDLElBQUksR0FBRyxHQUF1QixPQUFwQkgsS0FBS0MsTUFBTSxLQUFLLEtBQUk7Z0JBQ3pDTCxLQUFLTSxLQUFLLENBQUNFLFNBQVMsR0FBRyxXQUFvQixPQUFUTCxVQUFTO2dCQUMzQ0gsS0FBS00sS0FBSyxDQUFDRyxHQUFHLEdBQUcsR0FBdUIsT0FBcEJMLEtBQUtDLE1BQU0sS0FBSyxLQUFJO2dCQUN4Q1QsS0FBS2MsV0FBVyxDQUFDVjtZQUNuQjtRQUNGO1FBQ0FOO0lBQ0YsR0FBRyxFQUFFO0lBRUwsT0FBTztBQUNUO0FBRUEsK0RBQWVELFFBQVFBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwZWFyYW5jZS9uaWdodHNreXN0YXIudHM/OTQ0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5pbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IE5pZ2h0U2t5OiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBjcmVhdGVTdGFycyA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHN0YXJzOiBudW1iZXIgPSA1MDA7XG4gICAgICBjb25zdCBib2R5OiBIVE1MRWxlbWVudCB8IG51bGwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5Jyk7XG4gICAgICBpZiAoIWJvZHkpIHJldHVybjtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RhcnM7IGkrKykge1xuICAgICAgICBjb25zdCBzdGFyOiBIVE1MRGl2RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBzdGFyLmNsYXNzTmFtZSA9ICdzdGFyJztcbiAgICAgICAgY29uc3QgZHVyYXRpb246IG51bWJlciA9IE1hdGgucmFuZG9tKCkgKiA1ICsgNTtcbiAgICAgICAgc3Rhci5zdHlsZS5sZWZ0ID0gYCR7TWF0aC5yYW5kb20oKSAqIDEwMH12d2A7XG4gICAgICAgIHN0YXIuc3R5bGUuYW5pbWF0aW9uID0gYHR3aW5rbGUgJHtkdXJhdGlvbn1zIGluZmluaXRlLCBtb3ZlU3RhciA2MHMgaW5maW5pdGVgO1xuICAgICAgICBzdGFyLnN0eWxlLnRvcCA9IGAke01hdGgucmFuZG9tKCkgKiA0MDB9dmhgO1xuICAgICAgICBib2R5LmFwcGVuZENoaWxkKHN0YXIpO1xuICAgICAgfVxuICAgIH07XG4gICAgY3JlYXRlU3RhcnMoKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiBudWxsO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTmlnaHRTa3k7XG5cbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJOaWdodFNreSIsImNyZWF0ZVN0YXJzIiwic3RhcnMiLCJib2R5IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiaSIsInN0YXIiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwiZHVyYXRpb24iLCJNYXRoIiwicmFuZG9tIiwic3R5bGUiLCJsZWZ0IiwiYW5pbWF0aW9uIiwidG9wIiwiYXBwZW5kQ2hpbGQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./appearance/nightskystar.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/navbar/hamburgerMenu.tsx":
/*!*********************************************!*\
  !*** ./components/navbar/hamburgerMenu.tsx ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n// components/HamburgerMenu.tsx\n\nvar _s = $RefreshSig$();\n\nconst HamburgerMenu = ()=>{\n    _s();\n    const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [clicked, setClicked] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const handleClick = ()=>{\n        setIsOpen(!isOpen);\n        setClicked(true);\n        setTimeout(()=>{\n            setClicked(false);\n        }, 500);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative inline-block text-left\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"z-50\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    type: \"button\",\n                    className: \"inline-flex justify-center m-8 w-12 h-12 p-2 text-white-800 transition transform border border-transparent hover:text-white-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-white-500 hover:scale-125 focus-visible:ring-opacity-50\",\n                    \"aria-expanded\": isOpen ? \"true\" : \"false\",\n                    onClick: handleClick,\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            className: \"w-6 h-6 \".concat(isOpen ? \"hidden\" : \"block\", \" text-white\"),\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            fill: \"none\",\n                            viewBox: \"0 0 24 24\",\n                            stroke: \"currentColor\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                strokeLinecap: \"round\",\n                                strokeLinejoin: \"round\",\n                                strokeWidth: \"2\",\n                                d: \"M4 6h16M4 12h16m-7 6h7\"\n                            }, void 0, false, {\n                                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                                lineNumber: 32,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                            lineNumber: 25,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            className: \"w-6 h-6 \".concat(isOpen ? \"block\" : \"hidden\", \" text-white\"),\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            fill: \"none\",\n                            viewBox: \"0 0 24 24\",\n                            stroke: \"currentColor\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                strokeLinecap: \"round\",\n                                strokeLinejoin: \"round\",\n                                strokeWidth: \"2\",\n                                d: \"M6 18L18 6M6 6l12 12\"\n                            }, void 0, false, {\n                                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                                lineNumber: 46,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                            lineNumber: 39,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                    lineNumber: 19,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                lineNumber: 18,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"\".concat(isOpen ? \"block\" : \"hidden\", \" origin-top-right absolute left-0 right-0  mt-2 w-6 rounded-md shadow-lg bg-opacity-50 backdrop-blur-lg ring-opacity-5 focus:outline-none transition-all \"),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"absolute top-[-2rem] left-[3.5rem] w-1/2 h-full flex justify-center items-center\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"relative w-8 h-8 rounded-full\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                            className: \"absolute inset-0 flex flex-col justify-center items-center list-none p-0 m-0\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: \"\".concat(clicked ? \"w-0 h-0 before:w-0 before:h-0\" : \"w-[1.5rem] h-[1.5rem] before:w-[50px] before:h-[50px]\", \" transform transition-all translate-x-0 translate-y-[5.7rem] before:content-[''] before:bg-slate-300 before:absolute before:top-[-12px] before:left-[-12px] before:z-0 before:rounded-full before:blur-sm before:opacity-30\"),\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                        href: \"#\",\n                                        className: \"rounded-full flex justify-center items-center text-white-800 transform transition-all \",\n                                        role: \"menuitem\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                            xmlns: \"http://www.w3.org/2000/svg\",\n                                            fill: \"none\",\n                                            viewBox: \"0 0 24 24\",\n                                            \"stroke-width\": \"1.5\",\n                                            stroke: \"currentColor\",\n                                            className: \"w-[1.6rem] h-[1.6rem] before:content-[''] before:w-8 before:h-8 before:blur-sm before:opacity-40 before:rounded-full text-white transform transition-all hover:scale-125\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                \"stroke-linecap\": \"round\",\n                                                \"stroke-linejoin\": \"round\",\n                                                d: \"M12 9v3.75m9-.75a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 3.75h.008v.008H12v-.008Z\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                                                lineNumber: 69,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                                            lineNumber: 68,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                                        lineNumber: 63,\n                                        columnNumber: 17\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                                    lineNumber: 62,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: \"\".concat(clicked ? \"w-0 h-0 before:w-0 before:h-0\" : \"w-[1.6rem] h-[1.6rem] before:w-[50px] before:h-[50px]\", \" transform transition-all translate-x-[5.7rem] translate-y-[-2rem] before:content-[''] before:bg-slate-300 before:absolute before:top-[-12px] before:left-[-12px] before:z-0 before:rounded-full before:blur-sm before:opacity-30\"),\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                        href: \"#\",\n                                        className: \"rounded-full flex justify-center items-center text-white-800 transform transition-all \",\n                                        role: \"menuitem\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                            xmlns: \"http://www.w3.org/2000/svg\",\n                                            fill: \"none\",\n                                            viewBox: \"0 0 24 24\",\n                                            \"stroke-width\": \"1.5\",\n                                            stroke: \"currentColor\",\n                                            className: \"w-[1.6rem] h-[1.6rem] text-white transform transition-all hover:scale-125\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                \"stroke-linecap\": \"round\",\n                                                \"stroke-linejoin\": \"round\",\n                                                d: \"M12 3v2.25m6.364.386-1.591 1.591M21 12h-2.25m-.386 6.364-1.591-1.591M12 18.75V21m-4.773-4.227-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0Z\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                                                lineNumber: 80,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                                            lineNumber: 79,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                                        lineNumber: 74,\n                                        columnNumber: 17\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                                    lineNumber: 73,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: \"\".concat(clicked ? \"w-0 h-0 before:w-0 before:h-0\" : \"w-[1.6rem] h-[1.6rem] before:w-[50px] before:h-[50px]\", \" transform transition-all translate-x-[4.5rem] translate-y-[0.8rem] before:content-[''] before:bg-slate-300 before:absolute before:top-[-12px] before:left-[-12px] before:z-0 before:rounded-full before:blur-sm before:opacity-30\"),\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                        href: \"#\",\n                                        className: \"rounded-full flex justify-center items-center text-white-800 transform transition-all \",\n                                        role: \"menuitem\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                            xmlns: \"http://www.w3.org/2000/svg\",\n                                            fill: \"none\",\n                                            viewBox: \"0 0 24 24\",\n                                            \"stroke-width\": \"1.5\",\n                                            stroke: \"currentColor\",\n                                            className: \"w-[1.5rem] h-[1.5rem] transform transition-all text-white hover:scale-125\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                \"stroke-linecap\": \"round\",\n                                                \"stroke-linejoin\": \"round\",\n                                                d: \"M21.75 9v.906a2.25 2.25 0 0 1-1.183 1.981l-6.478 3.488M2.25 9v.906a2.25 2.25 0 0 0 1.183 1.981l6.478 3.488m8.839 2.51-4.66-2.51m0 0-1.023-.55a2.25 2.25 0 0 0-2.134 0l-1.022.55m0 0-4.661 2.51m16.5 1.615a2.25 2.25 0 0 1-2.25 2.25h-15a2.25 2.25 0 0 1-2.25-2.25V8.844a2.25 2.25 0 0 1 1.183-1.981l7.5-4.039a2.25 2.25 0 0 1 2.134 0l7.5 4.039a2.25 2.25 0 0 1 1.183 1.98V19.5Z\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                                                lineNumber: 91,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                                            lineNumber: 90,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                                        lineNumber: 85,\n                                        columnNumber: 17\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                                    lineNumber: 84,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                            lineNumber: 61,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                        lineNumber: 60,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                    lineNumber: 59,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n                lineNumber: 56,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/navbar/hamburgerMenu.tsx\",\n        lineNumber: 17,\n        columnNumber: 5\n    }, undefined);\n};\n_s(HamburgerMenu, \"0b+XRcur7L8aqzZSfwSuVqyx600=\");\n_c = HamburgerMenu;\n/* harmony default export */ __webpack_exports__[\"default\"] = (HamburgerMenu);\nvar _c;\n$RefreshReg$(_c, \"HamburgerMenu\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/navbar/hamburgerMenu.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/sections/first.tsx":
/*!***************************************!*\
  !*** ./components/sections/first.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _svg_firstSoulSVG__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../svg/firstSoulSVG */ \"(app-pages-browser)/./components/svg/firstSoulSVG.tsx\");\n\n\nconst First = ()=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_svg_firstSoulSVG__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/sections/first.tsx\",\n                lineNumber: 7,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-2xl text-center absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    children: \"Knowing these rules is not enough; you must enforce and abide by them too. It is easy to follow these rules when working alone on a project, but when working in a team or on an external project, it is a good idea to devise ways to check if these rules are followed to reduce the chance of introducing bugs into the code.\"\n                }, void 0, false, {\n                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/sections/first.tsx\",\n                    lineNumber: 9,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/sections/first.tsx\",\n                lineNumber: 8,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n_c = First;\n/* harmony default export */ __webpack_exports__[\"default\"] = (First);\nvar _c;\n$RefreshReg$(_c, \"First\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvc2VjdGlvbnMvZmlyc3QudHN4IiwibWFwcGluZ3MiOiI7Ozs7QUFDOEM7QUFFOUMsTUFBTUMsUUFBUTtJQUNaLHFCQUNFOzswQkFDRSw4REFBQ0QseURBQVlBOzs7OzswQkFDYiw4REFBQ0U7Z0JBQUlDLFdBQVU7MEJBQ2IsNEVBQUNDOzhCQUFHOzs7Ozs7Ozs7Ozs7O0FBSVo7S0FUTUg7QUFXTiwrREFBZUEsS0FBS0EsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL3NlY3Rpb25zL2ZpcnN0LnRzeD85OTU0Il0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IEZpcnN0U291bFNWRyBmcm9tICcuLi9zdmcvZmlyc3RTb3VsU1ZHJ1xuXG5jb25zdCBGaXJzdCA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8PiBcbiAgICAgIDxGaXJzdFNvdWxTVkcgLz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPSd0ZXh0LTJ4bCB0ZXh0LWNlbnRlciBhYnNvbHV0ZSB0b3AtMS8yIGxlZnQtMS8yIHRyYW5zZm9ybSAtdHJhbnNsYXRlLXgtMS8yIC10cmFuc2xhdGUteS0xLzIgdGV4dC13aGl0ZSc+XG4gICAgICAgIDxwID5Lbm93aW5nIHRoZXNlIHJ1bGVzIGlzIG5vdCBlbm91Z2g7IHlvdSBtdXN0IGVuZm9yY2UgYW5kIGFiaWRlIGJ5IHRoZW0gdG9vLiBJdCBpcyBlYXN5IHRvIGZvbGxvdyB0aGVzZSBydWxlcyB3aGVuIHdvcmtpbmcgYWxvbmUgb24gYSBwcm9qZWN0LCBidXQgd2hlbiB3b3JraW5nIGluIGEgdGVhbSBvciBvbiBhbiBleHRlcm5hbCBwcm9qZWN0LCBpdCBpcyBhIGdvb2QgaWRlYSB0byBkZXZpc2Ugd2F5cyB0byBjaGVjayBpZiB0aGVzZSBydWxlcyBhcmUgZm9sbG93ZWQgdG8gcmVkdWNlIHRoZSBjaGFuY2Ugb2YgaW50cm9kdWNpbmcgYnVncyBpbnRvIHRoZSBjb2RlLjwvcD5cbiAgICAgIDwvZGl2PlxuICAgIDwvPlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IEZpcnN0XG5cbiJdLCJuYW1lcyI6WyJGaXJzdFNvdWxTVkciLCJGaXJzdCIsImRpdiIsImNsYXNzTmFtZSIsInAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/sections/first.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/sections/forth.tsx":
/*!***************************************!*\
  !*** ./components/sections/forth.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _svg_forthSoulSVG__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../svg/forthSoulSVG */ \"(app-pages-browser)/./components/svg/forthSoulSVG.tsx\");\n\n\nconst Forth = ()=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_svg_forthSoulSVG__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/sections/forth.tsx\",\n                lineNumber: 6,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-8xl absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-20 text-black\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    children: \"Forth\"\n                }, void 0, false, {\n                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/sections/forth.tsx\",\n                    lineNumber: 8,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/sections/forth.tsx\",\n                lineNumber: 7,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n_c = Forth;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Forth);\nvar _c;\n$RefreshReg$(_c, \"Forth\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvc2VjdGlvbnMvZm9ydGgudHN4IiwibWFwcGluZ3MiOiI7Ozs7QUFBOEM7QUFFOUMsTUFBTUMsUUFBUTtJQUNaLHFCQUNFOzswQkFDRSw4REFBQ0QseURBQVlBOzs7OzswQkFDYiw4REFBQ0U7Z0JBQUlDLFdBQVU7MEJBQ2IsNEVBQUNDOzhCQUFHOzs7Ozs7Ozs7Ozs7O0FBSVo7S0FUTUg7QUFVTiwrREFBZUEsS0FBS0EsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL3NlY3Rpb25zL2ZvcnRoLnRzeD80NjQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBGb3J0aFNvdWxTVkcgZnJvbSAnLi4vc3ZnL2ZvcnRoU291bFNWRydcblxuY29uc3QgRm9ydGggPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxGb3J0aFNvdWxTVkcgLz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPSd0ZXh0LTh4bCBhYnNvbHV0ZSB0b3AtMS8yIGxlZnQtMS8yIHRyYW5zZm9ybSAtdHJhbnNsYXRlLXgtMS8yIC10cmFuc2xhdGUteS0xLzIgei0yMCB0ZXh0LWJsYWNrJz5cbiAgICAgICAgPHAgPkZvcnRoPC9wPlxuICAgICAgPC9kaXY+XG4gICAgPC8+ICAgIFxuICApXG59XG5leHBvcnQgZGVmYXVsdCBGb3J0aFxuIl0sIm5hbWVzIjpbIkZvcnRoU291bFNWRyIsIkZvcnRoIiwiZGl2IiwiY2xhc3NOYW1lIiwicCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/sections/forth.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/sections/second.tsx":
/*!****************************************!*\
  !*** ./components/sections/second.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _svg_secondSoulSVG__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../svg/secondSoulSVG */ \"(app-pages-browser)/./components/svg/secondSoulSVG.tsx\");\n\n\nconst Second = ()=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-2xl text-center absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-20 text-white\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    children: \"Knowing these rules is not enough; you must enforce and abide by them too. It is easy to follow these rules when working alone on a project, but when working in a team or on an external project, it is a good idea to devise ways to check if these rules are followed to reduce the chance of introducing bugs into the code.\"\n                }, void 0, false, {\n                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/sections/second.tsx\",\n                    lineNumber: 7,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/sections/second.tsx\",\n                lineNumber: 6,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_svg_secondSoulSVG__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/sections/second.tsx\",\n                lineNumber: 9,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n_c = Second;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Second);\nvar _c;\n$RefreshReg$(_c, \"Second\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvc2VjdGlvbnMvc2Vjb25kLnRzeCIsIm1hcHBpbmdzIjoiOzs7O0FBQWlEO0FBRWpELE1BQU1DLFNBQVM7SUFDYixxQkFDRTs7MEJBQ0UsOERBQUNDO2dCQUFJQyxXQUFVOzBCQUNiLDRFQUFDQzs4QkFBRzs7Ozs7Ozs7Ozs7MEJBRU4sOERBQUNKLDBEQUFhQTs7Ozs7OztBQUdwQjtLQVRNQztBQVdOLCtEQUFlQSxNQUFNQSxFQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvc2VjdGlvbnMvc2Vjb25kLnRzeD83Y2Q1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZWNvbmRTb3VsU1ZHIGZyb20gJy4uL3N2Zy9zZWNvbmRTb3VsU1ZHJztcblxuY29uc3QgU2Vjb25kID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT0ndGV4dC0yeGwgdGV4dC1jZW50ZXIgYWJzb2x1dGUgdG9wLTEvMiBsZWZ0LTEvMiB0cmFuc2Zvcm0gLXRyYW5zbGF0ZS14LTEvMiAtdHJhbnNsYXRlLXktMS8yIHotMjAgdGV4dC13aGl0ZSc+XG4gICAgICAgIDxwID5Lbm93aW5nIHRoZXNlIHJ1bGVzIGlzIG5vdCBlbm91Z2g7IHlvdSBtdXN0IGVuZm9yY2UgYW5kIGFiaWRlIGJ5IHRoZW0gdG9vLiBJdCBpcyBlYXN5IHRvIGZvbGxvdyB0aGVzZSBydWxlcyB3aGVuIHdvcmtpbmcgYWxvbmUgb24gYSBwcm9qZWN0LCBidXQgd2hlbiB3b3JraW5nIGluIGEgdGVhbSBvciBvbiBhbiBleHRlcm5hbCBwcm9qZWN0LCBpdCBpcyBhIGdvb2QgaWRlYSB0byBkZXZpc2Ugd2F5cyB0byBjaGVjayBpZiB0aGVzZSBydWxlcyBhcmUgZm9sbG93ZWQgdG8gcmVkdWNlIHRoZSBjaGFuY2Ugb2YgaW50cm9kdWNpbmcgYnVncyBpbnRvIHRoZSBjb2RlLjwvcD5cbiAgICAgIDwvZGl2PlxuICAgICAgPFNlY29uZFNvdWxTVkcgLz5cbiAgICA8Lz5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBTZWNvbmRcbiJdLCJuYW1lcyI6WyJTZWNvbmRTb3VsU1ZHIiwiU2Vjb25kIiwiZGl2IiwiY2xhc3NOYW1lIiwicCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/sections/second.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/sections/third.tsx":
/*!***************************************!*\
  !*** ./components/sections/third.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _svg_thirdSoulSVG__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../svg/thirdSoulSVG */ \"(app-pages-browser)/./components/svg/thirdSoulSVG.tsx\");\n\n\nconst Third = ()=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_svg_thirdSoulSVG__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/sections/third.tsx\",\n                lineNumber: 6,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-8xl absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-20 text-white\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    children: \"Third\"\n                }, void 0, false, {\n                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/sections/third.tsx\",\n                    lineNumber: 8,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/sections/third.tsx\",\n                lineNumber: 7,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n_c = Third;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Third);\nvar _c;\n$RefreshReg$(_c, \"Third\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvc2VjdGlvbnMvdGhpcmQudHN4IiwibWFwcGluZ3MiOiI7Ozs7QUFBK0M7QUFFL0MsTUFBTUMsUUFBUTtJQUNaLHFCQUNFOzswQkFDRSw4REFBQ0QseURBQVlBOzs7OzswQkFDYiw4REFBQ0U7Z0JBQUlDLFdBQVU7MEJBQ2IsNEVBQUNDOzhCQUFHOzs7Ozs7Ozs7Ozs7O0FBSVo7S0FUTUg7QUFXTiwrREFBZUEsS0FBS0EsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL3NlY3Rpb25zL3RoaXJkLnRzeD8yM2VhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUaGlyZFNvdWxTVkcgZnJvbSAnLi4vc3ZnL3RoaXJkU291bFNWRyc7XG5cbmNvbnN0IFRoaXJkID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8VGhpcmRTb3VsU1ZHIC8+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT0ndGV4dC04eGwgYWJzb2x1dGUgdG9wLTEvMiBsZWZ0LTEvMiB0cmFuc2Zvcm0gLXRyYW5zbGF0ZS14LTEvMiAtdHJhbnNsYXRlLXktMS8yIHotMjAgdGV4dC13aGl0ZSc+XG4gICAgICAgIDxwID5UaGlyZDwvcD5cbiAgICAgIDwvZGl2PlxuICAgIDwvPiBcbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBUaGlyZFxuIl0sIm5hbWVzIjpbIlRoaXJkU291bFNWRyIsIlRoaXJkIiwiZGl2IiwiY2xhc3NOYW1lIiwicCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/sections/third.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/svg/firstSoulSVG.tsx":
/*!*****************************************!*\
  !*** ./components/svg/firstSoulSVG.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _hook_useFirstSoulRender__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../hook/useFirstSoulRender */ \"(app-pages-browser)/./hook/useFirstSoulRender.ts\");\n\nvar _s = $RefreshSig$();\n\nconst FirstSoulSVG = ()=>{\n    _s();\n    const tl = (0,_hook_useFirstSoulRender__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                id: \"svg\",\n                className: \"soul1 absolute\",\n                width: \"1728\",\n                height: \"424\",\n                viewBox: \"0 0 1729 424\",\n                fill: \"none\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                    id: \"path1\",\n                    className: \"block m-auto opacity-0\",\n                    d: \"M1727.82 233.097C1196.32 769.597 0.999977 1.00001 0.999977 1.00001\",\n                    stroke: \"black\"\n                }, void 0, false, {\n                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                    lineNumber: 10,\n                    columnNumber: 13\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                lineNumber: 8,\n                columnNumber: 13\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                id: \"soul1\",\n                className: \"soul1 absolute blur-[3px] right-8\",\n                width: \"150\",\n                height: \"370\",\n                viewBox: \"0 0 400 370\",\n                fill: \"none\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                    clipPath: \"url(#clip0_1_2)\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M20.9 196.2C20.9 196.133 20.9 196.1 20.9 196.1V196C20.8333 195.8 20.8333 195.567 20.9 195.3C25.0333 181.167 29.1333 167.033 33.2 152.9C35.1333 146.433 37.0333 139.967 38.9 133.5C40.3 128.7 41.7 123.7 44.6 119.6C50.5 110.9 61 109 70.7 107.6C75.5 106.9 80.8 106.6 85.1 109.3C89.6 112 92.1 117 94.9 121.2C96.5667 123.667 98.3 126.1 100.1 128.5C100.5 128.5 100.8 128.6 101.2 128.8C109.2 134.6 120.1 133.7 126.9 126.5C133.6 101.8 144.6 78.2 160.4 57.9C160.4 57.9 160.433 57.9 160.5 57.9C160.567 57.5667 160.733 57.2333 161 56.9C162.733 54.8333 164.5 52.7667 166.3 50.7C166.7 50.3 167.2 50.1 167.7 50.1C185.6 36.7 208.6 29.1 230.8 35.6C240.1 38.4 248.8 43.6 255.2 51C261.6 58.4 265.7 67.4 268.3 76.8C271.2 86.8 272.4 97.2 273.2 107.5C274.2 119.8 274.5 132.1 274.7 144.5C274.8 152.8 274.9 161.4 275.1 169.9C276.9 181.1 279.9 192.1 284.3 202.6C300.9 242.4 335.3 272.9 376.8 284.6C377.8 284.9 378.2 285.7 378.1 286.5C378.2 286.9 378.1 287.3 377.9 287.6C373 299 362.5 307.6 350.4 310.4C349.3 310.7 348.5 310 348.2 309.1C347.133 307.833 346 306.633 344.8 305.5C344.067 304.833 343.333 304.167 342.6 303.5C342.2 303.233 341.8 302.933 341.4 302.6C341.267 302.467 341.1 302.333 340.9 302.2C340.9 302.133 340.9 302.1 340.9 302.1C340.8 302.1 340.7 302 340.6 302C338.9 303.7 337.4 305.6 336.1 307.4C332.2 312.6 328.3 318.2 322.2 320.9C307.3 327.4 292.1 314.6 277.2 319.7C276.8 319.833 276.467 319.867 276.2 319.8C275.667 320.267 275.133 320.733 274.6 321.2C269.7 325.5 264.6 331 258 332.5C251.3 333.9 244.6 331.2 239.4 327.3C234.9 324 231.1 319.9 226.8 316.5C226.667 316.567 226.533 316.6 226.4 316.6C226.1 316.5 225.8 316.5 225.6 316.5C217 316.5 210.8 323.2 204.7 328.5C198.9 333.6 191.9 337.9 183.8 336.7C183.667 336.7 183.533 336.667 183.4 336.6C183.3 336.6 183.3 336.6 183.3 336.6C182.3 336.9 181.4 336.2 181 335.3L177.3 325.2L173.2 314C162.9 315.5 152.9 319.7 142.7 315.3C142.1 315.1 141.8 314.7 141.7 314.3C141.5 314.1 141.4 313.8 141.3 313.5C137.6 302.1 134.2 290.6 131.1 279C131 278.8 130.8 278.6 130.6 278.3C129.6 275.9 128.5 273.3 126.9 271.1C126.7 270.8 126.5 270.6 126.3 270.3C124.3 267.8 121.7 266.5 118.6 265.8C112.4 264.7 105.6 265.6 100.6 260.9C100.2 260.5 100 260.1 100 259.7C99.9 259.5 99.8 259.3 99.7 259.1C98.5667 254.3 97.4 249.467 96.2 244.6C96.1 244.7 96 244.7 95.9 244.7C92.5 245.2 89.2 245.1 86.1 243.6C86.0333 243.533 85.9333 243.467 85.8 243.4C85.7333 243.333 85.6667 243.3 85.6 243.3C85.3 243 85 242.7 84.9 242.1C84.5 239.5 84.1 236.9 83.7 234.3C72.2 237.8 59.5 235.3 50 228C49.9333 227.933 49.8667 227.867 49.8 227.8C49.8 227.733 49.7667 227.7 49.7 227.7C49.4333 227.433 49.2667 227.133 49.2 226.8C48.0667 220.2 46.9333 213.633 45.8 207.1C45.8 207.1 45.9 207.1 45.9 207C37.5 205.1 29.4 201.9 21.8 197.7C21.1 197.3 20.8 196.8 20.9 196.2Z\",\n                            fill: \"#FFFDFE\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 22,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M121.8 179.7L122.3 208C121.1 198.6 121 189.1 121.8 179.7Z\",\n                            fill: \"#E5E5E5\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 27,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M62.5 210.3C62.5 209.2 61.6 208.4 60.6 208.3C59.6 208.3 58.6 208.333 57.6 208.4C55.4 207.4 53 206.7 50.5 206.6C49.5 206.5 48.4 207.5 48.5 208.5C48.5667 208.7 48.6 208.867 48.6 209C48.5333 209.333 48.5 209.667 48.5 210C48.8 211.7 49 213.4 49.2 215.1C49.2 215.433 49.2333 215.733 49.3 216C49.4333 217.933 49.4667 219.833 49.4 221.7C49.4 222.4 49.9 223.2 50.6 223.4C51.3 223.7 52.1 223.6 52.7 223C56.1 220.1 59.1 216.7 61.8 213.1C62.1 212.7 62.1 212 62 211.5C62.3 211.2 62.5 210.8 62.5 210.3Z\",\n                            fill: \"#C2CAC2\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 31,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M109.9 244.1C109.4 242.2 107.6 241.7 105.9 241.4C104.2 241.2 102.5 241.2 101.1 242.2C100.9 242.3 100.8 242.5 100.6 242.6C100.5 242.7 100.4 242.6 100.3 242.7C99.3 243 98.7 244 98.9 245C99.2333 246.6 99.5667 248.2 99.9 249.8C100.033 250.533 100.167 251.3 100.3 252.1C100.5 253.1 100.7 254.2 101.7 254.8C103.8 256.1 105.4 253.9 106.5 252.5C107.3 251.367 108 250.2 108.6 249C109.3 247.5 110.3 245.8 109.9 244.1Z\",\n                            fill: \"#C2CAC2\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 35,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M215.1 216.4C214.5 215.7 213.7 215.4 212.9 215C211.233 214.267 209.533 213.567 207.8 212.9C207.5 212.3 206.9 212 206.3 212C205.2 212 204.3 212.9 204.3 213.9L204.8 226.3C204.8 228 206.8 228.7 208 227.6L212.4 223.7C213.8 222.5 215.5 221.3 216 219.4C216.2 218.3 215.9 217.2 215.1 216.4Z\",\n                            fill: \"#C2CAC2\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 39,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M244.5 230.5C241.3 229.5 237.8 229.6 234.5 230.6C234.2 230.2 233.8 229.9 233.1 230C232.2 230 231.1 230.8 231.2 231.9C231.267 232.1 231.3 232.3 231.3 232.5C231 233.1 231.1 233.9 231.5 234.4C231.633 235.6 231.767 236.833 231.9 238.1C232 238.8 232.3 239.4 232.9 239.7C233.5 240.1 234.2 240.1 234.8 239.7C238.2 237.833 241.6 235.933 245 234C246.5 233.2 246.1 231 244.5 230.5Z\",\n                            fill: \"#C2CAC2\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 43,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M188.5 318.1C188.4 318 188.3 317.9 188.2 317.7C186.6 314.7 183.1 313.2 179.9 312.3C179.3 312.2 178.7 312.4 178.2 312.8C178 312.8 177.9 312.8 177.7 312.8C176.7 313.1 176 314.2 176.3 315.2C178.1 320.733 179.867 326.3 181.6 331.9C182.2 333.7 184.8 333.7 185.3 331.9C186.2 329.1 187.9 326.6 188.6 323.9C188.7 323.7 188.8 323.6 188.9 323.4C189.6 321.7 189.5 319.7 188.5 318.1Z\",\n                            fill: \"#C2CAC2\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 47,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M352.4 295.8C351.7 295 350.7 294.7 349.6 294.9C348.8 295 348.2 295.5 347.5 296C347.167 296.267 346.8 296.567 346.4 296.9C346.4 296.9 346.367 296.9 346.3 296.9C346.233 296.833 346.133 296.8 346 296.8C345.9 296.8 345.9 296.8 345.9 296.7C345.767 296.7 345.667 296.667 345.6 296.6C344.7 296.1 343.4 296.3 342.9 297.3C342.5 298.2 342.7 299.4 343.7 299.9C343.7 299.9 343.7 299.933 343.7 300C343.7 300.3 343.8 300.7 344 301C344.3 301.5 344.8 301.8 345.4 301.8C346.467 303 347.533 304.167 348.6 305.3C349.1 305.8 349.8 306 350.5 305.8C351.2 305.6 351.6 305.1 351.8 304.5C352.267 303.167 352.633 301.833 352.9 300.5C353.2 298.9 353.5 297.1 352.4 295.8Z\",\n                            fill: \"#C2CAC2\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 51,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M163.9 59.7C163.833 59.8333 163.733 59.9667 163.6 60.1C152.3 74.4 143.5 90.6 137 107.7C125.3 138.7 121.3 172.1 123.1 205.1C123.3 210.5 123.8 216 124.4 221.5C127.6 252.3 135.3 282.6 144.9 312.1C144.9 312.2 145 312.4 145 312.5C145.7 314.6 142.9 315.6 141.7 314.3C141.5 314.1 141.4 313.8 141.3 313.5C137.6 302.1 134.2 290.6 131.1 279C130.5 276.2 129.8 273.5 129.1 270.7C128.767 269.367 128.467 268.033 128.2 266.7C127.067 261.9 126.033 257.1 125.1 252.3C124.033 246.7 123.1 241.067 122.3 235.4C121.2 228 120.3 220.7 119.8 213.3C118 191 118.6 168.5 122.5 146.4C123.3 141.8 124.233 137.267 125.3 132.8C125.367 132.8 125.367 132.767 125.3 132.7C125.8 130.7 126.3 128.6 126.9 126.5C133.6 101.8 144.6 78.2 160.4 57.9C160.4 57.9 160.433 57.9 160.5 57.9C160.633 57.7 160.767 57.5 160.9 57.3C162.3 55.5 164.8 57.8 163.9 59.7Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 55,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M297.5 277.2C284.4 258 277.6 235.4 274.3 212.6C272.3 198.4 271.6 184.1 271.2 169.8C271.2 168.867 271.2 167.967 271.2 167.1C271 159.6 270.9 152 270.8 144.5C270.7 132.5 270.4 120.4 269.5 108.5C268.7 98.3 267.5 88 264.7 78.1C262.2 68.9 258.2 60 251.7 52.9C245.1 45.6 236.4 40.8 226.9 38.6C206.5 33.7 185.5 41.2 169.4 53.7C169.133 53.8333 168.9 53.9333 168.7 54C166.9 54.6 164.9 52.3 166.6 51C167 50.7333 167.367 50.4333 167.7 50.1C185.6 36.7 208.6 29.1 230.8 35.6C240.1 38.4 248.8 43.6 255.2 51C261.6 58.4 265.7 67.4 268.3 76.8C271.2 86.8 272.4 97.2 273.2 107.5C274.2 119.8 274.5 132.1 274.7 144.5C274.8 152.8 274.9 161.4 275.1 169.9C275.3 176.9 275.5 183.9 276 190.8C278 220.7 283.6 250.1 300.8 275.3C302.2 277.3 298.9 279.2 297.5 277.2Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 59,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M378.1 286.5C378.1 287.7 377.2 288.7 375.8 288.4C375.067 288.2 374.333 287.967 373.6 287.7C362.6 284.4 352 279.9 342.1 274.1C310.4 255.7 286.8 225.5 276 190.8C273.9 184 272.3 176.9 271.2 169.8C271.1 169.3 271.1 168.8 271 168.3C270.9 167.8 271 167.4 271.2 167.1C271.9 165.6 274.4 165.3 274.7 167.3C274.833 168.167 274.967 169.033 275.1 169.9C276.9 181.1 279.9 192.1 284.3 202.6C300.9 242.4 335.3 272.9 376.8 284.6C377.8 284.9 378.2 285.7 378.1 286.5Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 63,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M193 321.1C192.9 326 190 329.8 186.7 333.2C186.1 333.867 185.467 334.5 184.8 335.1C184.6 335.3 184.4 335.4 184.3 335.5C183.4 335.9 182.5 335.6 181.9 334.9C181.4 334.3 181.2 333.3 182 332.5C182 332.5 182 332.467 182 332.4C182.467 331.933 182.967 331.467 183.5 331C184.5 330 185.4 329.1 186.2 328C187 327 187.7 326 188.2 325C188.2 324.9 188.3 324.9 188.3 324.9C188.5 324.5 188.7 324.1 188.8 323.7C188.8 323.6 188.8 323.6 188.8 323.6C189.2 322.4 189.4 321.3 189.2 320.1C189.2 320.033 189.2 319.933 189.2 319.8C189.2 319.7 189.2 319.6 189.1 319.4C189.1 319.2 189 319 189 318.8C188.9 318.6 188.9 318.4 188.8 318.2C188.3 317.1 187.6 316.2 186.7 315.6V315.5C186.3 315.3 186.1 315.1 185.7 314.9C183.2 313.7 179.9 313.5 177.1 313.7C176.9 313.7 176.7 313.7 176.5 313.7C176.1 313.7 175.8 313.7 175.5 313.8C174.7 313.867 173.933 313.933 173.2 314C162.9 315.5 152.9 319.7 142.7 315.3C142.1 315.1 141.8 314.7 141.7 314.3C141.4 313 142.9 311.2 144.6 312C144.7 312 144.8 312 144.9 312.1C156.5 316.8 168.7 309 180.6 309.8C181.467 309.867 182.3 309.967 183.1 310.1C183.367 310.1 183.6 310.167 183.8 310.3C184 310.3 184.1 310.3 184.2 310.3C186.3 310.9 188.2 311.8 189.7 313.2C191.9 315.1 193.2 317.8 193 321.1Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 67,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M184.8 335.1C184.7 335.6 184.4 336.1 183.9 336.4C183.767 336.533 183.6 336.6 183.4 336.6C183.3 336.6 183.3 336.6 183.3 336.6C182.3 336.9 181.4 336.2 181 335.3L177.3 325.2L173.2 314L172.8 313C172.5 312 173.3 310.9 174.2 310.6C175.3 310.4 176.2 311 176.6 312C176.7 312.4 176.8 312.8 177 313.2C177.1 313.3 177.1 313.5 177.1 313.7C179.3 319.433 181.433 325.2 183.5 331C183.767 331.6 184 332.233 184.2 332.9C184.267 332.967 184.3 333.033 184.3 333.1C184.433 333.5 184.567 333.867 184.7 334.2V334.3C184.8 334.6 184.8 334.8 184.8 335.1Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 71,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M226.8 316.5C226.667 316.567 226.533 316.6 226.4 316.6C226.1 316.5 225.8 316.5 225.6 316.5C217 316.5 210.8 323.2 204.7 328.5C198.9 333.6 191.9 337.9 183.8 336.7C183.667 336.7 183.533 336.667 183.4 336.6C183.3 336.6 183.3 336.6 183.3 336.6C182.3 336.4 181.9 335.7 181.9 334.9C182 334.2 182.3 333.5 182.9 333.2C182.967 333.2 183 333.2 183 333.2C183.333 332.933 183.733 332.833 184.2 332.9C184.3 332.9 184.3 332.9 184.3 332.9C184.367 332.9 184.4 332.933 184.4 333H184.5C184.7 333 184.9 333 185.1 333.1C185.633 333.167 186.167 333.2 186.7 333.2C194.3 333.2 200.5 327 205.9 322.3C210.4 318.3 215.6 314.3 221.5 313.1H221.6C221.8 313.1 221.967 313.067 222.1 313C223.5 312.733 224.933 312.633 226.4 312.7C228.8 312.9 228.9 316.3 226.8 316.5Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 75,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M296 304.9C295.2 304.967 294.367 305.1 293.5 305.3C287.5 306.6 282.2 309.8 277.4 313.7C276 314.8 274.6 316.1 273.2 317.4C272.067 314.933 270.9 312.467 269.7 310C269.3 309 267.9 308.7 267 309.2C266 309.8 265.8 310.9 266.3 311.9C267.567 314.7 268.867 317.467 270.2 320.2C266.9 323.3 263.4 326.3 259.4 328C253.7 330.4 248 328.4 243.1 325.2C237.633 303.4 231.767 281.7 225.5 260.1C224.8 257.6 220.9 258.6 221.6 261.1C227.4 281.033 232.867 301.1 238 321.3C232.8 316.7 227.9 311.5 221.4 308.8C215.9 306.4 209.4 306.2 204.3 309.4C204.233 309.467 204.133 309.533 204 309.6C203.267 310.067 202.567 310.633 201.9 311.3C201.5 311.7 201.3 312.2 201.4 312.6C201.4 314.1 203.3 315.3 204.7 314C209.4 309.4 216.2 310.4 221.5 313.1H221.6C222.133 313.367 222.667 313.667 223.2 314C223.467 314.2 223.733 314.367 224 314.5C224.933 315.167 225.867 315.833 226.8 316.5C231.1 319.9 234.9 324 239.4 327.3C244.6 331.2 251.3 333.9 258 332.5C264.6 331 269.7 325.5 274.6 321.2C275.133 320.733 275.667 320.267 276.2 319.8C278.1 318 280.1 316.3 282.2 314.8C286.4 311.8 290.9 309.4 296 308.7C297.2 308.6 297.8 307.7 297.8 306.8C298 305.8 297.4 304.7 296 304.9Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 79,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M353.4 296C353.1 296 352.8 296 352.5 296C352.233 296 351.967 296 351.7 296C348.6 296.2 345.9 297.5 343.5 299.4C343.433 299.4 343.333 299.467 343.2 299.6C342.267 300.333 341.4 301.133 340.6 302C338.9 303.7 337.4 305.6 336.1 307.4C332.2 312.6 328.3 318.2 322.2 320.9C307.3 327.4 292.1 314.6 277.2 319.7C276.8 319.833 276.467 319.867 276.2 319.8C274.6 319.4 274.2 316.7 276.2 316C278.2 315.3 280.2 314.9 282.2 314.8C287.9 314.3 293.5 315.6 299 316.9C306.6 318.7 315.2 320.7 322.3 316.5C324.1 315.5 325.6 314.1 327.1 312.6C327.967 311.733 328.833 310.8 329.7 309.8C335.3 303 339.9 294.5 348.2 292.5C349.8 292.1 351.5 292 353.4 292.1C353.9 292.2 354.2 292.4 354.5 292.6C354.833 292.867 355.033 293.2 355.1 293.6C355.5 294.7 354.9 296.1 353.4 296Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 83,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M378.1 286.5C378.2 286.9 378.1 287.3 377.9 287.6C373 299 362.5 307.6 350.4 310.4C349.3 310.7 348.5 310 348.2 309.1C348.2 309.1 348.2 309.067 348.2 309C347.9 308.1 348.3 307 349.5 306.7C349.967 306.633 350.433 306.5 350.9 306.3C351.9 306.1 352.867 305.8 353.8 305.4C362.3 302.2 369.5 295.9 373.6 287.7C374 287.033 374.333 286.367 374.6 285.7C375 284.8 376.4 284.5 377.2 285C377.8 285.3 378.1 285.9 378.1 286.5Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 87,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M355.3 293.7C355.2 292.7 353.9 292.1 353 292.4C351.9 292.6 351.4 293.7 351.6 294.7C352.3 299.1 351 303.7 348.3 307.3C347.6 308.1 348.2 309.4 349 309.9C350 310.5 351 310 351.6 309.2C354.9 304.8 356.2 299.1 355.3 293.7Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 91,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M352.1 308.5C352.1 308.967 351.9 309.4 351.5 309.8C350.9 310.5 349.5 310.6 348.8 309.8C348.7 309.8 348.7 309.7 348.7 309.7C348.633 309.567 348.533 309.467 348.4 309.4C348.4 309.333 348.4 309.3 348.4 309.3C348.333 309.233 348.267 309.167 348.2 309.1C347.133 307.833 346 306.633 344.8 305.5C344.067 304.833 343.333 304.167 342.6 303.5C342.2 303.233 341.8 302.933 341.4 302.6C341.267 302.467 341.1 302.333 340.9 302.2C340.9 302.133 340.9 302.1 340.9 302.1C340.8 302.1 340.7 302 340.6 302C340.6 301.933 340.6 301.9 340.6 301.9C339.7 301.3 339.3 300.3 339.8 299.3C340.1 298.9 340.6 298.5 341 298.4C341.4 298.3 342.1 298.3 342.5 298.6C342.633 298.667 342.733 298.733 342.8 298.8C343 299 343.233 299.2 343.5 299.4C345.7 301.1 347.8 303 349.7 305C349.967 305.267 350.2 305.533 350.4 305.8C350.6 306 350.767 306.167 350.9 306.3C351.1 306.6 351.3 306.8 351.5 307.1C351.9 307.5 352.1 308 352.1 308.5Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 95,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M354.3 291.5C332.4 279.5 312.8 263.6 296.7 244.5C295.1 242.6 292.4 245.4 294 247.2C310.3 266.5 330.2 282.7 352.4 294.8C354.5 296 356.5 292.7 354.3 291.5Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 99,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M204.4 310.7C199.7 297.2 196 283.4 193.2 269.3C192.8 266.9 189.1 267.9 189.5 270.3C192.2 284.3 196 298.2 200.7 311.7C201.5 314 205.2 313 204.4 310.7Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 103,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M191.1 258.7C190.633 255.9 190.133 253.067 189.6 250.2C189.5 249.2 188.2 248.6 187.3 248.9C186.2 249.2 185.7 250.2 185.9 251.2C186.433 254.067 186.933 256.9 187.4 259.7C187.6 260.7 188.8 261.4 189.8 261.1C190.8 260.8 191.3 259.8 191.1 258.7Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 107,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M191.4 315.7C174.8 291.7 161.9 265.3 153.4 237.4C150.933 229.4 148.833 221.333 147.1 213.2C146.5 210.8 142.8 211.7 143.3 214.2C149.5 243 160.1 270.8 174.7 296.4C178.833 303.667 183.3 310.733 188.1 317.6C189.5 319.6 192.8 317.7 191.4 315.7Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 111,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            fillRule: \"evenodd\",\n                            clipRule: \"evenodd\",\n                            d: \"M65.7 210.9V211C65.6 211.8 65.3 212.8 64.8 213.6C63.2 216 60.9 218 59.1 220.2C57.3 222.1 55.5 224.1 53.8 226V226.1C53.5 226.4 53.2 226.7 53 227C52.8 227.2 52.6 227.4 52.4 227.6C51.8 228.4 50.6 228.4 49.9 227.8C49.8333 227.8 49.8 227.8 49.8 227.8C49.8 227.8 49.8 227.767 49.8 227.7C49.7333 227.7 49.7 227.7 49.7 227.7C49.4333 227.433 49.2667 227.133 49.2 226.8C48.0667 220.2 46.9333 213.633 45.8 207.1C45.8 207.1 45.9 207.1 45.9 207C37.5 205.1 29.4 201.9 21.8 197.7C21.1 197.3 20.8 196.8 20.9 196.2V196.1V196C21 194.9 22 194 23.2 194.2C23.4 194.2 23.5 194.3 23.7 194.4C24.1 194.6 24.5 194.9 25 195.1C30.2 197.9 35.6 200.1 41.2 201.8C46.7 203.5 52.3 204.6 58.1 205.2C58.8 205.3 59.5 205.4 60.2 205.5C60.4 205.5 60.5 205.6 60.7 205.6C62.1 205.9 63.4 206.4 64.4 207.5C65.3 208.5 65.7 209.7 65.7 210.9ZM57.4 209C55 208.8 52.7 208.5 50.4 208C50.2 208 50.0333 207.967 49.9 207.9C50.7 212.633 51.5 217.367 52.3 222.1C55.2 218.8 58.2 215.5 61 212.1C63.2 209.5 59.3 209.2 57.4 209Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 115,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M57.2 149.2C57.2 148.7 57 148.3 56.6 147.9C56.3 147.6 55.8 147.3 55.3 147.3C54.3 147.4 53.3 148.2 53.3 149.2C53.4333 151.333 53.5667 153.433 53.7 155.5C53.8 156 53.9 156.5 54.3 156.9C54.6 157.2 55.2 157.4 55.7 157.4C56.7 157.4 57.7 156.6 57.6 155.5C57.4667 153.433 57.3333 151.333 57.2 149.2Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 121,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M65.8 209.6C61.8 195.4 59.3 180.7 58.4 165.9C58.3 163.4 54.4 163.4 54.6 165.9C55.4 181 57.9 196 62 210.6C62.7 213 66.4 212 65.8 209.6Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 125,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M115 151.2C106.3 142.6 98.4 133.2 91.5 123.1C88.9 119.1 86.5 113.9 81.9 111.9C77.3 109.9 71.6 111.3 66.8 112.1C62.2 112.9 57.4 113.9 53.3 116.4C49 119 46.4 123.2 44.7 127.8C44.0333 129.6 43.4333 131.367 42.9 133.1C41.8 136.6 40.9 140.2 39.9 143.7C38.2333 149.567 36.5333 155.4 34.8 161.2C31.5333 172.467 28.2667 183.767 25 195.1C24.9333 195.3 24.8667 195.533 24.8 195.8C24.7333 195.933 24.7 196.067 24.7 196.2C24.1 198.3 21.2 197.8 20.9 196.2C20.9 196.133 20.9 196.1 20.9 196.1V196C20.8333 195.8 20.8333 195.567 20.9 195.3C25.0333 181.167 29.1333 167.033 33.2 152.9C35.1333 146.433 37.0333 139.967 38.9 133.5C40.3 128.7 41.7 123.7 44.6 119.6C50.5 110.9 61 109 70.7 107.6C75.5 106.9 80.8 106.6 85.1 109.3C89.6 112 92.1 117 94.9 121.2C96.5667 123.667 98.3 126.1 100.1 128.5C101.9 130.833 103.767 133.133 105.7 135.4C109.5 139.933 113.533 144.3 117.8 148.5C119.5 150.2 116.8 153 115 151.2Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 129,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M129.7 129.2C128.367 130.6 126.9 131.8 125.3 132.8C119.5 136.5 112.2 137.5 105.7 135.4C103.4 134.7 101.3 133.6 99.3 132.2C97.6 131 98.6 128.5 100.1 128.5C100.5 128.5 100.8 128.6 101.2 128.8C109.2 134.6 120.1 133.7 126.9 126.5C126.967 126.5 127 126.467 127 126.4C128.7 124.6 131.4 127.4 129.7 129.2Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 133,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M88.6 241.1C88.6667 241.367 88.6667 241.6 88.6 241.8C88.4 243.2 86.8 243.9 85.8 243.4C85.7333 243.333 85.6667 243.3 85.6 243.3C85.3 243 85 242.7 84.9 242.1C84.5 239.5 84.1 236.9 83.7 234.3C83.6333 233.7 83.5667 233.1 83.5 232.5C83.3667 231.833 83.2667 231.133 83.2 230.4C79.5 202.7 78.5 174.7 80.3 146.7C80.4 144.3 84.3 144.3 84.1 146.7C82.1 178 83.6 209.5 88.5 240.4C88.5667 240.667 88.6 240.9 88.6 241.1Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 137,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            fillRule: \"evenodd\",\n                            clipRule: \"evenodd\",\n                            d: \"M113.2 244.5V244.7C113.2 246.5 112.2 248.1 111.2 249.5C108.8 252.633 106.4 255.7 104 258.7C103.867 258.833 103.733 258.967 103.6 259.1C103.4 259.433 103.2 259.733 103 260C102.2 261 100.7 260.6 100 259.7C99.9 259.5 99.8 259.3 99.7 259.1C98.5667 254.3 97.4 249.467 96.2 244.6C96.1 244.7 96 244.7 95.9 244.7C92.5 245.2 89.2 245.1 86.1 243.6C86.0333 243.533 85.9333 243.467 85.8 243.4C85.7333 243.333 85.6667 243.3 85.6 243.3C85.6 243.3 85.6 243.267 85.6 243.2C84.6 242.4 85.2 240.7 86.3 240.2C86.8 240 87.4 239.9 88 240.2C88.2 240.3 88.3 240.4 88.5 240.4C91.9 241.9 95.8 240.9 99.2 240.2C102 239.6 105.3 238.9 108.2 239.6C109 239.7 109.7 239.9 110.4 240.3C112 241.2 113.1 242.7 113.2 244.5ZM109.3 244.4C109 243.4 107.4 243.3 106.6 243.2C104.3 243.1 102.1 243.5 100 243.9L102.5 254.4C104.1 252.3 105.7 250.3 107.3 248.3C107.9 247.4 109.7 245.6 109.3 244.4Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 141,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M131.1 279C131 278.8 130.8 278.6 130.6 278.3C129.6 275.9 128.5 273.3 126.9 271.1C126.7 270.8 126.5 270.6 126.3 270.3C124.3 267.8 121.7 266.5 118.6 265.8C112.4 264.7 105.6 265.6 100.6 260.9C100.2 260.5 100 260.1 100 259.7C99.9 258.5 101.3 257.2 102.6 257.7C102.867 257.833 103.1 257.967 103.3 258.1C103.5 258.3 103.733 258.5 104 258.7C108.9 262.6 116.4 260.9 122 262.8C123.3 263.2 124.5 263.8 125.6 264.5V264.6C126.6 265.2 127.4 265.9 128.2 266.7C129.1 267.7 129.9 268.7 130.6 269.8C131.9 271.8 133 274.1 134 276.4C134.8 278.3 132.4 280 131.1 279Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 147,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M85.5 233.4C85.3 233.7 85 233.8 84.7 234C84.3667 234.067 84.0333 234.167 83.7 234.3C72.2 237.8 59.5 235.3 50 228C49.9333 227.933 49.8667 227.867 49.8 227.8C49.8 227.733 49.7667 227.7 49.7 227.7C49.3 227 49.4 225.9 50 225.3C50.7 224.6 51.7 224.6 52.5 225.1C52.5667 225.167 52.6333 225.233 52.7 225.3C53.1 225.567 53.4667 225.833 53.8 226.1C62.2 232 73.4 233.6 83.2 230.4C83.3333 230.333 83.5 230.267 83.7 230.2C84.2 230 84.6 230.1 85 230.2V230.3C85.0667 230.3 85.1333 230.333 85.2 230.4C86.1 231 86.3 232.5 85.5 233.4Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 151,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M113.4 243.3C112 238.7 110.6 234.067 109.2 229.4C108.9 228.4 107.9 227.7 106.9 228C105.9 228.3 105.2 229.4 105.5 230.4C106.9 235 108.267 239.633 109.6 244.3C109.9 245.3 111 245.9 112 245.7C113 245.4 113.7 244.3 113.4 243.3Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 155,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M107.1 220.5C103 204.5 100.4 188.1 99.3 171.6C99.1 169.2 95.3 169.1 95.4 171.6C96.6 188.5 99.2 205.2 103.4 221.5C104 223.9 107.8 222.9 107.1 220.5Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 159,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M261.8 148.4C261 147.8 259.8 147.7 259.1 148.4C258.7 148.8 258.333 149.167 258 149.5C257.8 149.7 257.6 149.867 257.4 150C257.4 150 257.4 150 257.3 150.1C257.233 150.167 257.133 150.233 257 150.3C256.6 150.567 256.167 150.833 255.7 151.1C255.5 151.167 255.267 151.267 255 151.4C254.933 151.467 254.833 151.5 254.7 151.5C254.7 151.567 254.633 151.6 254.5 151.6C253.633 151.933 252.7 152.2 251.7 152.4C251.7 152.4 251.5 152.4 251.4 152.4C251.333 152.4 251.267 152.4 251.2 152.4C250.933 152.467 250.7 152.5 250.5 152.5C249.9 152.5 249.333 152.5 248.8 152.5C247.8 152.4 246.9 153.4 246.9 154.4C247 155.5 247.8 156.2 248.8 156.3C253.6 156.7 258.5 154.7 261.8 151.2C262.5 150.4 262.6 149.2 261.8 148.4Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 163,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M259.8 164.8C252.6 161.6 249.8 153.7 246.3 147.2C242.4 139.7 237.2 133.6 228.3 132.4C223.2 131.7 217.8 132.2 212.7 132.9C208 133.4 203.2 134.6 199.4 137.7C191.5 144.2 191.5 156.3 189.6 165.5C186.7 178.9 182.5 192 177.1 204.5C176.1 206.8 179.4 208.7 180.4 206.4C184.9 196.1 188.7 185.4 191.4 174.4C192.8 169 193.967 163.567 194.9 158.1C195.6 153.7 196.3 149 198.4 144.9C200.9 140.3 205.2 138.1 210.2 137.1C215.1 136.1 220.4 135.8 225.4 136C230.1 136.2 234.4 137.6 237.6 141C240.1 143.6 241.8 146.8 243.4 149.9C247 156.8 250.3 164.7 257.9 168.1C260.1 169.1 262 165.8 259.8 164.8Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 167,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M219.4 216.7C215.4 210.5 208 210.6 201.4 210.1C194 209.6 186.7 207.5 180.1 204.3C177.9 203.2 175.9 206.6 178.2 207.6C184.3 210.6 190.7 212.6 197.5 213.5C203.3 214.3 212.3 212.9 216.1 218.6C217.4 220.7 220.8 218.8 219.4 216.7Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 171,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M218.8 216.4C217.9 215.9 216.6 216.2 216.2 217.1C214.8 219.9 212.3 221.8 209.8 223.6C208.667 224.467 207.533 225.333 206.4 226.2C206.6 221.6 206.2 217 205.1 212.5C204.5 210.1 200.8 211.1 201.4 213.5C202.8 219.2 203 225.2 202.1 231C201.8 233.2 204.4 234.3 205.7 232.5C207.4 229.9 210.1 228.2 212.6 226.3C215.3 224.3 218 222.1 219.5 219C220 218.1 219.7 216.9 218.8 216.4Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 175,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M219.2 215.3C216.3 207.9 214.3 200.2 213.3 192.3C213.2 191.3 212.5 190.4 211.4 190.4C210.5 190.4 209.4 191.3 209.5 192.3C210.5 200.6 212.5 208.6 215.5 216.3C215.9 217.3 216.8 218 217.9 217.7C218.8 217.4 219.6 216.3 219.2 215.3Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 179,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M249.1 230.5C244.2 224.7 236.3 226.3 229.8 227.8C221.6 229.7 213.3 230.5 205 230.4C202.5 230.3 202.5 234.2 205 234.2C212.3 234.4 219.6 233.8 226.8 232.4C232.9 231.2 241.6 227.5 246.4 233.2C248 235.1 250.7 232.4 249.1 230.5Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 183,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M248.5 230.6C247.5 230 246.5 230.4 245.9 231.3C245.6 231.7 245.1 232.3 244.6 232.7C244 233.3 243.6 233.6 243 234C241.6 234.9 240.2 235.6 238.8 236.3C237.1 237.2 235.4 238.1 233.9 239.1C233.6 236 233.2 232.8 232.6 229.7C232.4 228.7 231.2 228.1 230.3 228.3C229.2 228.6 228.7 229.6 228.9 230.7C229.7 234.767 230.167 238.9 230.3 243.1C230.4 244.6 232.5 245.7 233.6 244.4C235.7 242.1 238.5 240.8 241.4 239.3C244.4 237.8 247.2 236 249.2 233.2C249.8 232.4 249.3 231.1 248.5 230.6Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 187,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M212 183.8C211.667 181.8 211.367 179.767 211.1 177.7C211.1 177.2 210.6 176.7 210.2 176.5C209.8 176.3 209.2 176.2 208.8 176.3C208.3 176.5 207.8 176.8 207.6 177.2C207.3 177.7 207.3 178.1 207.4 178.7C207.667 180.7 207.933 182.733 208.2 184.8C208.3 185.3 208.8 185.8 209.1 186C209.5 186.2 210.1 186.3 210.6 186.2C211.1 186 211.5 185.7 211.8 185.3C212 184.8 212 184.4 212 183.8Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 191,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M239.8 197.2C235.9 186.5 233 175.6 231 164.4C230.6 162 226.8 163 227.3 165.4C229.2 176.6 232.2 187.5 236.1 198.2C236.9 200.5 240.6 199.5 239.8 197.2Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 195,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M249.6 230.8C247.133 222.467 244.633 214.1 242.1 205.7C241.4 203.3 237.6 204.3 238.4 206.7C240.867 215.033 243.367 223.4 245.9 231.8C246.6 234.2 250.3 233.2 249.6 230.8Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 199,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M277.5 261.3C275.2 253.4 267.4 249.5 259.8 248.2C251.4 246.8 241.5 247.9 234.4 242.3C232.5 240.8 229.7 243.5 231.7 245C238.1 250.1 246.1 250.6 254 251.3C261.4 252 271.3 253.9 273.8 262.3C274.4 264.6 278.2 263.7 277.5 261.3Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 203,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M284.8 277.2C283.6 274.467 282.4 271.733 281.2 269C280.8 268.1 279.4 267.8 278.5 268.3C277.6 268.9 277.4 269.9 277.8 270.9L281.4 279.1C281.8 280 283.2 280.3 284.1 279.8C285 279.2 285.2 278.2 284.8 277.2Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 207,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M297.7 305.3C294.367 298.167 291.033 291.033 287.7 283.9C287.3 283 286 282.7 285.1 283.2C284.1 283.8 283.9 284.9 284.4 285.8C287.733 292.933 291.067 300.067 294.4 307.2C294.8 308.1 296.1 308.4 297 307.9C298 307.3 298.2 306.2 297.7 305.3Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 211,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M277.5 261.1C270.9 244.2 265.9 226.7 262.6 208.9C262.2 206.4 258.5 207.4 258.9 209.8C262.2 227.7 267.1 245.2 273.7 262C274.6 264.3 278.4 263.4 277.5 261.1Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 215,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M330.5 310.6C320.9 301.7 312.4 291.8 305 281C303.6 279 300.2 281 301.7 283C309.3 294 318 304.2 327.8 313.3C329.6 315 332.3 312.3 330.5 310.6Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 219,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M144.8 203C144.533 202 144.3 201 144.1 200C144 199.6 143.6 199.1 143.2 198.9C142.8 198.6 142.2 198.5 141.7 198.7C141.2 198.8 140.8 199.1 140.5 199.6C140.3 200.067 140.233 200.533 140.3 201C140.567 202 140.8 203 141 204C141.1 204.5 141.5 205 141.9 205.2C142.3 205.4 142.9 205.5 143.4 205.4C143.9 205.2 144.3 204.9 144.6 204.5C144.8 204.033 144.867 203.533 144.8 203Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 223,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M150.4 293.5C142.4 270.7 137 247.1 134.2 223.2C133.9 220.7 130.1 220.7 130.3 223.2C133.2 247.5 138.6 271.4 146.7 294.5C147.5 296.8 151.2 295.8 150.4 293.5Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 227,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M154.1 303.3C153.767 302.433 153.4 301.533 153 300.6C152.867 300.4 152.7 300.233 152.5 300.1C152.3 299.9 152.067 299.767 151.8 299.7C151.6 299.633 151.367 299.633 151.1 299.7C150.833 299.7 150.6 299.767 150.4 299.9C150 300.2 149.6 300.6 149.5 301.1C149.5 301.233 149.467 301.4 149.4 301.6C149.4 301.933 149.5 302.233 149.7 302.5C150.033 303.433 150.4 304.333 150.8 305.2C150.933 305.467 151.1 305.667 151.3 305.8C151.5 306 151.733 306.1 152 306.1C152.267 306.233 152.5 306.267 152.7 306.2C152.967 306.2 153.2 306.133 153.4 306C153.9 305.7 154.2 305.3 154.3 304.8C154.367 304.6 154.4 304.433 154.4 304.3C154.4 303.967 154.3 303.633 154.1 303.3Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 231,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M173.9 91.5C173.4 89 172.3 86.8 170.1 85.5C164.6 82.4 160.6 88.7 158.9 93C157.1 97.5 156.6 102.8 157.9 107.5C158.7 110.3 160.3 112.8 163.1 113.8C165.5 114.7 168.2 114 169.9 112.2C171.6 110.4 172.5 108.1 173.2 105.8C173.9 103.3 174.4 100.6 174.5 98C174.6 95.9 174.7 93.5 173.9 91.5Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 235,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M209.2 101.6C209.333 100.6 209.4 99.6333 209.4 98.7C209.9 96 209.8 93.2 208.9 90.7C207.9 88.1 205.5 86.2 202.7 86.2C200.1 86.2 197.7 87.8 196 89.7C192.2 93.8 189.3 98.8 188 104.2C186.8 109 185.8 115.8 189.2 120C191 122.1 194 122.9 196.6 122.1C199.1 121.3 201 119.5 202.6 117.5C206.3 113 208.6 107.3 209.2 101.6Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 239,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M266.5 303C262.633 293.867 258.8 284.767 255 275.7C254.6 274.7 253.1 274.5 252.3 275C251.2 275.5 251.1 276.7 251.5 277.7C255.367 286.767 259.2 295.833 263 304.9C263.4 305.9 264.9 306.2 265.7 305.7C266.8 305.1 266.9 304 266.5 303Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 243,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M246.4 57.4C245.1 55.3 241.7 57.1 243 59.2C249.9 70.6 253.4 83.8 252.9 97.2C252.9 99.7 256.7 99.8 256.8 97.3C257.3 83.3 253.7 69.4 246.4 57.4Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 247,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M255 104.3C254 104.3 253.2 105.1 253.1 106.2C252.9 108.333 252.7 110.5 252.5 112.7C252.4 113.7 253.4 114.7 254.4 114.7C255.4 114.7 256.2 113.9 256.3 112.8C256.5 110.667 256.7 108.5 256.9 106.3C257 105.3 256 104.3 255 104.3Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 251,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M175.1 142.9C174.5 142.3 173.4 142.2 172.7 142.6C172 143 171.5 143.6 171.3 144.3C171.1 144.4 171 144.5 170.9 144.7C169.5 147.3 170 150.8 172.2 152.9C173 153.6 174.3 153.7 175.1 152.9C177.5 150 177.5 145.8 175.1 142.9Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                            lineNumber: 255,\n                            columnNumber: 17\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                    lineNumber: 21,\n                    columnNumber: 13\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/firstSoulSVG.tsx\",\n                lineNumber: 13,\n                columnNumber: 13\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n_s(FirstSoulSVG, \"O8gsXtBxNfxLd1peJv/c6lg0Iak=\", false, function() {\n    return [\n        _hook_useFirstSoulRender__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n    ];\n});\n_c = FirstSoulSVG;\n/* harmony default export */ __webpack_exports__[\"default\"] = (FirstSoulSVG);\nvar _c;\n$RefreshReg$(_c, \"FirstSoulSVG\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/svg/firstSoulSVG.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/svg/forthSoulSVG.tsx":
/*!*****************************************!*\
  !*** ./components/svg/forthSoulSVG.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _hook_useForthSoulRender__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../hook/useForthSoulRender */ \"(app-pages-browser)/./hook/useForthSoulRender.ts\");\n\nvar _s = $RefreshSig$();\n\nconst ForthSoulSVG = ()=>{\n    _s();\n    const tl = (0,_hook_useForthSoulRender__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n            id: \"soul4\",\n            className: \"soul4 absolute blur-[3px] \",\n            width: \"200\",\n            height: \"496\",\n            viewBox: \"0 0 397 496\",\n            fill: \"none\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                clipPath: \"url(#clip0_1_2)\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M31.5227 230.232C27.2378 231.025 22.8699 231.273 18.5227 230.972C15.7048 230.817 12.9119 230.357 10.1927 229.602C8.83031 229.313 7.5762 228.648 6.57272 227.682C12.9427 222.242 22.5727 225.822 29.3527 229.162L31.5227 230.232Z\",\n                        fill: \"#C2CAC2\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 13,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M396.183 180.522C396.309 179.833 396.177 179.121 395.813 178.522C395.753 177.926 395.516 177.362 395.133 176.902C387.035 167.231 380.398 156.427 375.433 144.832C372.975 138.983 370.933 132.968 369.323 126.832C367.793 121.132 366.403 115.332 363.643 110.072C353.693 91.0721 326.593 90.7721 313.953 107.072C308.523 114.072 305.953 122.192 304.473 130.662C301.431 131.812 298.095 131.924 294.983 130.982C291.943 130.023 289.304 128.09 287.473 125.482C287.167 125.027 286.746 124.661 286.253 124.422C281.813 108.042 279.253 91.0321 275.183 74.6221C269.303 51.2621 259.323 26.8921 239.283 12.2121C218.523 -3.00792 190.743 -3.04792 167.813 7.02208C143.813 17.5521 126.593 39.3921 116.373 62.9321C106.523 85.6921 102.803 110.182 101.043 134.802C100.882 135.051 100.755 135.32 100.663 135.602C100.583 135.812 100.533 135.992 100.463 136.182C100.393 136.372 100.283 136.632 100.283 136.632C100.083 137.102 99.8527 137.582 99.6227 138.052C99.1827 138.902 98.7227 139.742 98.2127 140.542C97.9327 140.962 97.6527 141.412 97.3427 141.842C97.3427 141.912 97.3427 141.842 97.2627 141.942L97.1627 142.072C97.0027 142.262 96.8527 142.472 96.6727 142.682C96.0535 143.451 95.3855 144.179 94.6727 144.862C94.3327 145.212 93.9927 145.532 93.6727 145.862C93.4627 146.022 93.2827 146.212 93.0827 146.372C92.974 146.452 92.8705 146.539 92.7727 146.632C92.0127 147.222 91.2127 147.762 90.4027 148.272C89.5927 148.782 88.6927 149.272 87.7827 149.702L87.2027 149.942C87.063 150.02 86.9156 150.084 86.7627 150.132C86.2927 150.322 85.7627 150.492 85.3027 150.652C85.1427 150.707 84.9858 150.77 84.8327 150.842C82.5127 146.262 80.7527 141.152 77.8327 137.182C71.3627 128.412 60.9127 127.572 51.0127 130.342C40.874 133.189 31.9307 139.245 25.5227 147.602C18.0027 157.442 15.6927 169.352 13.4527 181.212C10.6124 196.441 6.18147 211.329 0.232727 225.632C0.0099515 226.144 -0.054811 226.71 0.0467527 227.259C0.148316 227.808 0.411571 228.314 0.802727 228.712C0.895023 228.895 1.01288 229.063 1.15273 229.212C3.64273 234.602 10.8227 235.652 16.1527 236.212C23.5415 237.03 31.0192 236.374 38.1527 234.282C38.4666 234.191 38.7662 234.056 39.0427 233.882C39.1581 233.848 39.2665 233.794 39.3627 233.722C40.3627 234.122 41.4727 234.502 42.5527 234.832C42.6231 235.068 42.724 235.293 42.8527 235.502C47.1527 242.442 54.7227 245.402 62.1527 247.782C63.0229 260.235 62.9727 272.736 62.0027 285.182C61.7683 285.489 61.6182 285.851 61.5673 286.233C61.5164 286.616 61.5666 287.005 61.7127 287.362C63.5698 293.108 66.7285 298.347 70.9427 302.672C74.2127 306.012 78.1327 308.392 82.1227 310.722C85.5631 322.924 88.0703 335.37 89.6227 347.952C89.4288 348.381 89.3462 348.853 89.3827 349.322C89.8627 357.322 95.3827 363.582 102.383 367.072C107.383 369.542 112.733 370.382 118.173 370.742C118.163 370.909 118.163 371.076 118.173 371.242C120.507 380.773 121.741 390.54 121.853 400.352C121.866 400.753 121.97 401.146 122.157 401.501C122.344 401.857 122.609 402.164 122.933 402.402C125.003 409.222 131.543 413.662 138.163 415.822C146.833 418.652 157.473 417.972 164.513 424.552C165.765 425.713 166.739 427.142 167.363 428.732C167.354 429.206 167.486 429.673 167.743 430.072C168.413 432.652 168.323 435.462 168.523 438.472C168.804 442.608 170.128 446.606 172.373 450.092C174.528 453.398 177.234 456.31 180.373 458.702C179.413 470.035 178.463 481.389 177.523 492.762C177.303 495.442 181.643 496.552 182.703 494.052C185.113 488.242 191.073 485.352 195.233 480.962C198.333 477.692 200.543 473.122 200.083 468.692C202.283 463.69 205.373 459.129 209.203 455.232C213.363 451.112 218.203 448.392 223.273 445.562C227.353 443.272 231.513 440.662 234.103 436.642C237.593 431.212 236.293 425.252 235.603 419.252C235.429 417.819 235.399 416.372 235.513 414.932C235.588 414.686 235.629 414.43 235.633 414.172V413.932C237.173 403.152 247.633 396.792 257.633 392.782C268.473 388.432 281.353 384.932 286.903 373.552C289.213 368.822 290.133 363.352 291.283 358.032C291.719 357.569 291.965 356.958 291.973 356.322C291.973 355.822 291.973 355.322 292.023 354.852C293.193 350.292 294.783 346.002 297.953 342.492C298.526 342.324 299.028 341.973 299.383 341.492C309.993 328.332 302.243 311.132 303.383 296.142C304.023 287.872 308.293 282.142 315.073 277.742C320.863 273.912 327.163 270.822 331.943 265.662C331.943 265.662 332.013 265.582 332.043 265.532C332.352 265.278 332.602 264.959 332.775 264.598C332.947 264.237 333.039 263.842 333.043 263.442C333.376 255.282 333.709 247.122 334.043 238.962L334.903 238.632C345.473 235.232 358.743 236.632 366.203 226.762C366.631 226.218 366.879 225.554 366.913 224.862C367.257 224.51 367.509 224.078 367.646 223.606C367.784 223.133 367.803 222.634 367.703 222.152C366.513 216.012 365.323 209.892 364.133 203.742C364.993 203.412 365.853 203.062 366.683 202.742C378.333 198.932 394.063 194.872 396.183 180.522ZM324.183 249.092C324.683 246.35 326.192 243.896 328.413 242.212C328.203 247.352 327.983 252.492 327.773 257.662C325.523 255.282 323.733 252.482 324.233 249.092H324.183ZM349.953 216.422C349.93 216.377 349.903 216.333 349.873 216.292C349.927 216.156 349.951 216.009 349.943 215.862C349.943 215.632 349.943 215.392 349.943 215.162V215.102C350.256 214.312 350.658 213.56 351.143 212.862C353.115 209.979 355.798 207.654 358.933 206.112C359.813 210.502 360.663 214.922 361.513 219.312C358.913 218.692 356.303 218.102 353.703 217.492C352.933 217.272 350.523 217.232 350.003 216.422H349.953ZM126.953 391.182C126.398 384.372 125.335 377.613 123.773 370.962C125.523 370.962 127.263 371.042 128.993 371.062C132.773 371.162 137.463 370.892 140.843 372.962C144.633 375.322 141.113 378.312 138.673 379.962C134.182 383.036 130.226 386.827 126.963 391.182H126.953ZM81.5227 261.672C81.6192 262.032 81.782 262.371 82.0027 262.672C80.6527 266.992 76.1327 270.052 72.6827 272.592C71.0825 273.787 69.5439 275.062 68.0727 276.412C68.4527 267.487 68.3725 258.549 67.8327 249.632C73.8427 251.802 79.8927 255.082 81.5227 261.672ZM18.5227 230.972C15.7048 230.817 12.9119 230.357 10.1927 229.602C8.83031 229.313 7.57621 228.648 6.57273 227.682C12.9427 222.242 22.5727 225.822 29.3527 229.162L31.5227 230.232C27.2378 231.025 22.8699 231.273 18.5227 230.972ZM88.8927 314.972C92.9527 317.972 96.1027 321.692 96.5227 327.192C96.7066 331.535 95.8494 335.858 94.0227 339.802C92.7427 331.452 91.0227 323.162 88.9327 314.952L88.8927 314.972ZM188.833 479.482C187.183 480.922 185.473 482.342 183.833 483.812C184.403 476.612 185.003 469.472 185.633 462.302C188.283 463.912 191.033 465.372 193.783 466.772C193.784 466.791 193.789 466.81 193.797 466.827C193.806 466.845 193.818 466.86 193.833 466.872C194.086 467.3 194.288 467.756 194.433 468.232C194.292 468.892 194.403 469.58 194.743 470.162C194.743 473.802 191.523 477.222 188.873 479.462L188.833 479.482Z\",\n                        fill: \"#FFFDFE\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 14,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M194.793 470.142C194.743 473.792 191.513 477.222 188.873 479.462C187.223 480.902 185.513 482.322 183.873 483.792C184.443 476.592 185.043 469.452 185.673 462.282C188.323 463.892 191.073 465.352 193.823 466.752C193.824 466.771 193.829 466.79 193.837 466.807C193.846 466.824 193.858 466.84 193.873 466.852C194.126 467.28 194.328 467.736 194.473 468.212C194.335 468.873 194.449 469.561 194.793 470.142Z\",\n                        fill: \"#C2CAC2\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 15,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M81.9727 262.712C80.6227 267.032 76.1027 270.092 72.6527 272.632C71.0525 273.827 69.5139 275.102 68.0427 276.452C68.4226 267.527 68.3425 258.589 67.8027 249.672C73.8027 251.842 79.8927 255.082 81.4927 261.672C81.5844 262.046 81.7474 262.399 81.9727 262.712Z\",\n                        fill: \"#C2CAC2\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 16,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M361.613 219.292C359.013 218.672 356.403 218.082 353.803 217.472C352.933 217.272 350.493 217.232 350.003 216.472C349.98 216.427 349.953 216.383 349.923 216.342C349.977 216.206 350.001 216.059 349.993 215.912C349.993 215.682 349.993 215.442 349.993 215.212V215.152C350.306 214.362 350.708 213.61 351.193 212.912C353.165 210.029 355.848 207.704 358.983 206.162C359.913 210.482 360.763 214.902 361.613 219.292Z\",\n                        fill: \"#C2CAC2\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 17,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M328.463 242.212C328.253 247.352 328.033 252.492 327.823 257.662C325.503 255.282 323.733 252.482 324.233 249.092C324.733 246.35 326.242 243.896 328.463 242.212Z\",\n                        fill: \"#C2CAC2\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 18,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M96.5227 327.172C96.7098 331.521 95.8526 335.852 94.0227 339.802C92.7427 331.432 91.0227 323.142 88.9327 314.932C92.9927 317.942 96.1427 321.672 96.5227 327.172Z\",\n                        fill: \"#C2CAC2\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 19,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M138.683 379.992C134.191 383.057 130.232 386.837 126.963 391.182C126.408 384.372 125.345 377.613 123.783 370.962C125.533 370.962 127.273 371.042 129.003 371.062C132.783 371.162 137.473 370.892 140.853 372.962C144.643 375.322 141.123 378.312 138.683 379.992Z\",\n                        fill: \"#C2CAC2\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 20,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M294.263 159.052C278.903 132.682 276.793 101.952 269.103 73.0521C263.193 50.8421 253.103 27.1521 232.863 14.4221C211.393 0.942054 183.213 3.61205 161.973 16.2021C140.413 28.9721 125.873 51.3221 117.673 74.5821C107.883 102.282 106.293 131.972 105.153 161.072C105.023 164.612 99.4927 164.702 99.6427 161.152C99.8427 156.382 100.033 151.602 100.303 146.802C100.473 142.802 100.733 138.802 101.043 134.802C102.803 110.202 106.483 85.7121 116.373 62.9521C126.593 39.4121 143.843 17.5721 167.813 7.04205C190.743 -3.04795 218.523 -3.00795 239.283 12.1821C259.283 26.8621 269.283 51.2321 275.183 74.5921C279.283 91.0021 281.813 108.012 286.253 124.392C287.173 127.732 288.163 131.052 289.253 134.342C291.746 141.961 295.016 149.303 299.013 156.252C300.803 159.322 296.073 162.122 294.263 159.052Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 21,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M309.713 132.412C309.712 132.897 309.59 133.375 309.358 133.801C309.126 134.227 308.79 134.589 308.383 134.852C306.864 135.595 305.263 136.155 303.613 136.522C300.331 137.295 296.905 137.198 293.673 136.242C292.122 135.769 290.64 135.097 289.263 134.242C286.66 132.72 284.426 130.64 282.723 128.152C282.361 127.518 282.264 126.768 282.451 126.062C282.638 125.357 283.095 124.753 283.723 124.382C284.108 124.15 284.546 124.02 284.996 124.004C285.446 123.989 285.892 124.088 286.293 124.292C286.786 124.531 287.207 124.897 287.513 125.352C289.344 127.96 291.983 129.893 295.023 130.852C298.135 131.794 301.471 131.682 304.513 130.532C304.896 130.394 305.271 130.23 305.633 130.042C306.268 129.694 307.013 129.604 307.713 129.79C308.413 129.976 309.014 130.424 309.393 131.042C309.623 131.461 309.733 131.935 309.713 132.412Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 22,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M395.813 178.562C396.003 180.892 393.153 183.082 391.313 180.882L390.643 180.072C382.846 170.73 376.366 160.363 371.383 149.262C366.933 139.262 364.713 128.772 361.223 118.432C357.963 108.852 351.333 101.902 340.953 100.792C336.237 100.297 331.476 101.13 327.207 103.195C322.939 105.26 319.332 108.477 316.793 112.482C312.793 118.482 310.793 125.372 309.713 132.412C309.643 132.762 309.593 133.102 309.523 133.412C308.873 137.822 308.523 142.292 308.173 146.672C307.903 150.192 302.403 150.302 302.663 146.752C302.923 143.372 303.213 139.932 303.613 136.492C303.843 134.492 304.133 132.492 304.473 130.552C305.913 122.082 308.523 113.912 313.953 106.962C326.593 90.7021 353.693 90.9621 363.643 109.962C366.403 115.222 367.793 121.022 369.323 126.722C370.933 132.858 372.975 138.873 375.433 144.722C380.398 156.317 387.035 167.121 395.133 176.792C395.545 177.293 395.783 177.914 395.813 178.562Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 23,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M396.183 180.522C396.309 179.833 396.177 179.121 395.813 178.522C394.583 176.622 391.243 176.412 390.813 179.142C390.773 179.444 390.706 179.742 390.613 180.032C389.223 186.722 383.303 190.972 377.223 193.452C370.163 196.362 362.523 197.712 355.813 201.502C353.879 202.614 352.054 203.907 350.363 205.362C347.363 208.032 344.733 211.422 344.473 215.182C344.443 215.662 344.443 216.143 344.473 216.622V216.802C344.873 220.802 348.193 221.802 351.563 222.622L360.693 224.712C361.923 225.012 363.163 225.282 364.403 225.582C364.846 225.699 365.311 225.695 365.753 225.572C366.194 225.449 366.594 225.211 366.913 224.882C367.257 224.53 367.509 224.098 367.646 223.626C367.784 223.153 367.804 222.654 367.703 222.172C366.513 216.032 365.323 209.912 364.133 203.762C364.993 203.432 365.853 203.082 366.683 202.762C378.333 198.932 394.063 194.872 396.183 180.522ZM353.803 217.472C352.933 217.272 350.493 217.232 350.003 216.472C349.98 216.427 349.953 216.383 349.923 216.342C349.84 215.962 349.882 215.566 350.043 215.212V215.152C350.356 214.362 350.758 213.61 351.243 212.912C353.215 210.029 355.898 207.704 359.033 206.162C359.913 210.552 360.763 214.972 361.613 219.362C359.013 218.672 356.403 218.082 353.803 217.472Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 24,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M350.393 205.402C350.333 208.632 350.223 211.852 350.043 215.082V215.142C350.043 215.372 350.043 215.612 350.043 215.842C350.051 215.989 350.027 216.136 349.973 216.272C349.413 219.092 345.143 219.272 344.583 216.692C344.518 216.455 344.494 216.208 344.513 215.962C344.513 215.722 344.513 215.482 344.513 215.252C345.424 199.367 344.892 183.431 342.923 167.642C342.473 164.112 347.983 164.082 348.433 167.562C349.998 180.112 350.653 192.758 350.393 205.402Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 25,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M366.203 222.902C365.203 221.972 363.203 221.792 362.323 222.952C361.85 223.588 361.325 224.184 360.753 224.732C352.173 233.282 337.013 229.732 327.113 236.322C322.723 239.252 319.043 244.002 318.703 249.402C318.678 249.812 318.678 250.222 318.703 250.632C318.893 256.032 322.393 260.182 326.293 263.632C327.013 264.272 327.753 264.892 328.503 265.482C329.01 265.92 329.653 266.168 330.323 266.183C330.993 266.197 331.647 265.978 332.173 265.562C332.482 265.308 332.732 264.989 332.904 264.628C333.077 264.267 333.169 263.872 333.173 263.472C333.506 255.312 333.839 247.152 334.173 238.992L335.033 238.662C345.603 235.262 358.873 236.662 366.333 226.792C366.761 226.248 367.009 225.584 367.043 224.892C367.061 224.519 366.995 224.146 366.85 223.801C366.704 223.457 366.483 223.149 366.203 222.902ZM324.203 249.092C324.702 246.35 326.212 243.896 328.433 242.212C328.223 247.352 328.003 252.492 327.793 257.662C325.523 255.282 323.733 252.482 324.233 249.092H324.203Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 26,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M332.233 173.192C329.377 198.407 324.84 223.402 318.653 248.012C317.793 251.452 323.143 252.782 324.003 249.332C330.19 224.722 334.727 199.727 337.583 174.512C337.973 171.042 332.633 169.672 332.233 173.192Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 27,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M332.113 265.572C332.113 265.622 332.033 265.652 332.013 265.702C327.233 270.862 320.933 273.952 315.143 277.782C308.363 282.212 304.093 287.912 303.453 296.182C302.313 311.182 310.063 328.372 299.453 341.532C299.098 342.013 298.596 342.364 298.023 342.532C295.753 343.222 293.023 340.872 294.793 338.642C295.133 338.222 295.433 337.792 295.793 337.372C304.733 324.442 296.023 306.682 298.533 292.112C298.583 291.722 298.653 291.352 298.733 290.962C299.603 286.946 301.478 283.216 304.183 280.122C306.191 277.759 308.516 275.686 311.093 273.962C316.153 270.482 321.733 267.772 326.283 263.672C326.991 263.048 327.659 262.38 328.283 261.672C330.653 259.062 334.273 262.972 332.113 265.572Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 28,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M301.133 212.532L298.223 290.802C298.093 294.352 303.593 294.252 303.733 290.722L306.643 212.452C306.773 208.902 301.263 208.992 301.133 212.532Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 29,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M106.003 136.892C104.73 140.522 102.798 143.885 100.303 146.812C96.9339 150.762 92.605 153.779 87.7327 155.572C87.4027 155.702 87.0627 155.812 86.7327 155.922C86.03 156.116 85.279 156.024 84.6439 155.666C84.0088 155.308 83.541 154.714 83.3427 154.012C83.181 153.393 83.2369 152.738 83.5008 152.155C83.7648 151.573 84.2209 151.098 84.7927 150.812C84.9458 150.74 85.1027 150.677 85.2627 150.622C85.7527 150.462 86.2627 150.292 86.7227 150.102C86.8756 150.054 87.023 149.99 87.1627 149.912L87.7427 149.672C88.6527 149.232 89.5127 148.752 90.3627 148.242C91.2127 147.732 91.9727 147.192 92.7327 146.602C92.8305 146.509 92.9341 146.422 93.0427 146.342C93.2427 146.182 93.4227 145.992 93.6327 145.832C93.9927 145.512 94.3327 145.192 94.6327 144.832C95.3455 144.149 96.0135 143.421 96.6327 142.652C96.8127 142.442 96.9627 142.232 97.1227 142.042L97.2227 141.912C97.2227 141.862 97.2227 141.912 97.3027 141.812C97.6127 141.382 97.8927 140.932 98.1727 140.512C98.6827 139.712 99.1727 138.872 99.5827 138.022C99.8127 137.552 100.043 137.072 100.243 136.602C100.243 136.602 100.393 136.202 100.423 136.152C100.453 136.102 100.543 135.782 100.623 135.572C100.715 135.29 100.842 135.021 101.003 134.772C101.33 134.185 101.863 133.74 102.499 133.521C103.134 133.303 103.828 133.327 104.448 133.588C105.067 133.849 105.568 134.33 105.855 134.938C106.142 135.546 106.194 136.238 106.003 136.882V136.892Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 30,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M89.6527 164.642C81.2127 159.342 79.2527 149.562 74.2127 141.642C68.0327 131.982 56.2127 133.462 46.9027 137.562C37.6829 141.615 30.1573 148.745 25.6127 157.732C20.1827 168.612 19.3227 181.292 16.6127 192.982C14.4091 202.356 11.576 211.57 8.13272 220.562C7.42272 222.492 6.67272 224.392 5.88272 226.292C5.63272 226.952 5.35272 227.632 5.07272 228.292C4.26272 230.222 2.27272 230.062 1.07272 228.982C0.980315 228.908 0.899438 228.82 0.832725 228.722C0.44157 228.324 0.178315 227.818 0.0767514 227.269C-0.0248122 226.72 0.0399503 226.154 0.262726 225.642C6.19162 211.333 10.6024 196.442 13.4227 181.212C15.6627 169.352 17.9727 157.442 25.4927 147.602C31.8909 139.237 40.8272 133.171 50.9627 130.312C60.8627 127.542 71.3127 128.382 77.7827 137.152C80.7027 141.152 82.4627 146.232 84.7827 150.812C85.6434 152.482 86.6471 154.075 87.7827 155.572C89.0288 157.256 90.5705 158.699 92.3327 159.832C95.3027 161.702 92.6427 166.542 89.6527 164.642Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 31,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M57.3627 234.982C55.1447 235.766 52.8049 236.148 50.4527 236.112C47.7579 236.084 45.0833 235.642 42.5227 234.802C41.4427 234.472 40.3827 234.092 39.3327 233.692C39.3327 233.692 39.2727 233.692 39.2527 233.692C37.9627 233.192 36.6927 232.692 35.4227 232.052C34.1527 231.412 32.8327 230.852 31.5627 230.212L29.3927 229.142C22.6627 225.802 12.9827 222.222 6.61273 227.662C6.011 228.144 5.46435 228.69 4.98273 229.292C4.75437 229.592 4.45798 229.834 4.11798 229.997C3.77797 230.16 3.40409 230.24 3.02713 230.23C2.65017 230.22 2.28093 230.121 1.94983 229.941C1.61873 229.76 1.33524 229.504 1.12272 229.192C0.982875 229.043 0.865023 228.875 0.772727 228.692C0.467095 228.194 0.325833 227.612 0.368899 227.028C0.411964 226.445 0.637181 225.89 1.01273 225.442C2.8692 223.173 5.32594 221.472 8.10273 220.532C13.5027 218.622 19.9127 219.312 25.2627 221.302C34.1827 224.632 43.4927 232.022 53.3827 230.202C49.5356 212.506 47.131 194.527 46.1927 176.442C46.0027 172.872 51.5127 172.822 51.6927 176.352C52.6215 194.946 55.1577 213.425 59.2727 231.582C59.4562 232.286 59.3597 233.033 59.0035 233.667C58.6473 234.301 58.0592 234.773 57.3627 234.982Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 32,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M39.2727 233.702C39.1927 233.762 39.1127 233.842 39.0327 233.892C38.7562 234.066 38.4566 234.201 38.1427 234.292C31.0092 236.384 23.5315 237.04 16.1427 236.222C10.8127 235.622 3.63273 234.572 1.14273 229.222C1.09789 229.146 1.06102 229.066 1.03273 228.982C0.875682 228.661 0.748482 228.326 0.65273 227.982C-0.34727 224.672 4.65273 223.182 5.87273 226.312C5.90868 226.378 5.93559 226.449 5.95273 226.522C6.09279 226.962 6.32455 227.368 6.63273 227.712C7.63621 228.678 8.89032 229.343 10.2527 229.632C12.9536 230.373 15.7261 230.822 18.5227 230.972C22.8699 231.273 27.2378 231.025 31.5227 230.232C33.1527 229.922 34.7427 229.562 36.3327 229.112L36.5927 229.032C39.6127 228.142 41.1027 232.002 39.2727 233.702Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 33,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M39.3527 233.732C39.2565 233.804 39.1481 233.858 39.0327 233.892C38.712 234.007 38.3735 234.065 38.0327 234.062C37.4311 234.098 36.8366 233.916 36.3588 233.548C35.8811 233.181 35.5522 232.653 35.4327 232.062C35.2777 231.519 35.2902 230.943 35.4687 230.407C35.6471 229.872 35.9832 229.403 36.4327 229.062C36.883 228.718 37.4359 228.535 38.0027 228.542C41.0027 228.542 41.5227 232.572 39.3527 233.732Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 34,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M84.2927 263.592C83.8626 263.668 83.4198 263.627 83.0114 263.472C82.6029 263.317 82.244 263.055 81.9727 262.712C81.752 262.411 81.5892 262.072 81.4927 261.712C79.8927 255.122 73.8427 251.882 67.8027 249.712C66.3027 249.162 64.8027 248.712 63.4027 248.232C62.9827 248.112 62.5827 247.982 62.1627 247.832C54.7327 245.452 47.1627 242.492 42.8627 235.552C42.7133 235.32 42.5988 235.067 42.5227 234.802C41.6627 232.082 45.8527 229.922 47.6027 232.702C48.3843 233.952 49.3369 235.086 50.4327 236.072C55.4327 240.642 63.0027 242.072 69.2227 244.292C73.3632 245.66 77.2245 247.76 80.6227 250.492C83.053 252.477 84.933 255.053 86.0827 257.972C86.353 258.689 86.5833 259.42 86.7727 260.162C86.8773 260.554 86.8934 260.964 86.8199 261.362C86.7463 261.761 86.585 262.138 86.3475 262.466C86.1101 262.795 85.8025 263.066 85.447 263.261C85.0916 263.456 84.6973 263.569 84.2927 263.592Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 35,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M69.8627 179.612C68.9327 176.182 63.6227 177.662 64.5527 181.082C71.7394 207.689 77.8027 234.565 82.7427 261.712C83.3827 265.202 88.6827 263.712 88.0527 260.232C83.1127 233.112 77.0494 206.239 69.8627 179.612Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 36,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M87.8927 260.522C87.856 261.096 87.7859 261.667 87.6827 262.232C86.7427 267.492 83.1027 271.472 78.9027 274.792C74.7027 278.112 69.0527 281.122 67.3827 286.552C67.3903 286.588 67.3903 286.626 67.3827 286.662C66.3827 289.402 61.7227 289.152 61.9927 285.952C61.9927 285.692 61.9927 285.422 62.0627 285.162C63.0327 272.716 63.0829 260.215 62.2127 247.762C62.2127 247.112 62.1127 246.452 62.0827 245.762C61.8227 242.222 67.3227 242.162 67.5827 245.672C67.6827 246.982 67.7827 248.292 67.8527 249.602C68.3925 258.519 68.4726 267.457 68.0927 276.382C69.5639 275.032 71.1025 273.757 72.7027 272.562C76.1527 270.022 80.7027 266.962 82.0227 262.642C82.2476 261.963 82.3788 261.257 82.4127 260.542C82.4127 260.352 82.4127 260.172 82.4827 260.012C82.7142 259.267 83.2269 258.641 83.9121 258.268C84.5973 257.894 85.401 257.803 86.1527 258.012C86.7019 258.141 87.1837 258.469 87.5051 258.933C87.8265 259.396 87.9646 259.963 87.8927 260.522Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 37,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M96.7227 314.392C96.1756 313.783 95.5947 313.206 94.9827 312.662C90.3127 308.532 84.4527 306.162 79.3627 302.612C73.8017 298.685 69.6063 293.119 67.3627 286.692C67.2448 286.429 67.1445 286.158 67.0627 285.882C66.881 285.398 66.5718 284.972 66.1679 284.649C65.764 284.326 65.2804 284.119 64.7682 284.048C64.256 283.977 63.7342 284.046 63.258 284.248C62.7818 284.449 62.3688 284.775 62.0627 285.192C61.8283 285.499 61.6782 285.861 61.6273 286.243C61.5764 286.626 61.6266 287.015 61.7727 287.372C63.6298 293.118 66.7885 298.357 71.0027 302.682C74.2727 306.022 78.1927 308.402 82.1827 310.732C85.6231 322.934 88.1303 335.38 89.6827 347.962C89.7427 348.352 89.7727 348.722 89.8327 349.112C90.1327 351.652 93.6127 353.042 95.0127 350.402C95.043 350.361 95.0698 350.318 95.0927 350.272C98.4827 343.822 101.853 337.112 102.163 329.682V329.372C102.163 329.372 102.163 329.372 102.163 329.312C102.353 323.821 100.403 318.472 96.7227 314.392ZM94.0227 339.802C92.7427 331.432 91.0227 323.142 88.9327 314.932C92.9927 317.932 96.1427 321.652 96.5627 327.152C96.7405 331.511 95.8695 335.849 94.0227 339.802Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 38,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M147.863 373.382C147.201 371.256 145.747 369.466 143.803 368.382C142.737 367.729 141.595 367.208 140.403 366.832C136.153 365.452 131.403 365.632 126.953 365.562C121.953 365.452 116.953 365.502 112.043 364.562C104.673 363.102 96.1627 358.402 95.0427 350.312C94.9725 349.982 94.9257 349.648 94.9027 349.312C94.6927 346.312 90.6827 345.882 89.6327 348.022C89.4388 348.451 89.3562 348.922 89.3927 349.392C89.8727 357.392 95.3927 363.652 102.393 367.142C107.393 369.612 112.743 370.452 118.183 370.812C118.173 370.979 118.173 371.146 118.183 371.312C120.517 380.843 121.751 390.61 121.863 400.422C121.899 401.018 122.125 401.586 122.507 402.045C122.889 402.503 123.408 402.827 123.987 402.97C124.567 403.113 125.176 403.067 125.728 402.839C126.279 402.611 126.744 402.213 127.053 401.702C127.333 401.072 127.633 400.442 127.963 399.802C129.646 396.405 131.83 393.28 134.443 390.532C137.443 387.422 141.153 385.392 144.393 382.532C145.926 381.255 147.072 379.575 147.703 377.682C148.187 376.297 148.243 374.799 147.863 373.382ZM138.683 379.992C134.191 383.057 130.232 386.837 126.963 391.182C126.408 384.372 125.345 377.613 123.783 370.962C125.533 370.962 127.273 371.042 129.003 371.062C132.783 371.162 137.473 370.892 140.853 372.962C144.643 375.322 141.123 378.312 138.683 379.992Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 39,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M198.073 466.502C197.697 466.966 197.176 467.291 196.594 467.423C196.012 467.556 195.402 467.488 194.863 467.232C194.813 467.232 194.783 467.232 194.733 467.232L193.863 466.772C191.113 465.372 188.363 463.912 185.713 462.302C183.903 461.217 182.16 460.025 180.493 458.732C177.354 456.34 174.648 453.428 172.493 450.122C170.248 446.636 168.924 442.638 168.643 438.502C168.443 435.502 168.533 432.682 167.863 430.102C167.777 429.645 167.65 429.196 167.483 428.762C166.859 427.172 165.885 425.743 164.633 424.582C157.633 418.002 146.953 418.682 138.283 415.852C131.663 413.692 125.123 409.252 123.053 402.432C122.811 401.675 122.633 400.899 122.523 400.112C122.023 396.652 127.323 395.112 127.823 398.642C127.869 399.023 127.953 399.398 128.073 399.762C130.013 408.262 139.623 410.902 147.273 412.332C154.403 413.722 162.003 415.082 167.633 419.902C168.17 420.341 168.678 420.815 169.153 421.322C170.855 423.043 172.156 425.12 172.963 427.402C173.361 428.448 173.642 429.535 173.803 430.642C174.553 435.772 173.683 440.642 176.143 445.472C179.793 452.552 186.723 456.832 193.643 460.472C194.863 461.132 196.083 461.742 197.293 462.352L197.423 462.432C197.796 462.604 198.12 462.868 198.364 463.198C198.609 463.528 198.767 463.915 198.823 464.322C198.866 465.119 198.597 465.901 198.073 466.502Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 40,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M97.3127 227.802C97.0927 261.535 96.8661 295.269 96.6327 329.002C96.6327 332.552 102.113 332.472 102.143 328.922C102.369 295.195 102.596 261.462 102.823 227.722C102.853 224.202 97.3427 224.282 97.3127 227.802Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 41,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M147.073 252.802L143.583 375.402C143.483 378.952 148.993 378.852 149.093 375.312L152.573 252.802C152.683 249.202 147.173 249.292 147.073 252.802Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 42,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M174.523 346.922C173.969 373.735 173.429 400.555 172.903 427.382C172.903 427.932 172.903 428.482 172.903 429.032C172.903 432.032 169.093 432.132 167.833 430.032C167.576 429.633 167.444 429.167 167.453 428.692C167.438 428.623 167.438 428.551 167.453 428.482L167.633 419.832C168.113 395.332 168.599 370.839 169.093 346.352C169.073 342.802 174.523 343.382 174.523 346.922Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 43,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M197.303 318.372C197.473 314.822 191.963 314.922 191.793 318.452C189.449 367.031 190.137 415.709 193.853 464.202C194.123 467.732 199.633 467.662 199.363 464.122C195.647 415.629 194.959 366.951 197.303 318.372Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 44,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M195.323 480.972C191.163 485.362 185.203 488.252 182.793 494.062C181.733 496.562 177.393 495.452 177.613 492.772C178.573 481.439 179.523 470.085 180.463 458.712C180.463 458.372 180.533 458.032 180.553 457.712C180.525 457.337 180.575 456.96 180.698 456.605C180.822 456.25 181.016 455.924 181.27 455.646C181.524 455.369 181.832 455.147 182.175 454.993C182.518 454.839 182.889 454.757 183.265 454.751C183.641 454.746 184.014 454.817 184.362 454.961C184.709 455.105 185.024 455.318 185.285 455.588C185.547 455.858 185.751 456.178 185.885 456.53C186.019 456.881 186.079 457.256 186.063 457.632C185.923 459.182 185.793 460.752 185.683 462.302C185.053 469.472 184.453 476.612 183.883 483.812C185.513 482.342 187.223 480.922 188.883 479.482C191.523 477.242 194.753 473.812 194.803 470.162C194.827 469.505 194.722 468.849 194.493 468.232C194.348 467.756 194.146 467.3 193.893 466.872C193.878 466.86 193.866 466.844 193.857 466.827C193.849 466.81 193.844 466.791 193.843 466.772C193.596 466.398 193.465 465.96 193.465 465.512C193.465 465.064 193.596 464.626 193.843 464.252C194.162 463.747 194.625 463.349 195.171 463.108C195.718 462.867 196.325 462.796 196.913 462.902C197.274 462.967 197.616 463.111 197.915 463.323C198.214 463.536 198.463 463.812 198.643 464.132C198.676 464.194 198.712 464.254 198.753 464.312C198.93 464.606 199.09 464.91 199.233 465.222C199.734 466.33 200.052 467.512 200.173 468.722C200.633 473.132 198.423 477.702 195.323 480.972Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 45,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M298.643 341.802C298.443 342.022 298.233 342.232 298.023 342.472C294.853 345.982 293.263 350.272 292.093 354.832C291.823 355.882 291.573 356.942 291.353 358.012C290.203 363.332 289.283 368.802 286.973 373.532C281.423 384.942 268.523 388.442 257.703 392.802C247.703 396.802 237.263 403.172 235.703 413.952C235.653 414.272 235.603 414.612 235.583 414.952C235.469 416.391 235.499 417.839 235.673 419.272C236.363 425.272 237.673 431.272 234.173 436.662C231.583 440.662 227.423 443.292 223.343 445.582C218.273 448.412 213.433 451.132 209.273 455.252C205.443 459.149 202.353 463.71 200.153 468.712L199.473 470.322C198.473 472.702 195.723 471.982 194.773 470.152C194.433 469.57 194.322 468.882 194.463 468.222C194.463 468.062 194.563 467.882 194.633 467.692C194.703 467.502 194.763 467.402 194.813 467.272C194.943 466.982 195.043 466.692 195.193 466.402C195.699 465.194 196.266 464.012 196.893 462.862L197.203 462.302C197.743 461.302 198.353 460.302 198.973 459.302C200.913 456.303 203.176 453.527 205.723 451.022C210.213 446.632 215.493 443.662 220.963 440.592C225.743 437.902 230.783 434.592 231.093 428.592C231.403 423.132 229.543 417.992 230.193 412.592C230.306 411.658 230.496 410.735 230.763 409.832C231.771 406.457 233.474 403.33 235.763 400.652C240.943 394.472 248.763 390.472 256.183 387.472C262.263 385.052 268.653 383.072 274.183 379.552C279.483 376.222 282.383 371.462 284.073 365.552C285.073 362.182 285.733 358.662 286.523 355.182C287.753 349.952 289.273 344.812 292.523 340.492C293.156 339.599 293.865 338.763 294.643 337.992C294.931 337.68 295.297 337.449 295.703 337.322C298.143 336.492 300.813 339.682 298.643 341.802Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 46,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M292.523 340.512C292.393 345.312 292.253 350.082 292.053 354.862C292.053 355.362 292.053 355.862 292.003 356.332C291.995 356.968 291.749 357.579 291.313 358.042C289.853 359.742 286.383 359.242 286.493 356.412C286.493 356.022 286.493 355.602 286.493 355.202C287.933 318.075 288.116 280.929 287.043 243.762C286.943 240.222 292.443 240.142 292.553 243.682C293.526 275.949 293.516 308.225 292.523 340.512Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 47,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M235.823 390.992C235.823 394.192 235.823 397.422 235.823 400.642C235.823 405.082 235.773 409.512 235.763 413.942V414.182C235.759 414.44 235.718 414.696 235.643 414.942C234.893 417.702 230.223 417.512 230.253 414.262C230.253 413.712 230.253 413.162 230.253 412.612C230.253 405.422 230.303 398.262 230.363 391.102C230.343 387.512 235.853 387.422 235.823 390.992Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 48,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M169.053 100.692C162.173 97.8321 156.393 104.272 154.773 110.912C153.907 114.955 153.475 119.078 153.483 123.212C153.291 127.489 153.849 131.767 155.133 135.852C157.133 141.802 163.423 150.762 170.263 146.412C181.943 139.012 182.253 106.182 169.053 100.692Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 49,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M220.593 148.872C226.413 149.172 230.593 144.942 232.473 140.662C236.844 130.506 237.201 119.071 233.473 108.662C232.023 104.562 229.943 99.3721 224.963 97.5221C219.773 95.6021 215.373 99.1121 213.283 102.962C208.523 111.712 203.073 147.972 220.593 148.872Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 50,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M200.043 178.132C199.63 177.736 199.099 177.485 198.531 177.416C197.963 177.348 197.388 177.465 196.893 177.752C196.045 178.245 195.409 179.031 195.103 179.962C194.921 180.123 194.766 180.312 194.643 180.522C193.77 182.269 193.482 184.249 193.821 186.172C194.159 188.095 195.106 189.858 196.523 191.202C197.024 191.678 197.692 191.939 198.383 191.93C199.074 191.92 199.734 191.641 200.223 191.152C201.752 189.318 202.575 186.997 202.542 184.609C202.509 182.221 201.623 179.923 200.043 178.132Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                        lineNumber: 51,\n                        columnNumber: 17\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n                lineNumber: 12,\n                columnNumber: 17\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/forthSoulSVG.tsx\",\n            lineNumber: 11,\n            columnNumber: 13\n        }, undefined)\n    }, void 0, false);\n};\n_s(ForthSoulSVG, \"P+FhvqxVKsKb26oVn7NFJMMaxg4=\", false, function() {\n    return [\n        _hook_useForthSoulRender__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n    ];\n});\n_c = ForthSoulSVG;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ForthSoulSVG);\nvar _c;\n$RefreshReg$(_c, \"ForthSoulSVG\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/svg/forthSoulSVG.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/svg/secondSoulSVG.tsx":
/*!******************************************!*\
  !*** ./components/svg/secondSoulSVG.tsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _hook_useSecondSoulRender__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../hook/useSecondSoulRender */ \"(app-pages-browser)/./hook/useSecondSoulRender.ts\");\n\nvar _s = $RefreshSig$();\n\nconst SecondSoulSVG = ()=>{\n    _s();\n    const tl = (0,_hook_useSecondSoulRender__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                id: \"svg\",\n                className: \"soul2 absolute top-[15rem]\",\n                width: \"1720\",\n                height: \"172\",\n                viewBox: \"0 0 1720 172\",\n                fill: \"none\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                    id: \"path2\",\n                    className: \"block m-auto opacity-0\",\n                    d: \"M1718.81 15.9769C1049 488.5 852 -311.5 1.25185 149.61\",\n                    stroke: \"black\",\n                    strokeLinecap: \"round\"\n                }, void 0, false, {\n                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                    lineNumber: 9,\n                    columnNumber: 17\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                lineNumber: 8,\n                columnNumber: 13\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                id: \"soul2\",\n                className: \"soul2 absolute blur-[3px]\",\n                width: \"150\",\n                height: \"335\",\n                viewBox: \"0 0 430 335\",\n                fill: \"none\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                    clipPath: \"url(#clip0_14_72)\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            fillRule: \"evenodd\",\n                            clipPath: \"evenodd\",\n                            d: \"M429.7 62.5269C429.767 63.3935 429.767 64.2268 429.7 65.0268C429.6 68.6268 429.1 72.1268 428.4 75.6268C427.6 79.3268 426.6 82.9268 425.4 86.4268C424.5 89.0268 423.8 91.7268 421.9 93.7268C421.9 93.7935 421.9 93.8935 421.9 94.0268C421.967 94.3602 421.967 94.6602 421.9 94.9268C421.967 95.5935 421.967 96.2935 421.9 97.0268C421.5 104.027 417.9 110.727 412.2 115.227V115.527C412.267 116.594 412.3 117.66 412.3 118.727C412.2 122.127 411.6 125.527 410.3 128.627C410.3 128.693 410.267 128.794 410.2 128.927C410.2 129.06 410.167 129.227 410.1 129.427C408.6 138.527 405.1 147.227 399.9 154.827C393.9 163.427 385.7 170.227 378.1 177.227V177.627C378.167 179.027 378.167 180.427 378.1 181.827C378.233 182.094 378.3 182.427 378.3 182.827C378.3 182.894 378.267 182.96 378.2 183.027C378 192.327 366.8 194.427 360.1 197.827C356.6 199.627 353.2 201.727 350.4 204.627C347.5 207.627 345.9 211.327 344.7 215.327C342.6 222.927 340.9 230.127 335.3 236.027C330.5 240.927 323.8 244.227 316.9 243.827C308.7 243.427 299.9 237.627 291.8 240.427C291.533 240.493 291.267 240.594 291 240.727C290.8 240.794 290.567 240.827 290.3 240.827C290.167 240.96 290 241.06 289.8 241.127L289.1 241.527C287.967 250.06 286.8 258.593 285.6 267.127C285.533 267.193 285.5 267.293 285.5 267.427C285.5 267.427 285.467 267.46 285.4 267.527C285.4 267.727 285.367 267.894 285.3 268.027C284.5 271.527 281 273.527 278 275.127C277.333 275.46 276.667 275.76 276 276.027C272.4 277.727 268.6 278.927 264.7 279.627C259.5 280.527 254.4 280.227 249.2 280.227C244.3 280.327 239.2 280.927 235.2 284.027C235.133 284.027 235.067 284.06 235 284.127C234.867 284.26 234.733 284.327 234.6 284.327C234.533 284.394 234.433 284.46 234.3 284.527C234.167 284.66 234 284.793 233.8 284.927C233.8 284.927 233.767 284.927 233.7 284.927C233.567 284.993 233.433 285.06 233.3 285.127C233.233 285.127 233.167 285.127 233.1 285.127C233.1 285.26 233.033 285.36 232.9 285.427C232.9 285.493 232.867 285.56 232.8 285.627C232.667 285.76 232.533 285.86 232.4 285.927C226.3 289.627 225.2 297.927 219.6 302.227C212 308.227 202.1 304.827 193.4 306.727H193.3C193.233 306.794 193.167 306.827 193.1 306.827C193.033 306.96 192.9 307.06 192.7 307.127C192.633 307.193 192.567 307.26 192.5 307.327C192.3 307.46 192.067 307.527 191.8 307.527C191.667 307.594 191.533 307.694 191.4 307.827C187 311.427 185.2 317.527 182.4 322.427C179.5 327.327 175.4 331.227 169.6 332.427C163.7 333.627 157.5 332.327 152.2 329.527C150.867 328.86 149.567 328.06 148.3 327.127C148.1 327.06 147.933 326.96 147.8 326.827C147.6 326.76 147.4 326.693 147.2 326.627C147.133 326.627 147.067 326.627 147 326.627C140.2 323.827 132.3 325.527 125.4 322.827C119.8 320.727 115.2 316.627 112.3 311.527C112.3 311.46 112.267 311.394 112.2 311.327C112.2 311.327 112.167 311.36 112.1 311.427C107.1 316.127 101.5 320.127 95.3 323.027C90.8 325.227 86 326.927 81.4 324.127C77.1 321.627 73.1 318.027 69.2 314.927C69.1333 314.86 69.0667 314.827 69 314.827C68.9333 314.894 68.9 314.96 68.9 315.027C68.0334 316.027 67.1667 317.06 66.3 318.127C66.1667 318.26 66.0667 318.36 66 318.427C65.6 318.927 65.1 319.127 64.7 319.127C64.3 319.193 63.9333 319.16 63.6 319.027C63.4667 319.027 63.3667 318.993 63.3 318.927C53.4 314.527 45.1 307.327 39 298.427C38.8 298.16 38.6667 297.893 38.6 297.627C37.5333 297.693 36.5 297.827 35.5 298.027C35.2333 298.027 35 298.06 34.8 298.127C34.5334 298.193 34.3 298.227 34.1 298.227C33.8333 298.294 33.6 298.327 33.4 298.327C32.8667 298.394 32.3334 298.493 31.8 298.627C26 299.527 19.8 300.127 14.2 298.127C5.80001 295.127 3.3 287.627 3 279.527C3 278.527 3 277.493 3 276.427C3.1 271.927 3.80002 267.427 4.30002 263.627C4.36668 263.227 4.53335 262.893 4.80002 262.627C4.70002 262.027 5.10002 261.427 5.80002 261.127C9.30002 259.627 12.8 258.127 16.2 256.527C16.2667 256.527 16.3334 256.527 16.4 256.527C12.4 251.327 10.5 245.127 10.2 238.627C10.1333 237.36 10.1333 236.094 10.2 234.827C10.3 232.427 10.5 230.227 10.8 227.927C11.4 224.127 11.8 220.027 13 216.427C14.8 210.927 21.3 210.127 26.1 208.427C26.3 208.36 26.4667 208.294 26.6 208.227C26.6667 208.227 26.7 208.227 26.7 208.227C25.4 205.127 24.8 201.727 24.8 198.427C24.7 195.927 25.1 193.527 25.8 191.127C25.9 190.627 26.2 190.227 26.5 190.027C26.6 189.327 27 188.627 27.9 188.327C31.9667 187.327 35.9667 186.26 39.9 185.127C71.1 176.527 101.2 164.827 126 143.527C137.4 133.827 147.5 122.627 155.9 110.227C165.5 96.2268 172.5 80.7268 179.5 65.3268C191.5 38.9268 206.9 6.22683 238.9 0.726833C252.5 -1.57317 266.6 1.72683 278.4 8.62683C290.8 15.9268 300.4 27.3268 306.9 40.1268C315.6 57.5268 318.5 76.3268 318.9 95.4268C318.967 97.5602 319 99.6602 319 101.727C319.133 101.793 319.233 101.927 319.3 102.127C320.8 104.827 323.6 106.927 326.8 107.227C330 107.527 333.5 106.127 335.5 103.527C336.8 99.3268 338 95.1268 339.1 90.8268C341.4 82.4268 344 73.9268 348.6 66.5268C353.3 59.0268 360 53.7268 368.2 50.4268C377.1 46.7268 386.6 45.0268 396.1 47.4268C405.6 49.9268 415.4 55.7268 425.4 51.9268C425.6 51.8602 425.767 51.8268 425.9 51.8268C426.9 51.4268 428.2 51.7268 428.5 53.1268C429.3 56.2268 429.7 59.4269 429.7 62.5269ZM404.1 137.227C404.1 137.094 404.133 136.927 404.2 136.727C402.1 138.727 399.7 140.327 397.3 142.027C392.5 145.327 387.7 148.527 384.3 153.427C380.7 158.527 378.6 164.627 378.3 170.927C378.3 171.327 378.2 171.66 378 171.927C378.067 171.86 378.133 171.794 378.2 171.727C384.7 165.927 391.4 160.027 396.4 152.827C399.7 148.027 402.3 142.727 404.1 137.227ZM373.5 185.627C373.567 185.56 373.6 185.46 373.6 185.327C367.1 183.427 360.3 186.227 355.4 190.727C351.6 194.427 348.8 198.827 346.3 203.427C346.433 203.16 346.6 202.927 346.8 202.727C349.6 199.627 352.9 197.127 356.7 195.027C360 193.327 363.4 192.027 366.8 190.527C369.3 189.527 372.2 188.027 373.5 185.627ZM340.7 213.127C340.7 213.193 340.667 213.227 340.6 213.227C340.6 213.294 340.6 213.36 340.6 213.427C340.5 214.027 340.2 214.427 339.8 214.627C339.667 214.76 339.567 214.894 339.5 215.027C336.9 219.027 333.9 222.827 330.1 225.727C324.5 229.927 317.7 232.127 310.7 232.427C310.433 232.427 310.167 232.36 309.9 232.227C309.8 232.227 309.7 232.227 309.7 232.127C309.633 232.193 309.533 232.26 309.4 232.327C307 234.427 303.6 235.227 300.5 236.227C300.767 236.294 301 236.327 301.2 236.327C305.7 237.227 310.1 238.827 314.7 239.627C322.2 240.727 329.2 237.227 333.9 231.527C338.5 225.927 339.3 218.827 341.5 212.127C341.567 211.86 341.667 211.627 341.8 211.427C341.4 211.927 341.1 212.527 340.7 213.127ZM140.9 321.227C141.033 321.227 141.167 321.26 141.3 321.327C139.4 319.527 137.6 317.627 135.8 315.727C135.267 315.194 134.7 314.627 134.1 314.027C133.967 313.894 133.833 313.76 133.7 313.627C133.567 313.627 133.467 313.594 133.4 313.527C133 313.327 132.7 312.927 132.6 312.527C132.6 312.527 132.567 312.493 132.5 312.427C128.5 308.527 123.9 304.827 118.2 305.127H118C118 305.127 117.967 305.127 117.9 305.127C117.9 305.26 117.833 305.36 117.7 305.427C117.633 305.56 117.533 305.66 117.4 305.727C117.2 305.927 117.033 306.127 116.9 306.327C116.367 306.994 115.8 307.627 115.2 308.227C115.2 308.294 115.233 308.36 115.3 308.427C117.9 313.727 122.6 317.927 128.3 319.527C132.4 320.727 136.7 320.827 140.9 321.227ZM284.8 244.227C283.5 245.027 282.2 246.027 281 247.127C281 247.127 281 247.16 281 247.227C279 249.127 277.4 251.527 277.5 254.227C277.5 254.694 277.533 255.127 277.6 255.527C277.9 256.727 278.4 257.627 279.1 258.527C279.7 259.327 280.5 260.027 281.2 260.727C281.533 261.127 281.9 261.527 282.3 261.927C283.1 256.127 283.9 250.327 284.7 244.527C284.7 244.394 284.733 244.294 284.8 244.227ZM232.5 241.027V240.627C231.033 240.827 229.533 240.993 228 241.127C223.5 241.527 218.5 242.427 215.7 246.127C215.5 246.427 215.3 246.627 215.2 246.927C215.2 246.927 215.2 246.96 215.2 247.027C215.2 247.094 215.2 247.127 215.2 247.127C215.8 248.527 216.5 249.727 217.3 250.927C220.5 255.227 225.4 258.327 228.6 262.427C230.067 264.427 231.233 266.527 232.1 268.727C232.3 265.727 232.433 262.727 232.5 259.727C232.7 253.46 232.7 247.227 232.5 241.027ZM260.4 210.627C260.4 210.493 260.4 210.36 260.4 210.227C256.8 210.327 253.3 211.127 251.8 214.327C251.8 214.327 251.833 214.36 251.9 214.427C254.7 216.227 257.7 217.727 260.8 218.827C260.733 217.827 260.7 216.86 260.7 215.927C260.567 214.127 260.467 212.36 260.4 210.627ZM61.1 313.227C59.4 307.927 57.1 302.627 52.4 299.727C49.6 298.027 46.4 297.427 43.2 297.327C43.2667 297.46 43.3334 297.594 43.4 297.727C48.1 304.127 54.1 309.227 60.9 313.127C60.9667 313.127 61.0333 313.16 61.1 313.227ZM425.8 63.7268C425.8 63.3935 425.767 63.0268 425.7 62.6268C425.7 61.2268 425.6 59.8268 425.4 58.4268C425.4 58.2935 425.4 58.1935 425.4 58.1268C425.4 58.1268 425.4 58.1602 425.4 58.2268C421.5 62.4268 418 67.1268 417 72.9268C416.933 73.7268 416.9 74.4935 416.9 75.2268C416.9 75.4935 416.9 75.7268 416.9 75.9268C417.2 80.1268 419.3 83.8268 420.7 87.8268C420.7 87.7602 420.733 87.6602 420.8 87.5268C421.2 86.1268 421.7 84.7268 422.2 83.3268C423.2 80.2268 424 77.0268 424.7 73.9268C425.4 70.5268 425.8 67.1268 425.8 63.7268Z\",\n                            fill: \"#FFFDFE\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 13,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M421.7 75.2267C421 78.4267 420.2 81.5267 419.2 84.6267C418.7 86.0267 418.2 87.4268 417.8 88.9268C417.733 88.9934 417.7 89.0934 417.7 89.2267C416 84.2267 413.2 79.8267 414 74.2267C415 68.5267 418.5 63.7268 422.4 59.4268C423.1 64.7268 422.7 70.0267 421.7 75.2267Z\",\n                            fill: \"#C2CAC2\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 14,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M401.2 138.127C399.4 143.827 396.8 149.227 393.4 154.127C388.4 161.427 381.5 167.327 375 173.327C375.2 173.06 375.3 172.727 375.3 172.327C375.6 166.027 377.7 159.927 381.3 154.727C384.7 149.827 389.5 146.627 394.3 143.327C396.7 141.727 399.1 140.027 401.2 138.127Z\",\n                            fill: \"#C2CAC2\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 15,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M370.6 186.727C369.4 189.227 366.4 190.827 363.8 191.927C360.4 193.327 357 194.627 353.7 196.427C349.7 198.527 346.1 201.327 343.3 204.727C345.8 200.127 348.6 195.727 352.4 192.127C357.3 187.527 364.1 184.827 370.6 186.727Z\",\n                            fill: \"#C2CAC2\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 16,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M338.8 212.727C336.3 219.627 335.7 227.027 330.9 232.827C326.2 238.627 319.2 242.127 311.7 240.927C306.9 240.127 302.2 238.427 297.5 237.527C300.7 236.527 304.2 235.727 306.7 233.527C306.967 233.66 307.3 233.727 307.7 233.727C314.7 233.427 321.5 231.327 327.1 227.027C331.1 224.027 334.1 220.127 336.8 215.927C337.2 215.727 337.5 215.327 337.6 214.727C337.6 214.66 337.6 214.627 337.6 214.627C338 214.027 338.4 213.327 338.8 212.727Z\",\n                            fill: \"#C2CAC2\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 17,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M257.8 220.127C254.7 219.027 251.6 217.527 248.8 215.627C250.3 212.527 253.8 211.627 257.4 211.627C257.467 213.494 257.567 215.36 257.7 217.227C257.7 218.227 257.733 219.194 257.8 220.127Z\",\n                            fill: \"#C2CAC2\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 18,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M229.1 270.027C228.233 267.827 227.067 265.76 225.6 263.827C221.5 258.427 214.5 254.827 212.2 248.327C214.8 243.827 220.2 242.927 225 242.427C226.533 242.293 228.033 242.16 229.5 242.027C229.767 251.36 229.633 260.694 229.1 270.027Z\",\n                            fill: \"#C2CAC2\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 19,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M138.3 322.627C134 322.127 129.6 322.127 125.3 320.927C119.5 319.227 114.8 315.027 112.2 309.627C113 308.76 113.733 307.893 114.4 307.027C114.6 306.893 114.767 306.727 114.9 306.527C114.967 306.46 115 306.427 115 306.427C120.8 306.027 125.5 309.927 129.6 313.927C129.7 314.327 130 314.627 130.4 314.827C130.467 314.893 130.567 314.927 130.7 314.927C130.7 314.993 130.7 314.993 130.7 314.927C131.4 315.727 132.1 316.427 132.8 317.127C134.6 318.927 136.4 320.827 138.3 322.627Z\",\n                            fill: \"#C2CAC2\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 20,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M58.1 314.527C51 310.627 44.9 305.327 40.2 298.727C43.4 298.727 46.6 299.327 49.4 301.127C54.1 304.027 56.4 309.327 58.1 314.527Z\",\n                            fill: \"#C2CAC2\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 21,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M281.8 245.527C280.933 251.46 280.1 257.36 279.3 263.227C278.9 262.894 278.533 262.527 278.2 262.127C276.7 260.627 275.1 259.027 274.6 256.927C273.6 251.927 278.1 248.027 281.8 245.527Z\",\n                            fill: \"#C2CAC2\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 22,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M316 103.027C316 105.093 315.967 107.16 315.9 109.227C315.7 119.127 315 128.927 314.2 138.627C314 141.227 310 141.227 310.2 138.627C310.533 134.427 310.833 130.193 311.1 125.927C313.2 94.4266 313 60.3266 294.4 33.2266C278.3 9.82662 246.5 -3.27339 220.5 12.1266C207.3 19.9266 198.1 32.5266 191 45.7266C183.2 60.2266 177.2 75.7266 169.8 90.4266C156.4 117.127 137.6 140.227 113.2 157.627C87.4 176.027 57 185.427 26.7 193.427C26.4334 193.493 26.2 193.56 26 193.627C24.4 194.027 23.4 192.627 23.5 191.327C23.6 190.627 24.0001 189.927 24.9001 189.727C28.9667 188.66 32.9667 187.593 36.9001 186.527C68.1001 177.927 98.2 166.127 123 144.927C134.4 135.127 144.5 123.927 152.9 111.527C162.5 97.5266 169.5 82.0266 176.5 66.6266C188.5 40.2266 203.9 7.62664 235.9 2.02664C249.5 -0.273364 263.6 3.02663 275.4 9.92663C287.8 17.3266 297.4 28.6266 303.9 41.5266C313.5 60.8266 316.1 81.8266 316 103.027Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 23,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M27.3 212.527C27.1667 212.594 27 212.66 26.8 212.727C26 212.927 25.3 212.627 24.8 211.727C24.4 211.06 24.0334 210.327 23.7 209.527C21.5 204.127 21.1 198.127 22.8 192.427C22.9 191.927 23.2 191.627 23.5 191.327C24.9 190.427 27.2 191.427 26.7 193.427C26.6334 193.427 26.6 193.427 26.6 193.427C25.2 198.327 25.5 203.527 27.5 208.227C27.7667 208.76 28.0334 209.294 28.3 209.827C28.9 210.927 28.3 212.027 27.3 212.527Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 24,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M138.7 145.427C128.9 154.327 118.6 162.727 107.8 170.527C88.6 184.327 67.9 195.927 46.1 205.227C40.7 207.493 35.2666 209.627 29.8 211.627C29 211.96 28.1666 212.26 27.3 212.527C27.1666 212.593 27 212.66 26.8 212.727C24.8 213.393 22.8333 214.06 20.9 214.727C18.3 215.627 15 216.027 13.9 218.827C12.8 221.727 12.5 225.327 12 228.427C11.5 231.627 11.1 234.927 11.1 238.227C11.2 244.227 12.6 250.427 16.4 255.227C16.6667 255.56 16.8333 255.893 16.9 256.227C17.1 258.027 14.9 259.727 13.6 258.027C13.5333 257.96 13.4667 257.893 13.4 257.827C9.39999 252.627 7.49997 246.427 7.19997 239.927C6.99997 236.327 7.29998 232.827 7.79998 229.227C8.39998 225.527 8.79996 221.427 9.99996 217.827C11.8 212.227 18.3 211.427 23.1 209.727C23.3 209.66 23.5 209.593 23.7 209.527C24.9666 209.127 26.2333 208.693 27.5 208.227C32.0333 206.627 36.5333 204.893 41 203.027C52.6 198.227 63.9 192.827 74.8 186.727C96.8 174.427 117.3 159.627 135.9 142.527C137.8 140.827 140.6 143.627 138.7 145.427Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 25,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M109.4 190.927C103.133 198.127 96.5333 204.96 89.6 211.427C65 234.427 36.3 252.927 5.19999 265.827C5.06666 265.827 4.93333 265.86 4.8 265.927C3.3 266.627 1.8 265.227 1.8 264.027C1.7 263.427 2.1 262.827 2.8 262.427C6.4 260.96 9.93334 259.427 13.4 257.827C14.6 257.294 15.7667 256.76 16.9 256.227C20.8333 254.36 24.7333 252.36 28.6 250.227C58.1 234.427 84.6 213.327 106.6 188.127C108.3 186.127 111.1 189.027 109.4 190.927Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 26,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            fillRule: \"evenodd\",\n                            clipPath: \"evenodd\",\n                            d: \"M63.3 319.127C63.1 319.827 62.4 320.327 61.7 320.427C61.2 320.527 60.8 320.527 60.3 320.327C50.4 315.827 42.1 308.727 36 299.727C35.8 299.46 35.6667 299.193 35.6 298.927C34.3 299.027 33 299.227 31.8 299.427C31.5334 299.493 31.3 299.527 31.1 299.527C30.3 299.66 29.5334 299.793 28.8 299.927C23 300.827 16.8 301.427 11.2 299.427C2.70001 296.427 0.2 288.827 0 280.527C0 279.527 0 278.493 0 277.427C0.2 273.027 0.800018 268.727 1.30002 265.027C1.36668 264.56 1.53335 264.227 1.80002 264.027C2.80002 262.827 5.30001 263.827 5.20001 265.827C5.26668 265.893 5.26668 265.96 5.20001 266.027C4.50001 271.127 4.00001 276.427 4.10001 281.727C4.20001 285.927 5.00002 290.327 8.30002 293.327C14.1 298.427 23.3 296.727 30.2 295.627C30.2667 295.627 30.3334 295.627 30.4 295.627C32.9 295.227 35.4 294.927 38 294.827C43.4 294.527 48.8 295.327 53.3 298.927C58.1 302.827 60.5 308.627 62.2 314.427C62.6 315.627 62.9667 316.827 63.3 318.027C63.4334 318.427 63.4334 318.793 63.3 319.127ZM40.2 298.727C44.9 305.327 51 310.627 58.1 314.527C58.0333 314.393 57.9667 314.26 57.9 314.127C56.3 309.027 54 303.927 49.4 301.127C46.7 299.327 43.6 298.827 40.4 298.727H40.2Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 27,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M100.5 236.327C81.5 257.727 60.6 277.227 38 294.827C36.0667 296.293 34.1667 297.76 32.3 299.227C32.1 299.36 31.9333 299.427 31.8 299.427C31.5333 299.56 31.3 299.593 31.1 299.527C29.6 299.427 28.6 296.927 30.3 295.727C30.3 295.66 30.3334 295.627 30.4 295.627C54.8 277.227 77.3 256.327 97.7 233.427C99.4 231.527 102.2 234.327 100.5 236.327Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 28,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M158.9 186.827C152.2 196.827 145.5 206.827 138.8 216.827C116.6 249.827 93.8 282.327 68.6 313.027C67.7333 314.093 66.8667 315.127 66 316.127C65 317.327 64 318.56 63 319.827C62.6 320.227 62.1 320.427 61.7 320.427C60.2 320.427 58.9 318.427 60.2 316.927C60.8667 316.127 61.5333 315.293 62.2 314.427C69.3 306.027 76.1 297.527 82.8 288.827C108.5 255.227 132 220.027 155.4 184.827C156.8 182.727 160.3 184.627 158.9 186.827Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 29,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M190.4 307.727C190.267 307.794 190.167 307.86 190.1 307.927C189.967 307.994 189.867 308.06 189.8 308.127C189.467 308.327 189.133 308.56 188.8 308.827C184.1 312.427 182.3 318.727 179.4 323.727C176.5 328.727 172.4 332.627 166.6 333.827C160.7 335.027 154.5 333.627 149.2 330.927C147.667 330.06 146.2 329.127 144.8 328.127C142.5 326.527 140.4 324.627 138.3 322.627C136.4 320.827 134.6 318.927 132.8 317.127C132.1 316.427 131.4 315.727 130.7 314.927C130.7 314.994 130.7 314.994 130.7 314.927C130.3 314.594 129.933 314.26 129.6 313.927C125.5 309.927 120.8 306.027 115 306.427C115 306.427 114.967 306.427 114.9 306.427C114.767 306.427 114.633 306.427 114.5 306.427C111.9 306.727 111.9 302.827 114.3 302.527C114.367 302.46 114.433 302.427 114.5 302.427C115.5 302.36 116.5 302.36 117.5 302.427C122.6 302.927 127 306.027 130.8 309.627C131.867 310.56 132.9 311.527 133.9 312.527C134.567 313.194 135.233 313.894 135.9 314.627C142 320.827 148.4 327.527 157.1 329.627C157.167 329.627 157.233 329.627 157.3 329.627C158.5 329.927 159.9 330.127 161.2 330.227C163.9 330.327 166.7 329.927 169.1 328.727C172.5 327.127 174.6 324.127 176.4 320.827C179.5 315.327 181.6 308.927 186.9 305.227C187.3 304.96 187.7 304.694 188.1 304.427C188.5 304.227 188.9 304.16 189.3 304.227C190.1 304.327 190.7 304.927 190.9 305.727C191.2 306.427 191 307.227 190.4 307.727Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 30,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M115.7 305.327C115.7 305.394 115.7 305.427 115.7 305.427C115.633 305.56 115.5 305.727 115.3 305.927C115.3 305.994 115.267 306.06 115.2 306.127C115.067 306.26 114.967 306.36 114.9 306.427C114.767 306.627 114.6 306.827 114.4 307.027C113.733 307.894 113 308.76 112.2 309.627C111.267 310.627 110.267 311.627 109.2 312.627C104.2 317.427 98.5 321.427 92.3 324.427C87.8 326.527 83 328.227 78.4 325.527C74 322.927 70 319.327 66 316.127C65.8 315.927 65.5667 315.76 65.3 315.627C63.3 314.027 66.1 311.227 68.2 312.727C68.3334 312.86 68.4667 312.96 68.6 313.027C72.4 316.027 76 319.227 80 321.827C84.3 324.527 89.2 321.627 93.1 319.527C100.4 315.527 106.8 310.127 112.1 303.627C112.2 303.427 112.4 303.227 112.5 303.127C113 302.427 113.7 302.327 114.3 302.527C115.3 302.827 116.1 304.127 115.7 305.327Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 31,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M169.5 212.527C153.5 243.227 136.1 273.227 117.5 302.427C116.9 303.427 116.3 304.394 115.7 305.327C115.7 305.394 115.7 305.427 115.7 305.427C115.5 305.627 115.333 305.86 115.2 306.127C115.133 306.26 115.067 306.36 115 306.427C115 306.427 114.967 306.46 114.9 306.527C114.767 306.727 114.6 306.894 114.4 307.027C112.8 308.327 110.1 306.727 111.3 304.727L112.1 303.627C131.367 273.427 149.3 242.46 165.9 210.727C167.1 208.427 170.7 210.227 169.5 212.527Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 32,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M217.8 158.527C217.133 158.194 216.467 157.86 215.8 157.527C215.1 157.027 214.7 156.727 214.1 156.327C213 155.227 212 154.227 211.3 153.027C209.7 150.527 208.8 147.827 208.9 144.927C208.9 142.327 204.9 142.327 204.8 144.927C204.8 152.127 209.2 159.127 215.8 162.027C216.8 162.427 218 162.227 218.6 161.227C219.1 160.427 218.8 158.927 217.8 158.527Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 33,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M296.5 195.427C289.7 189.827 286.3 182.927 283.8 174.627C282.7 170.927 281.5 167.227 279.2 164.027C277 160.827 274.1 158.227 271 155.827C264.9 151.127 258.1 145.727 250.2 144.827C242 143.827 236 149.227 229.6 153.527C221.9 158.727 212.3 162.827 203 159.927C200.5 159.127 199.5 163.027 201.9 163.727C209.2 166.027 216.7 164.627 223.5 161.627C227.1 160.027 230.5 157.927 233.7 155.527C236.8 153.327 240 150.627 243.8 149.427C252.1 146.627 259.9 152.527 266.2 157.227C269.4 159.527 272.6 162.027 275.1 165.127C277.7 168.427 279 172.527 280.2 176.527C282.7 185.027 286.7 192.527 293.7 198.227C295.7 199.827 298.5 197.027 296.5 195.427Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 34,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M296.9 198.627C293.7 206.827 286.4 215.227 277.4 217.227C275.1 217.727 273.6 216.327 271.8 215.127C269.4 213.627 266.7 212.827 263.9 212.327C263.167 212.193 262.333 212.06 261.4 211.927C260.1 211.727 258.8 211.627 257.4 211.627C253.8 211.627 250.3 212.527 248.8 215.627C248.667 215.827 248.567 216.06 248.5 216.327C248.1 217.327 247.1 217.727 246.2 217.627C245.6 217.527 245 217.227 244.7 216.727C244.5 216.327 244.4 215.827 244.6 215.227C245.5 212.927 246.9 211.227 248.7 210.027C254.7 205.927 264.7 207.527 270.9 210.127C271.967 210.593 272.967 211.127 273.9 211.727C274.1 211.86 274.267 211.993 274.4 212.127C275.7 213.027 276.2 213.427 277.8 212.827C277.933 212.827 278.033 212.793 278.1 212.727C280.3 211.927 282.4 210.627 284.2 209.327C288.1 206.327 291.2 202.227 293 197.627C293.7 195.627 296.6 196.027 297 197.527C297.067 197.86 297.033 198.227 296.9 198.627Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 35,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M272.3 172.727C272.1 170.127 268.1 170.127 268.3 172.727C269.767 187.06 271.867 201.294 274.6 215.427C275.1 217.927 278.9 216.927 278.5 214.427C275.767 200.627 273.7 186.727 272.3 172.727Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 36,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M261.8 222.227C261.733 222.627 261.6 222.993 261.4 223.327C260.9 224.327 259.8 224.927 258.7 224.627C257.967 224.493 257.233 224.26 256.5 223.927C256.1 223.793 255.7 223.66 255.3 223.527C254.1 223.06 252.933 222.56 251.8 222.027C249.667 220.96 247.633 219.76 245.7 218.427C245.367 218.227 245.133 217.96 245 217.627C244.8 217.36 244.7 217.06 244.7 216.727C244.633 216.393 244.7 216.06 244.9 215.727C245.4 214.827 246.8 214.327 247.7 214.927C248.033 215.193 248.4 215.427 248.8 215.627C251.6 217.527 254.7 219.027 257.8 220.127C257.733 219.193 257.7 218.227 257.7 217.227C257.567 215.36 257.467 213.493 257.4 211.627L257.3 210.427C257.3 209.327 258.3 208.427 259.3 208.427C260.5 208.427 261.3 209.327 261.3 210.427C261.367 210.893 261.4 211.393 261.4 211.927C261.533 213.993 261.633 216.127 261.7 218.327C261.8 219.627 262 221.027 261.8 222.227Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 37,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M248.7 177.227C248.1 190.027 246.3 202.727 243.5 215.227C242.9 217.727 246.8 218.827 247.4 216.327C250.3 203.427 252.1 190.427 252.7 177.227C252.8 174.627 248.8 174.627 248.7 177.227Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 38,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M144.9 287.527C141.233 295.86 137.567 304.193 133.9 312.527C133.633 313.06 133.4 313.593 133.2 314.127C132.8 315.027 131.6 315.327 130.7 314.927C130.7 314.993 130.7 314.993 130.7 314.927C130.567 314.927 130.467 314.893 130.4 314.827C130 314.627 129.7 314.327 129.6 313.927C129.4 313.327 129.4 312.727 129.7 312.127C130.1 311.26 130.467 310.427 130.8 309.627C134.333 301.56 137.9 293.527 141.5 285.527C141.9 284.527 143.3 284.227 144.2 284.727C145.2 285.327 145.4 286.527 144.9 287.527Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 39,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M230.3 285.927C230.3 286.127 230.233 286.294 230.1 286.427C230.1 286.427 230.1 286.46 230.1 286.527C229.967 286.794 229.733 287.027 229.4 287.227C223.3 290.927 222.2 299.227 216.6 303.627C209 309.627 199 306.227 190.3 308.127C190.233 308.127 190.167 308.127 190.1 308.127C190.033 308.127 189.933 308.127 189.8 308.127C187.6 308.127 186.9 304.727 189.3 304.227C190.033 304.027 190.733 303.894 191.4 303.827C195.5 303.327 199.6 303.627 203.7 303.427C207.7 303.327 212 302.627 214.9 299.727C219.9 295.027 221.1 287.727 227.2 283.927C227.267 283.86 227.333 283.827 227.4 283.827C227.6 283.694 227.8 283.594 228 283.527C228.2 283.46 228.367 283.46 228.5 283.527C229.7 283.627 230.5 284.827 230.3 285.927Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 40,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M261.4 223.327C261.4 223.727 261.3 224.027 261.1 224.427C256.1 232.127 248.3 237.227 239.6 239.927C237.5 240.627 235.5 241.027 233.4 241.427C232.133 241.627 230.833 241.794 229.5 241.927V242.027C228.033 242.16 226.533 242.294 225 242.427C220.2 242.927 214.8 243.827 212.2 248.327C212 248.594 211.833 248.86 211.7 249.127C210.9 250.927 208.8 250.227 208.2 248.927C208.1 248.627 208 248.227 208 247.927C208 247.66 208.067 247.394 208.2 247.127C209.7 243.827 212.1 241.927 215 240.627C220.7 238.127 228.3 238.527 234.2 237.227C242.8 235.427 251.2 231.127 256.5 223.927C256.9 223.46 257.267 222.96 257.6 222.427C258.8 220.527 261.4 221.727 261.4 223.327Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 41,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M231.3 281.227C231.3 282.56 231.2 283.86 231 285.127C231 285.46 230.933 285.727 230.8 285.927C230.667 286.127 230.5 286.294 230.3 286.427C230.233 286.427 230.167 286.46 230.1 286.527C228.9 287.027 226.9 286.027 227.1 284.127C227.167 284.06 227.2 283.994 227.2 283.927C228 276.727 225.5 269.327 220.6 264.127C216.2 259.327 210.6 255.727 208.3 249.327C208.233 249.194 208.2 249.06 208.2 248.927C208.2 248.794 208.2 248.66 208.2 248.527C208.3 246.827 211.1 246.227 212.1 248.027C212.1 248.094 212.133 248.194 212.2 248.327C214.5 254.827 221.5 258.427 225.6 263.827C227.067 265.76 228.233 267.827 229.1 270.027C230.6 273.527 231.3 277.327 231.3 281.227Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 42,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M232.3 280.627C232.167 281.96 232.033 283.294 231.9 284.627C231.833 285.094 231.633 285.494 231.3 285.827C231.033 286.094 230.7 286.294 230.3 286.427C230.233 286.427 230.167 286.427 230.1 286.427C229 286.727 227.7 286.127 227.9 284.627C227.9 284.227 227.933 283.86 228 283.527C228.5 279.027 228.8 274.527 229.1 270.027C229.633 260.694 229.767 251.36 229.5 242.027V241.927C229.4 241.427 229.4 240.927 229.4 240.327C229.3 237.727 233.3 237.727 233.4 240.327C233.4 240.66 233.4 241.027 233.4 241.427C233.9 254.527 233.5 267.627 232.3 280.627Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 43,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M196 286.427C194.533 292.227 193 298.027 191.4 303.827C191.267 304.427 191.1 305.06 190.9 305.727C190.767 306.26 190.633 306.827 190.5 307.427C190.433 307.56 190.4 307.66 190.4 307.727C190.333 307.86 190.233 307.993 190.1 308.127C189.8 308.627 189.3 308.827 188.8 308.827C187.5 308.927 186.2 307.927 186.6 306.427C186.733 306.027 186.833 305.627 186.9 305.227C188.633 298.627 190.4 292.027 192.2 285.427C192.8 282.927 196.7 283.927 196 286.427Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 44,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M229.9 181.727C224.1 203.927 216.8 225.727 208.2 247.027C207.2 249.427 211.1 250.427 212.1 248.027C220.7 226.827 228 204.927 233.8 182.727C234.5 180.227 230.6 179.227 229.9 181.727Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 45,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M210.2 184.227C199.667 215.76 188.533 247.027 176.8 278.027C173.4 286.96 169.967 295.86 166.5 304.727C165.5 307.127 169.4 308.127 170.4 305.727C182.533 274.86 194.033 243.727 204.9 212.327C207.967 203.327 211.033 194.294 214.1 185.227C214.9 182.827 211 181.827 210.2 184.227Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 46,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M165.8 311.727C164.7 311.427 163.7 312.127 163.3 313.127C161.033 318.993 158.833 324.893 156.7 330.827C156.3 331.927 157.1 333.027 158.1 333.327C159.2 333.627 160.2 332.927 160.6 331.927C162.733 325.993 164.933 320.06 167.2 314.127C167.6 313.127 166.8 311.927 165.8 311.727Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 47,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M336.2 106.327C336.2 106.394 336.167 106.46 336.1 106.527C336.1 106.66 336.067 106.76 336 106.827C334.4 108.927 332.4 110.527 330 111.527C328.1 112.327 326 112.727 323.8 112.527C320.9 112.327 318.1 111.127 315.9 109.227C314.633 108.16 313.6 106.894 312.8 105.427C311.6 103.327 314.6 101.427 316 103.027C316.133 103.16 316.233 103.294 316.3 103.427C317.8 106.227 320.6 108.227 323.8 108.527C327 108.827 330.5 107.427 332.5 104.927V104.827C333.1 104.027 334.2 103.527 335.2 104.127C335.9 104.527 336.4 105.427 336.2 106.327Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 48,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M424.1 56.827C423.9 56.9603 423.667 57.0936 423.4 57.227C423 57.3603 422.567 57.4936 422.1 57.627C420.767 58.027 419.4 58.2937 418 58.427C409.5 59.227 401.1 55.227 392.9 52.927C383.2 50.227 373.2 52.227 364.2 56.527C356.1 60.427 350.4 66.627 346.4 74.627C341.5 84.627 339.6 95.727 336.2 106.327C336.2 106.394 336.167 106.46 336.1 106.527C334.2 112.527 331.8 118.327 328.1 123.627C326.6 125.727 323.1 123.727 324.6 121.627C326.8 118.427 328.6 115.027 330 111.527C330.933 109.327 331.767 107.127 332.5 104.927C333.8 100.727 335 96.427 336.1 92.127C338.4 83.827 341 75.227 345.6 67.827C350.3 60.327 357 55.127 365.2 51.727C374.1 48.127 383.6 46.327 393.1 48.827C402.6 51.227 412.4 57.027 422.4 53.327C422.6 53.1936 422.767 53.127 422.9 53.127C424.7 52.927 425.5 55.627 424.1 56.827Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 49,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M375.1 178.627C375.167 180.16 375.167 181.694 375.1 183.227C375.033 183.827 374.967 184.427 374.9 185.027C374.9 185.627 374.6 186.127 374.2 186.427C373.1 187.227 371.4 187.027 371 185.727C370.933 185.527 370.9 185.294 370.9 185.027C370.967 184.227 371.033 183.427 371.1 182.627C371.4 175.427 370.5 168.327 369.4 161.127C368.333 153.327 367.167 145.527 365.9 137.727C363.5 122.194 360.933 106.66 358.2 91.127C357.8 88.527 361.6 87.5271 362.1 90.0271C364.9 105.894 367.533 121.794 370 137.727C371.2 145.594 372.367 153.46 373.5 161.327C373.5 161.394 373.5 161.494 373.5 161.627C374.1 165.527 374.6 169.427 374.9 173.427C375.033 175.16 375.1 176.894 375.1 178.627Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 50,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M374.2 186.427C373.8 187.127 373 187.627 372.1 187.227C371.633 187.027 371.133 186.86 370.6 186.727C364.1 184.827 357.3 187.527 352.4 192.127C348.6 195.727 345.8 200.127 343.3 204.727C343.3 204.727 343.267 204.727 343.2 204.727C342.2 206.627 341.1 208.527 340.1 210.427C339.7 211.16 339.267 211.893 338.8 212.627C338.8 212.693 338.8 212.727 338.8 212.727C338.4 213.327 338 214.027 337.6 214.627C337.4 215.027 337.133 215.46 336.8 215.927C334.1 220.127 331.1 224.027 327.1 227.027C321.5 231.327 314.7 233.427 307.7 233.727C307.3 233.727 306.967 233.66 306.7 233.527C306.1 233.227 305.8 232.627 305.8 232.027C305.7 230.927 306.3 229.827 307.6 229.727H307.8C310.333 229.594 312.767 229.193 315.1 228.527C316.5 228.127 317.833 227.66 319.1 227.127C322.6 225.527 325.7 223.327 328.4 220.527C330.5 218.227 332.2 215.727 333.8 213.227C335.9 209.827 337.8 206.327 339.7 202.827C339.9 202.493 340.1 202.16 340.3 201.827C343.8 195.827 347.9 189.827 353.8 185.927C358.9 182.727 365.2 181.127 371.1 182.627C371.3 182.693 371.5 182.76 371.7 182.827C372.167 182.96 372.633 183.127 373.1 183.327C374.5 183.827 374.7 185.427 374.2 186.427Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 51,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M309.7 148.127C307.7 175.46 305.733 202.76 303.8 230.027C303.6 232.627 307.6 232.627 307.8 230.027C309.8 202.76 311.767 175.46 313.7 148.127C313.9 145.527 309.9 145.627 309.7 148.127Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 52,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            fillRule: \"evenodd\",\n                            clipPath: \"evenodd\",\n                            d: \"M307.7 232.427C307.433 232.693 307.167 232.96 306.9 233.227C306.833 233.293 306.767 233.393 306.7 233.527C304.4 235.527 301.2 236.427 298.2 237.327C298 237.393 297.767 237.46 297.5 237.527C296.767 237.793 296.067 238.06 295.4 238.327C293.133 239.193 290.933 240.227 288.8 241.427C288.267 241.693 287.767 241.96 287.3 242.227C286.9 242.427 286.5 242.627 286.1 242.827C284.967 251.36 283.8 259.893 282.6 268.427C282.533 268.627 282.467 268.793 282.4 268.927C282.4 268.993 282.367 269.027 282.3 269.027C281.8 269.927 280.6 270.027 279.6 269.627C279.3 269.427 279.1 269.227 278.9 268.927C278.767 268.727 278.633 268.527 278.5 268.327C276 264.927 272.1 262.527 270.9 258.327C270.833 258.127 270.767 257.893 270.7 257.627C270 253.827 271.4 250.227 273.7 247.227C274.6 246.227 275.5 245.227 276.6 244.427C280.8 240.827 285.9 238.127 290.9 235.827C293.5 234.693 296.1 233.727 298.7 232.927C300.6 232.327 302.4 231.827 303.8 230.627C304.2 230.36 304.533 230.027 304.8 229.627C305.2 229.027 305.8 228.927 306.2 228.927C306.8 228.927 307.3 229.327 307.6 229.727C307.667 229.793 307.733 229.86 307.8 229.927V230.027C308.2 230.727 308.3 231.627 307.7 232.427ZM276.5 260.327C277 261.027 277.6 261.527 278.2 262.127C278.533 262.527 278.9 262.893 279.3 263.227C280.1 257.36 280.933 251.46 281.8 245.527C281.733 245.527 281.7 245.527 281.7 245.527C280.3 246.527 278.7 247.727 277.5 249.027C275.8 250.827 274.5 252.927 274.5 255.227C274.5 255.76 274.533 256.327 274.6 256.927C274.9 258.227 275.6 259.327 276.5 260.327Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 53,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M282.5 267.927C282.5 268.06 282.5 268.227 282.5 268.427C282.5 268.56 282.467 268.727 282.4 268.927C281.8 272.627 278.2 274.827 275 276.427C273.333 277.293 271.633 278.06 269.9 278.727C269.833 278.727 269.767 278.727 269.7 278.727C267.1 279.727 264.4 280.427 261.7 280.927C256.5 281.827 251.4 281.527 246.2 281.627C241.5 281.727 236.7 282.227 232.8 284.927C232.8 284.927 232.767 284.927 232.7 284.927C232.5 285.06 232.267 285.227 232 285.427C231.8 285.627 231.567 285.76 231.3 285.827C231.1 285.893 230.933 285.927 230.8 285.927H230.7C230.567 285.927 230.433 285.927 230.3 285.927C229.8 285.827 229.3 285.527 229 285.127C228.6 284.627 228.4 284.127 228.5 283.527C228.633 283.193 228.867 282.893 229.2 282.627C229.867 282.093 230.567 281.627 231.3 281.227C231.633 280.96 231.967 280.76 232.3 280.627C235.3 279.027 238.5 278.327 241.9 277.927C243.2 277.827 244.6 277.727 245.9 277.727C248.6 277.627 251.3 277.627 253.9 277.627C258.6 277.527 263.1 276.827 267.4 275.327C269.733 274.527 271.967 273.527 274.1 272.327C275.7 271.427 278.1 270.327 278.5 268.327C278.5 268.193 278.5 268.06 278.5 267.927C278.5 267.027 279 266.527 279.7 266.227C280.9 265.627 282.6 266.227 282.5 267.927Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 54,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M245.6 258.327C245.5 255.727 241.5 255.727 241.5 258.327C241.633 265.26 241.767 272.16 241.9 279.027C242 281.627 246 281.627 245.9 279.027C245.767 272.16 245.667 265.26 245.6 258.327Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 55,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M273.8 234.027C273.9 231.427 269.9 231.427 269.8 234.027C269.4 241.76 269.633 249.493 270.5 257.227C270.6 258.227 271.3 259.227 272.5 259.227C273.5 259.227 274.6 258.327 274.5 257.227C273.633 249.493 273.4 241.76 273.8 234.027Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 56,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M407.2 130.227C406.8 131.093 406.333 131.96 405.8 132.827C404.5 134.827 403 136.527 401.2 138.127C399.1 140.027 396.7 141.727 394.3 143.327C389.5 146.627 384.7 149.827 381.3 154.727C377.7 159.927 375.6 166.027 375.3 172.327C375.3 172.727 375.2 173.06 375 173.327C375 173.327 374.967 173.36 374.9 173.427C374.7 173.693 374.467 173.893 374.2 174.027C373 174.627 371.2 174.027 371.3 172.327C371.5 168.46 372.233 164.793 373.5 161.327C376.1 154.027 381 147.827 387.5 143.127C391.9 139.927 396.8 137.227 400.5 133.227C401.8 131.827 402.7 130.327 403.4 128.727C403.533 128.393 403.667 128.06 403.8 127.727C405.2 124.027 405.4 120.027 405.2 115.927C405.2 115.593 405.167 115.227 405.1 114.827C405.1 113.427 406.2 112.827 407.3 112.927C407.633 112.927 407.9 113.027 408.1 113.227C408.233 113.293 408.333 113.36 408.4 113.427C408.8 113.727 409.1 114.127 409.2 114.827C409.2 115.427 409.2 115.993 409.2 116.527C409.4 121.227 409.1 125.927 407.2 130.227Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 57,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M408.4 113.427C393.9 101.327 381.9 86.5268 373.3 69.7268C372.2 67.3268 368.7 69.3268 369.9 71.6268C378.6 88.7268 390.8 104.027 405.6 116.227C407.5 117.827 410.4 115.027 408.4 113.427Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 58,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M424.1 56.8268C424.1 57.3268 424 57.8268 423.5 58.2268C423.167 58.6268 422.8 59.0268 422.4 59.4268C418.5 63.7268 415 68.5268 414 74.2268C413.2 79.8268 416 84.2268 417.7 89.2268C417.9 89.8935 418.1 90.5601 418.3 91.2268C418.567 92.4935 418.767 93.7601 418.9 95.0268C419.5 103.227 415.8 111.427 409.2 116.527C409.133 116.593 409.067 116.66 409 116.727C408.2 117.327 407.5 117.227 407 116.727C406 115.927 405.7 114.227 407 113.227C407.133 113.16 407.233 113.06 407.3 112.927C407.433 112.86 407.533 112.793 407.6 112.727C411.3 109.727 413.8 105.227 414.6 100.427C415.6 94.9268 413.8 90.3268 411.8 85.2268C409.6 79.9268 409.2 74.5268 411.3 69.0268C412.8 65.1268 415.2 61.6268 418 58.4268C418.867 57.4268 419.767 56.4268 420.7 55.4268C420.967 55.1601 421.267 54.9601 421.6 54.8268C422.8 54.5268 424 55.6268 424.1 56.8268Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 59,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M425.4 77.027C424.6 80.627 423.6 84.227 422.4 87.727C421.5 90.427 420.8 93.027 418.9 95.027C418.567 95.427 418.167 95.7603 417.7 96.027C415.7 97.627 413.7 94.127 415.8 92.527C416.8 91.827 417.2 90.327 417.7 89.227C417.7 89.0937 417.733 88.9937 417.8 88.927C418.2 87.427 418.7 86.027 419.2 84.627C420.2 81.527 421 78.427 421.7 75.227C422.7 70.027 423.1 64.727 422.4 59.427C422.333 58.827 422.233 58.227 422.1 57.627C421.967 56.8937 421.833 56.1937 421.7 55.527C421.633 55.2603 421.6 55.027 421.6 54.827C421.6 54.027 422.2 53.427 422.9 53.127C423.9 52.727 425.2 53.127 425.5 54.427C427.3 61.927 427 69.527 425.4 77.027Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 60,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M407.3 129.627C407.3 129.827 407.267 130.027 407.2 130.227C405.7 139.527 402.2 148.427 396.9 156.127C390.9 164.727 382.7 171.527 375.1 178.627C375.033 178.693 374.933 178.793 374.8 178.927C372.9 180.627 370.1 177.827 372 176.027C372.733 175.36 373.467 174.693 374.2 174.027C374.467 173.827 374.7 173.627 374.9 173.427C374.967 173.36 375 173.327 375 173.327C381.5 167.327 388.4 161.427 393.4 154.127C396.8 149.227 399.4 143.827 401.2 138.127C402.2 135.06 402.933 131.927 403.4 128.727C403.4 128.66 403.4 128.627 403.4 128.627C403.467 128.227 403.6 127.927 403.8 127.727C404.9 126.427 407.6 127.427 407.3 129.627Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 61,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M375.3 184.127C375.2 193.627 363.9 195.727 357.1 199.127C353.6 200.927 350.2 203.027 347.4 205.927C344.5 208.927 342.9 212.727 341.7 216.727C339.6 224.227 337.9 231.527 332.3 237.327C327.5 242.227 320.8 245.527 313.9 245.127C305.4 244.727 296.4 238.527 288 242.027C287.8 242.16 287.567 242.227 287.3 242.227C285.3 242.327 283.9 239.427 286 238.527C289.9 236.927 293.7 236.927 297.5 237.527C302.2 238.427 306.9 240.127 311.7 240.927C319.2 242.127 326.2 238.627 330.9 232.827C335.7 227.027 336.3 219.627 338.8 212.727C338.8 212.727 338.8 212.693 338.8 212.627C338.933 212.293 339.067 211.993 339.2 211.727C340.2 209.127 341.6 206.827 343.2 204.727C343.267 204.727 343.3 204.727 343.3 204.727C346.1 201.327 349.7 198.527 353.7 196.427C357 194.627 360.4 193.327 363.8 191.927C366.4 190.827 369.4 189.227 370.6 186.727C370.8 186.393 370.933 186.06 371 185.727C371.133 185.26 371.2 184.727 371.2 184.127C371.2 183.627 371.4 183.127 371.7 182.827C372.6 181.827 374.4 182.027 375.1 183.227C375.233 183.493 375.3 183.793 375.3 184.127Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 62,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M144.8 328.127C144.6 328.127 144.4 328.094 144.2 328.027C137.3 325.127 129.4 326.827 122.4 324.127C116.8 322.027 112.1 317.927 109.2 312.627C109 312.227 108.8 311.794 108.6 311.327C107.5 309.027 111 307.027 112.1 309.427C112.1 309.494 112.133 309.56 112.2 309.627C114.8 315.027 119.5 319.227 125.3 320.927C129.6 322.127 134 322.127 138.3 322.627C141 322.927 143.6 323.427 146.2 324.527C148.4 325.427 146.8 328.427 144.8 328.127Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 63,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M274.3 63.327C273.967 60.927 273.367 58.6603 272.5 56.527C271.6 54.527 270.5 52.127 268.2 51.727C264.3 50.927 260.9 55.727 258.9 58.327C256.2 61.827 254.2 65.727 252.8 69.827C251.3 74.327 250.7 79.227 250.9 84.027C251 85.527 251.1 87.427 251.5 89.327C252 92.527 253.2 96.027 256.1 97.327C260.4 99.327 264.4 95.127 266.4 91.827C269.1 87.627 271.2 82.927 272.7 78.127C274.2 73.427 274.9 68.327 274.3 63.327Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 64,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M298.1 77.4269C297.7 73.9269 296.9 70.4268 295.6 67.1268C294.8 64.9268 293.7 62.4269 291.4 61.8269C290.5 61.2269 289.4 61.0269 288.3 61.2269C285.6 61.8269 284.6 64.8268 284.2 67.1268C283 73.3268 283.5 79.7269 285.3 85.7269C286.1 88.4269 287 91.6269 288.7 93.9269C290.3 96.1269 293.2 96.7269 295.2 94.6269C297 92.6269 297.4 89.2269 297.8 86.7269C298.3 83.6269 298.4 80.5269 298.1 77.4269Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 65,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M342.5 167.327C342.433 179.26 341.5 191.094 339.7 202.827C339.1 206.727 338.4 210.727 337.6 214.627C337.6 214.627 337.6 214.66 337.6 214.727C337.5 215.327 337.2 215.727 336.8 215.927C335.5 216.727 333.4 215.627 333.7 213.727C333.767 213.527 333.8 213.36 333.8 213.227C336.8 198.027 338.4 182.727 338.5 167.327C338.5 164.727 342.5 164.727 342.5 167.327Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 66,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M315.1 192.627V228.027C315.1 230.627 319.1 230.627 319.1 228.027V192.627C319.1 190.127 315.1 190.127 315.1 192.627Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 67,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M212.7 24.5269C203.5 32.7269 196.8 43.4269 193.3 55.2269C192.6 57.7269 196.5 58.7269 197.2 56.3269C200.5 45.1269 206.9 35.1269 215.5 27.3269C217.4 25.6269 214.6 22.7269 212.7 24.5269Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 68,\n                            columnNumber: 17\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M280 123.227C279.5 122.527 278.4 122.427 277.6 122.827C277 123.227 276.5 123.827 276.2 124.527C276.1 124.627 276 124.827 275.9 124.927C274.5 127.627 275 131.027 277.2 133.127C277.9 133.827 279.3 133.927 280 133.127C282.5 130.327 282.5 126.027 280 123.227Z\",\n                            fill: \"#494949\"\n                        }, void 0, false, {\n                            fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                            lineNumber: 69,\n                            columnNumber: 17\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                    lineNumber: 12,\n                    columnNumber: 17\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/secondSoulSVG.tsx\",\n                lineNumber: 11,\n                columnNumber: 13\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n_s(SecondSoulSVG, \"AaxpCB//sbtFpp3sFFgq8jWUjC0=\", false, function() {\n    return [\n        _hook_useSecondSoulRender__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n    ];\n});\n_c = SecondSoulSVG;\n/* harmony default export */ __webpack_exports__[\"default\"] = (SecondSoulSVG);\nvar _c;\n$RefreshReg$(_c, \"SecondSoulSVG\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/svg/secondSoulSVG.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/svg/thirdSoulSVG.tsx":
/*!*****************************************!*\
  !*** ./components/svg/thirdSoulSVG.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _hook_useThirdSoulRender__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../hook/useThirdSoulRender */ \"(app-pages-browser)/./hook/useThirdSoulRender.ts\");\n\nvar _s = $RefreshSig$();\n\nconst ThirdSoulSVG = ()=>{\n    _s();\n    const tl = (0,_hook_useThirdSoulRender__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                width: \"1082\",\n                className: \"absolute top-[11rem]\",\n                height: \"568\",\n                viewBox: \"0 0 1082 568\",\n                fill: \"none\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                    id: \"path3\",\n                    className: \"block m-auto opacity-0\",\n                    d: \"M1081 0C1081.78 414.292 302.399 593.255 1 563.909\",\n                    stroke: \"black\"\n                }, void 0, false, {\n                    fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                    lineNumber: 9,\n                    columnNumber: 17\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                lineNumber: 8,\n                columnNumber: 13\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                id: \"soul3\",\n                className: \"soul3 absolute blur-[3px]\",\n                width: \"110\",\n                viewBox: \"0 0 491 488\",\n                fill: \"none\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M490.462 302.742C490.478 303.269 490.372 303.792 490.152 304.272C490.235 304.891 490.122 305.52 489.83 306.072C489.538 306.625 489.08 307.072 488.522 307.352C476.522 314.012 464.522 320.702 453.982 329.442C448.296 334.156 442.931 339.244 437.922 344.672C435.152 347.672 432.442 350.672 429.842 353.822C422.702 362.282 416.082 371.162 409.522 380.072C403.942 387.672 398.432 395.302 392.632 402.722C388.752 407.722 384.762 412.572 380.632 417.252C371.034 428.238 360.308 438.186 348.632 446.932C315.859 471.058 276.623 484.838 235.962 486.502C235.711 486.571 235.452 486.605 235.192 486.602C210.402 487.502 185.502 488.372 160.812 485.252C142.152 482.892 123.672 478.142 106.712 469.782C88.6119 460.872 74.2919 447.382 60.7119 432.682C36.4019 406.322 14.0319 376.262 5.78186 340.782C5.39398 340.41 5.12884 339.928 5.02186 339.402C4.43218 335.337 3.52609 331.325 2.31186 327.402C2.09069 326.666 2.1513 325.875 2.48186 325.182C-1.51814 297.962 -1.81814 269.392 10.2519 244.042C14.7414 234.423 21.0665 225.775 28.8719 218.582C29.8119 217.752 30.7519 216.922 31.7219 216.162C39.9019 209.502 49.5119 204.892 59.4619 201.352C82.7048 193.13 107.75 191.401 131.902 196.352C143.692 198.742 155.902 202.522 165.572 209.872C167.781 211.55 169.879 213.37 171.852 215.322C182.602 201.622 187.352 183.212 189.742 166.322C192.46 146.862 191.332 127.057 186.422 108.032C186.234 107.436 186.24 106.797 186.439 106.205C186.639 105.614 187.022 105.101 187.532 104.742C187.695 104.359 187.941 104.017 188.252 103.742C192.046 99.8879 196.217 96.424 200.702 93.4016C204.624 91.0896 208.867 89.371 213.292 88.3016C221.512 86.1216 230.982 85.3616 237.502 79.3616C237.784 79.0722 238.125 78.8471 238.502 78.7016C238.502 74.0916 238.262 69.4416 237.812 64.7916C237.741 64.1807 237.86 63.5628 238.152 63.0216C238.161 62.9381 238.185 62.8569 238.222 62.7816C239.822 58.8616 241.352 54.9416 242.942 51.0216C244.122 48.1816 245.372 45.3716 247.692 43.2216C252.792 38.4716 260.942 37.8816 267.532 37.8816C282.332 37.9516 298.842 43.5716 312.432 35.3516C312.727 35.1841 313.043 35.0563 313.372 34.9716C313.442 34.0316 313.482 33.0616 313.512 32.1316C313.527 31.3223 313.842 30.5475 314.397 29.9579C314.951 29.3682 315.705 29.006 316.512 28.9416C316.828 28.8012 317.167 28.7166 317.512 28.6916C328.372 27.7916 336.102 18.6916 343.762 12.0116C351.082 5.63156 359.232 0.19156 369.252 0.0115597C380.902 -0.0984403 392.942 5.66156 402.022 12.5616C411.772 19.9516 414.712 30.7716 415.172 42.5616C415.722 55.9516 415.412 69.4016 415.062 82.7916C420.442 83.4516 425.812 84.2116 430.872 86.2216C435.932 88.2316 439.162 91.6316 439.612 97.3216C440.062 103.012 439.342 108.832 439.092 114.492C438.952 118.752 438.192 123.642 439.822 127.702C446.23 126.97 452.702 127.004 459.102 127.802C464.822 128.502 469.812 129.952 473.522 134.672C475.989 137.959 477.91 141.623 479.212 145.522C479.772 147.052 480.292 148.612 480.742 150.132C481.576 152.933 482.243 155.781 482.742 158.662C483.082 160.922 482.672 163.872 480.552 164.772C474.072 173.192 467.289 181.398 460.202 189.392C460.577 190.104 460.673 190.932 460.472 191.712C457.802 202.912 462.802 214.252 462.802 225.522C462.802 235.522 460.232 245.292 456.242 254.382C461.242 257.388 466.225 260.405 471.192 263.432C475.562 266.102 480.342 268.522 484.192 271.922C488.192 275.532 489.462 280.002 489.812 285.202C490.152 291.052 490.362 296.882 490.462 302.742Z\",\n                        fill: \"#FFFDFE\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 12,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M437.922 344.672C435.152 347.672 432.442 350.672 429.842 353.822C422.702 362.282 416.082 371.162 409.522 380.072C403.942 387.672 398.432 395.302 392.632 402.722C388.752 407.722 384.762 412.572 380.632 417.252C379.212 418.462 377.792 419.642 376.372 420.822C376.14 421.605 375.681 422.301 375.052 422.822C354.902 439.882 332.782 455.142 307.462 463.362C282.142 471.582 254.462 471.682 230.232 460.622C229.413 460.248 228.719 459.648 228.232 458.892C224.932 456.252 226.012 449.562 231.382 449.522C250.68 449.4 269.893 446.945 288.602 442.212C305.035 438.032 320.973 432.101 336.142 424.522C351.382 416.896 365.378 407.003 377.652 395.182C390.462 382.922 403.662 370.992 417.362 359.622C423.842 354.272 430.612 348.902 437.922 344.672Z\",\n                        fill: \"#E5E5E5\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 13,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M453.592 258.322H453.442C456.772 237.042 459.442 215.422 454.442 194.172C453.172 188.872 446.302 189.632 444.592 193.582C444.091 193.826 443.643 194.166 443.272 194.582C406.272 236.252 357.572 264.272 309.742 291.582C308.624 292.179 307.783 293.191 307.4 294.399C307.017 295.608 307.122 296.919 307.692 298.052C295.792 303.052 283.512 307.762 270.832 309.952C263.675 311.278 256.338 311.305 249.172 310.032C245.639 309.394 242.197 308.33 238.922 306.862L237.142 306.072C253.313 304.358 268.727 298.331 281.772 288.622C284.042 286.922 285.212 284.212 283.772 281.532C282.542 279.312 278.922 277.892 276.672 279.532C262.132 290.555 244.336 296.424 226.092 296.212C223.512 296.212 220.562 298.632 220.882 301.412C222.232 313.032 236.532 318.102 246.532 320.042C259.232 322.502 272.192 320.902 284.532 317.372C310.322 309.992 335.412 297.792 358.792 284.802C364.579 281.582 370.292 278.248 375.932 274.802C381.082 271.632 386.172 267.752 391.872 265.622C396.402 263.922 402.402 263.482 405.872 267.622C409.342 271.762 404.172 277.312 401.562 280.622C387.013 299.038 369.745 315.132 350.352 328.352C328.758 343.054 304.849 354.027 279.622 360.812C273.372 358.722 270.802 368.702 277.072 370.892C315.072 384.182 356.882 373.092 390.622 353.612C407.622 343.792 423.402 331.772 441.422 323.772C450.042 319.942 458.802 318.272 467.942 316.332C476.362 314.542 483.742 309.932 485.772 301.062C490.232 281.272 471.542 262.412 453.592 258.322Z\",\n                        fill: \"#E5E5E5\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 14,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M476.672 152.732C477.611 150.368 478.429 147.958 479.122 145.512C477.833 141.601 475.922 137.923 473.462 134.622C469.752 129.902 464.762 128.452 459.042 127.752C452.642 126.954 446.17 126.92 439.762 127.652C438.132 123.592 438.892 118.702 439.032 114.442C439.282 108.782 439.972 102.922 439.552 97.2715C439.132 91.6215 435.982 88.2715 430.812 86.1715C425.642 84.0715 420.382 83.4015 415.002 82.7415C415.352 69.3515 415.662 55.9015 415.112 42.5115C414.992 37.8283 414.269 33.1801 412.962 28.6815C411.651 30.5759 410.514 32.5839 409.562 34.6815C406.712 41.3715 405.472 48.9315 403.282 55.9015C394.331 84.2679 381.069 111.088 363.962 135.422C361.662 138.692 359.282 141.922 356.812 145.072C348.022 159.122 336.242 171.462 325.232 183.702C310.472 200.112 296.232 220.262 271.882 220.902C266.362 221.042 263.682 215.012 265.932 210.522C271.372 199.652 278.252 189.762 284.932 179.652C303.532 138.94 314.652 95.2128 317.762 50.5615C318.282 43.1815 318.632 35.5615 320.022 28.2715C319.153 28.4737 318.271 28.6108 317.382 28.6815C317.037 28.7066 316.698 28.7911 316.382 28.9315C315.575 28.996 314.821 29.3582 314.267 29.9478C313.712 30.5375 313.397 31.3123 313.382 32.1215C313.382 33.0515 313.312 34.0215 313.242 34.9615C312.913 35.0463 312.597 35.1741 312.302 35.3415C309.697 36.921 306.853 38.0692 303.882 38.7415C303.881 40.2981 303.764 41.8524 303.532 43.3915C299.822 69.9115 293.342 96.9315 283.042 121.652C281.492 125.382 279.812 129.052 278.042 132.652C276.312 137.762 274.612 142.872 272.792 147.942C265.482 168.262 255.262 190.272 234.482 199.652C224.602 204.112 209.322 193.822 217.482 182.652C219.282 180.202 221.032 177.712 222.792 175.242C232.182 149.112 238.775 122.061 242.462 94.5415C243.152 89.1615 243.672 83.3015 240.802 78.7215C240.164 77.6691 239.353 76.7325 238.402 75.9515C238.402 76.8515 238.472 77.7915 238.472 78.6915C238.095 78.8371 237.754 79.0622 237.472 79.3515C230.952 85.3515 221.472 86.1115 213.262 88.2915C212.152 88.5715 211.082 88.8815 209.972 89.2315C220.892 135.422 206.882 187.022 173.422 220.802C173.762 217.802 174.112 214.802 174.422 211.712C173.622 212.962 172.722 214.142 171.822 215.322C169.849 213.37 167.751 211.55 165.542 209.872C155.832 202.522 143.662 198.742 131.872 196.352C107.72 191.401 82.6748 193.13 59.4319 201.352C49.4319 204.892 39.8719 209.502 31.6919 216.162C31.2719 217.822 30.8652 219.488 30.4719 221.162C31.2019 218.012 38.3519 216.452 44.4719 215.412C47.6319 214.892 50.4719 214.512 52.1019 214.122C61.948 211.818 72.0874 211.025 82.1719 211.772C102.282 213.262 122.082 220.772 137.652 233.652C163.182 254.802 177.392 288.402 205.902 305.292C216.093 311.242 227.448 314.922 239.192 316.082C261.422 318.512 285.142 313.342 306.192 304.742C314.039 301.516 321.715 297.891 329.192 293.882C333.772 291.422 338.312 288.822 342.752 286.082C354.324 278.949 365.448 271.114 376.062 262.622C378.802 260.512 381.472 258.322 384.142 256.102C401.822 241.512 418.502 225.482 434.732 209.292C445.642 198.382 456.672 186.792 465.342 174.032C465.842 174.099 466.35 174.052 466.829 173.892C467.307 173.733 467.743 173.466 468.102 173.112C472.732 168.376 476.051 162.518 477.732 156.112C477.897 155.506 477.885 154.865 477.697 154.266C477.509 153.667 477.154 153.134 476.672 152.732Z\",\n                        fill: \"#E5E5E5\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 15,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M290.322 268.302C290.014 267.988 289.647 267.738 289.242 267.566C288.837 267.395 288.402 267.305 287.962 267.302C287.094 267.371 286.272 267.722 285.622 268.302L285.732 268.222L285.342 268.512L284.532 269.072C283.992 269.442 283.442 269.782 282.872 270.072C281.782 270.711 280.653 271.282 279.492 271.782L279.342 271.842H279.272L278.352 272.172C277.732 272.392 277.112 272.582 276.482 272.762C275.223 273.108 273.944 273.375 272.652 273.562C271.796 273.785 271.063 274.339 270.615 275.102C270.167 275.865 270.04 276.775 270.262 277.632C270.51 278.475 271.07 279.191 271.828 279.635C272.586 280.08 273.485 280.218 274.342 280.022C280.198 279.104 285.713 276.674 290.342 272.972C290.657 272.664 290.907 272.297 291.079 271.892C291.25 271.487 291.34 271.052 291.342 270.612C291.31 269.739 290.945 268.913 290.322 268.302Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 16,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M250.912 283.292C224.592 282.212 204.302 264.142 188.172 244.972C180.682 236.062 173.892 226.172 165.172 218.272C156.012 209.912 144.172 205.922 132.262 203.272C108.565 198.065 83.8825 199.628 61.0319 207.782C55.2789 209.785 49.7304 212.333 44.4619 215.392C39.648 218.159 35.2 221.518 31.2219 225.392C23.8809 232.84 18.1012 241.68 14.2219 251.392C4.61187 274.622 5.45187 300.632 9.22187 325.042C9.30161 325.37 9.30161 325.713 9.22187 326.042C8.80187 329.442 3.36187 330.552 2.77187 326.702C2.70187 326.152 2.59187 325.632 2.52187 325.072C-1.47813 297.852 -1.77813 269.282 10.2919 243.932C14.7814 234.313 21.1065 225.665 28.9119 218.472C29.8519 217.642 30.7919 216.812 31.7619 216.052C39.9419 209.392 49.5519 204.782 59.5019 201.242C82.7448 193.019 107.79 191.291 131.942 196.242C143.732 198.632 155.942 202.412 165.612 209.762C167.821 211.44 169.919 213.26 171.892 215.212C173.492 216.732 175.012 218.362 176.502 220.032C181.502 225.542 185.942 231.582 190.622 237.262C197.342 245.452 204.802 253.742 213.192 260.642C216.106 263.021 219.162 265.222 222.342 267.232C230.912 272.572 240.342 276.102 250.992 276.522C255.172 276.802 255.212 283.502 250.912 283.292Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 17,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M235.892 486.502C235.641 486.571 235.382 486.605 235.122 486.602C210.332 487.502 185.432 488.372 160.742 485.252C142.082 482.892 123.602 478.142 106.642 469.782C88.5419 460.872 74.2219 447.382 60.6419 432.682C36.3319 406.322 13.9619 376.262 5.71187 340.782C5.43187 339.602 5.19187 338.462 4.95187 337.282C4.15187 333.282 9.95187 331.562 11.2619 335.032C11.3551 335.218 11.4224 335.417 11.4619 335.622C15.5919 355.832 24.5319 374.462 36.0119 391.552C46.0719 406.502 57.8919 420.162 70.2719 433.202C83.7319 447.382 98.3619 459.202 116.472 466.982C152.702 482.482 193.002 481.442 231.662 480.082C232.812 480.012 233.992 479.982 235.132 479.942C239.122 479.772 239.362 485.622 235.892 486.502Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 18,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M196.112 167.982C193.512 186.222 188.112 205.502 176.382 220.142C175.862 220.832 175.312 221.532 174.722 222.142C171.912 225.402 167.192 220.692 170.002 217.432C170.592 216.732 171.182 216.012 171.772 215.282C182.522 201.582 187.272 183.172 189.662 166.282C192.38 146.821 191.252 127.017 186.342 107.992C186.154 107.396 186.16 106.757 186.359 106.165C186.559 105.574 186.942 105.061 187.452 104.702C187.867 104.326 188.372 104.064 188.918 103.94C189.464 103.816 190.032 103.835 190.569 103.995C191.106 104.155 191.592 104.45 191.981 104.852C192.371 105.254 192.65 105.75 192.792 106.292C192.962 106.922 193.102 107.512 193.242 108.132C198.004 127.716 198.978 148.031 196.112 167.982Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 19,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M242.132 84.0615C240.95 85.1446 239.675 86.1217 238.322 86.9815C232.182 90.8915 224.862 92.3515 217.752 94.0515C213.352 95.0515 208.952 96.2715 205.032 98.5615C200.592 101.122 196.912 104.632 193.242 108.132C193.132 108.232 192.992 108.342 192.892 108.442C190.082 111.112 186.022 107.612 187.452 104.702C187.615 104.319 187.861 103.977 188.172 103.702C191.966 99.8479 196.137 96.3839 200.622 93.3615C204.544 91.0496 208.787 89.331 213.212 88.2615C221.432 86.0815 230.902 85.3215 237.422 79.3215C237.704 79.0322 238.045 78.8071 238.422 78.6615C241.462 77.4015 244.982 81.4615 242.132 84.0615Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 20,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M217.862 197.882C216.402 201.882 209.922 200.232 211.412 196.212C224.272 161.052 236.902 124.572 238.322 86.9816C238.392 84.2416 238.422 81.4616 238.422 78.6916C238.422 74.0816 238.182 69.4316 237.732 64.7816C237.661 64.1707 237.78 63.5528 238.072 63.0116C239.362 60.6216 244.072 61.2116 244.392 64.7816V64.8915C248.552 110.832 233.462 155.362 217.862 197.882Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 21,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M315.652 41.1315C314.753 41.6789 313.825 42.1763 312.872 42.6215C301.812 47.9315 289.292 46.3015 277.362 45.1515C270.192 44.4615 261.172 43.3215 254.462 46.6215C251.132 48.2215 249.952 51.2715 248.642 54.4915C247.332 57.7115 245.972 61.1515 244.642 64.4915L244.442 64.9115C242.672 68.2015 236.912 66.6715 238.122 63.0315C238.131 62.9481 238.155 62.8669 238.192 62.7915C239.792 58.8715 241.322 54.9515 242.912 51.0315C244.092 48.1915 245.342 45.3815 247.662 43.2315C252.762 38.4815 260.912 37.8915 267.502 37.8915C282.302 37.9615 298.812 43.5815 312.402 35.3615C312.697 35.1941 313.013 35.0663 313.342 34.9815C316.552 34.0915 319.012 39.0915 315.652 41.1315Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 22,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M211.362 206.252C210.589 205.826 209.681 205.72 208.83 205.955C207.98 206.191 207.256 206.749 206.812 207.512C205.192 210.562 203.462 213.512 201.592 216.512C200.679 217.945 199.732 219.355 198.752 220.742C198.252 221.462 197.752 222.172 197.222 222.882L196.442 223.942L196.122 224.352L195.982 224.532C194.922 225.912 194.532 227.932 195.982 229.252C197.182 230.342 199.562 230.732 200.702 229.252C205.192 223.471 209.177 217.315 212.612 210.852C213.054 210.075 213.17 209.156 212.936 208.294C212.702 207.432 212.136 206.698 211.362 206.252Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 23,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M286.962 157.412C278.697 181.951 267.464 205.388 253.512 227.202C251.192 230.822 257.002 234.122 259.312 230.502C273.556 208.186 285.008 184.207 293.412 159.102C294.782 155.032 288.322 153.342 286.962 157.412Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 24,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M320.122 32.1215C320.122 33.1215 320.052 34.1215 319.982 35.0615C318.413 72.1896 310.957 108.833 297.892 143.622C296.372 147.622 289.892 145.942 291.412 141.922C303.419 110.06 310.65 76.5981 312.872 42.6215C313.082 40.0615 313.222 37.5315 313.292 34.9615C313.362 34.0215 313.402 33.0515 313.432 32.1215C313.447 31.3123 313.762 30.5375 314.316 29.9478C314.871 29.3582 315.625 28.996 316.432 28.9316C316.893 28.8396 317.37 28.8542 317.824 28.9742C318.279 29.0943 318.701 29.3166 319.057 29.6243C319.413 29.932 319.694 30.3169 319.878 30.7497C320.063 31.1825 320.146 31.6517 320.122 32.1215Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 25,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M414.932 82.7816C414.947 83.0247 414.947 83.2684 414.932 83.5116V84.0316C414.92 84.5229 414.803 85.0061 414.588 85.448C414.373 85.89 414.065 86.2804 413.685 86.5926C413.306 86.9048 412.863 87.1316 412.388 87.2574C411.913 87.3831 411.416 87.405 410.932 87.3215C410.352 87.2777 409.8 87.0537 409.353 86.6807C408.907 86.3078 408.588 85.8046 408.442 85.2416C408.337 84.9191 408.289 84.5805 408.302 84.2416C408.515 75.7082 408.619 67.1749 408.612 58.6415C408.612 51.3615 408.892 43.9416 407.992 36.6916C406.992 28.7916 403.862 22.2715 397.382 17.4515C391.406 13.0163 384.648 9.74601 377.462 7.81155C363.622 4.23155 354.192 11.3415 344.462 20.1516C337.252 26.7416 329.762 33.4016 319.942 35.0616C319.182 35.2016 318.382 35.3115 317.592 35.3815C313.592 35.6915 313.152 30.1016 316.372 28.9316C316.688 28.7911 317.027 28.7066 317.372 28.6816C328.232 27.7816 335.962 18.6815 343.622 12.0015C350.942 5.62155 359.092 0.18155 369.112 0.00154991C380.762 -0.10845 392.802 5.65155 401.882 12.5515C411.632 19.9415 414.572 30.7616 415.032 42.5516C415.592 55.9416 415.282 69.3916 414.932 82.7816Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 26,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M387.462 129.742C378.442 152.785 365.512 174.097 349.242 192.742C346.432 195.962 351.132 200.742 353.962 197.462C371.012 177.911 384.546 155.554 393.962 131.382C395.462 127.442 389.032 125.772 387.462 129.742Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 27,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M413.702 82.3115C412.922 81.8873 412.007 81.7869 411.153 82.032C410.3 82.2772 409.578 82.8481 409.142 83.6215L394.462 115.912C394.045 116.687 393.943 117.593 394.176 118.441C394.408 119.29 394.958 120.017 395.712 120.472C396.484 120.902 397.394 121.011 398.245 120.775C399.097 120.54 399.821 119.978 400.262 119.212C405.175 108.432 410.082 97.6482 414.982 86.8615C415.393 86.0837 415.489 85.1777 415.251 84.3309C415.012 83.4841 414.458 82.7611 413.702 82.3115Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 28,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M438.462 134.142C437.78 134.353 437.046 134.324 436.383 134.058C435.72 133.792 435.169 133.306 434.822 132.682C434.699 132.496 434.595 132.298 434.512 132.092C432.252 128.172 432.042 123.632 432.182 119.162C432.362 113.962 432.562 108.722 432.772 103.482C433.006 101.153 432.982 98.8052 432.702 96.4816C432.252 94.2616 430.702 93.3616 428.702 92.5616C424.062 90.6216 418.922 89.9616 413.972 89.3716H413.902C413.275 89.3144 412.672 89.1016 412.148 88.7523C411.624 88.403 411.196 87.9284 410.902 87.3716C410.72 86.9553 410.628 86.5056 410.632 86.0516C410.632 84.3916 412.152 82.4816 413.962 82.6916C414.032 82.6916 414.132 82.6916 414.202 82.6916L414.932 82.7916C420.312 83.4516 425.682 84.2116 430.742 86.2216C435.802 88.2316 439.032 91.6316 439.482 97.3216C439.932 103.012 439.212 108.832 438.962 114.492C438.822 118.752 438.062 123.642 439.692 127.702C439.901 128.299 440.18 128.869 440.522 129.402C440.729 129.727 440.869 130.091 440.932 130.472C441.08 131.285 440.904 132.123 440.443 132.809C439.981 133.494 439.271 133.972 438.462 134.142Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 29,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M435.302 130.322C424.466 154.065 411.28 176.665 395.942 197.782C393.422 201.252 399.242 204.532 401.742 201.082C417.079 179.964 430.265 157.365 441.102 133.622C442.872 129.742 437.082 126.402 435.302 130.322Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 30,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M390.682 208.952C390.053 208.331 389.205 207.983 388.322 207.983C387.438 207.983 386.591 208.331 385.962 208.952L380.462 214.882C379.84 215.512 379.482 216.356 379.462 217.242C379.465 217.901 379.662 218.545 380.03 219.092C380.398 219.639 380.919 220.065 381.529 220.316C382.138 220.567 382.808 220.633 383.455 220.504C384.101 220.375 384.695 220.057 385.162 219.592C386.992 217.592 388.832 215.652 390.662 213.672C390.973 213.362 391.219 212.994 391.388 212.589C391.556 212.184 391.643 211.75 391.643 211.312C391.643 210.873 391.556 210.439 391.388 210.034C391.219 209.629 390.973 209.261 390.662 208.952H390.682Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 31,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M342.792 206.322C342.661 205.893 342.416 205.509 342.082 205.212L341.372 204.662C340.868 204.38 340.3 204.232 339.722 204.232L338.882 204.342C338.308 204.486 337.785 204.787 337.372 205.212L334.012 208.212C333.405 208.852 333.05 209.69 333.012 210.572C332.989 211.002 333.082 211.43 333.282 211.812C333.415 212.241 333.66 212.628 333.992 212.932L334.702 213.472C335.204 213.758 335.774 213.906 336.352 213.902L337.192 213.792C337.766 213.644 338.29 213.348 338.712 212.932L342.062 209.932C342.394 209.628 342.639 209.241 342.772 208.812C342.971 208.43 343.065 208.002 343.042 207.572C343.071 207.14 342.984 206.709 342.792 206.322Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 32,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M480.462 164.762C479.894 165.049 479.256 165.171 478.622 165.112C478.014 165.053 477.431 164.838 476.932 164.485C476.433 164.133 476.034 163.657 475.776 163.103C475.517 162.55 475.408 161.938 475.458 161.329C475.508 160.72 475.716 160.135 476.062 159.632C475.999 159.415 475.952 159.195 475.922 158.972C475.782 158.352 475.682 157.762 475.542 157.172C475.472 156.822 475.402 156.512 475.302 156.172L474.782 153.992C474.122 151.632 473.392 149.312 472.522 147.052C471.202 143.522 469.572 139.842 466.732 137.272C463.732 134.472 458.732 134.362 454.842 134.082C450.161 133.735 445.458 133.818 440.792 134.332C440.412 134.332 440.062 134.402 439.682 134.432C439.24 134.497 438.79 134.412 438.402 134.192C437.802 133.913 437.29 133.474 436.924 132.924C436.557 132.373 436.348 131.733 436.322 131.072C436.302 130.602 436.395 130.134 436.594 129.708C436.792 129.282 437.09 128.909 437.462 128.622C438.098 128.111 438.87 127.799 439.682 127.722C446.09 126.99 452.562 127.024 458.962 127.822C464.682 128.522 469.672 129.972 473.382 134.692C475.849 137.979 477.77 141.643 479.072 145.542C479.632 147.072 480.152 148.632 480.602 150.152C481.436 152.953 482.103 155.801 482.602 158.682C483.002 160.912 482.592 163.862 480.462 164.762Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 33,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M481.892 162.952C481.442 163.542 480.962 164.172 480.472 164.762C473.992 173.182 467.209 181.388 460.122 189.382C457.792 192.022 455.472 194.582 453.122 197.152C433.245 218.692 411.459 238.389 388.032 256.002C384.592 258.602 380.472 253.362 383.902 250.762C418.593 224.675 449.597 194.018 476.072 159.622C476.212 159.412 476.382 159.242 476.522 159.032C479.122 155.622 484.462 159.522 481.892 162.952Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 34,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M462.722 225.512C462.722 235.512 460.152 245.282 456.162 254.372C456.022 254.752 455.852 255.132 455.712 255.482C455.432 256.102 455.122 256.732 454.842 257.352C454.719 257.601 454.568 257.836 454.392 258.052C454.392 258.052 454.392 258.052 454.322 258.122C454.11 258.426 453.804 258.655 453.452 258.772C453.126 258.952 452.764 259.059 452.393 259.083C452.021 259.107 451.648 259.049 451.302 258.912C450.809 258.78 450.351 258.542 449.96 258.214C449.57 257.886 449.256 257.476 449.041 257.013C448.826 256.551 448.716 256.046 448.718 255.536C448.72 255.026 448.834 254.523 449.052 254.062C449.092 253.956 449.139 253.852 449.192 253.752C453.872 243.832 456.712 233.012 455.992 222.022C455.432 213.592 452.932 205.442 453.112 197.122C453.144 194.714 453.432 192.318 453.972 189.972C454.772 186.682 458.902 187.032 460.152 189.352C460.527 190.064 460.623 190.892 460.422 191.672C457.722 202.902 462.722 214.242 462.722 225.512Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 35,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M77.9219 338.182C77.0225 328.656 73.3238 319.609 67.2919 312.182C67.0119 311.832 66.7119 311.472 66.4019 311.122C63.9619 308.012 61.0319 305.122 57.0819 304.292C54.8125 303.777 52.433 304.121 50.402 305.256C48.3709 306.392 46.832 308.239 46.0819 310.442C42.0819 320.572 44.9819 332.592 48.7619 342.312C50.4837 347.064 52.955 351.51 56.0819 355.482C58.9519 358.982 63.0819 362.812 67.9719 362.112C78.2219 360.692 78.6919 346.032 77.9219 338.182Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 36,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M113.462 387.822C112.705 387.851 111.978 388.125 111.39 388.603C110.802 389.081 110.385 389.737 110.202 390.472C109.89 391.732 110.054 393.064 110.662 394.212C110.644 394.549 110.681 394.886 110.772 395.212C111.629 397.643 113.246 399.734 115.383 401.175C117.521 402.616 120.066 403.33 122.642 403.212C123.558 403.175 124.423 402.781 125.051 402.113C125.68 401.446 126.021 400.558 126.002 399.642C125.682 396.493 124.239 393.564 121.936 391.394C119.632 389.223 116.624 387.955 113.462 387.822Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 37,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M122.782 293.302C121.903 292.082 120.898 290.959 119.782 289.952C118.08 287.854 115.917 286.177 113.462 285.052C107.602 282.562 101.332 285.472 98.2919 290.842C95.2519 296.212 95.0619 303.552 95.4219 309.652C96.1319 321.972 100.612 335.552 110.292 343.792C114.742 347.572 121.082 350.062 126.522 346.712C131.392 343.712 132.522 337.592 132.632 332.302C132.862 318.892 130.882 304.382 122.782 293.302Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 38,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M490.152 304.272C490.235 304.891 490.122 305.52 489.83 306.072C489.538 306.625 489.08 307.072 488.522 307.352C476.522 314.012 464.522 320.702 453.982 329.442C445.206 336.812 437.125 344.973 429.842 353.822C416.632 369.502 405.192 386.562 392.632 402.722C379.772 419.332 365.482 434.412 348.562 446.932C315.789 471.058 276.553 484.838 235.892 486.502L232.592 486.602C228.642 486.712 228.332 481.022 231.652 480.082C231.953 479.971 232.271 479.913 232.592 479.912C277.125 478.871 319.983 462.732 354.142 434.142C359.773 429.401 365.116 424.329 370.142 418.952C377.503 411.075 384.436 402.81 390.912 394.192C392.472 392.142 394.002 390.092 395.522 388.052C407.632 371.782 419.242 355.052 433.082 340.162C447.822 324.312 465.082 312.902 483.882 302.362C484.332 302.052 484.822 301.802 485.302 301.532C485.794 301.286 486.339 301.165 486.889 301.179C487.438 301.193 487.976 301.342 488.455 301.612C488.934 301.883 489.339 302.267 489.635 302.731C489.931 303.194 490.108 303.723 490.152 304.272Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 39,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M490.462 302.742C490.478 303.269 490.372 303.792 490.152 304.272C488.832 306.972 483.872 306.452 483.802 302.742V302.362C483.702 297.092 483.492 291.782 483.142 286.512C483.142 285.782 483.072 285.062 483.002 284.292C482.953 282.784 482.613 281.3 482.002 279.922C481.622 279.161 481.134 278.461 480.552 277.842C479.913 277.106 479.203 276.436 478.432 275.842C474.552 272.842 470.042 270.562 465.882 268.032C461.302 265.292 456.762 262.522 452.182 259.752C451.811 259.556 451.497 259.266 451.272 258.912C449.272 256.352 452.182 251.912 455.472 253.912L456.162 254.332C461.162 257.338 466.145 260.355 471.112 263.382C475.482 266.052 480.262 268.472 484.112 271.872C488.112 275.482 489.382 279.952 489.732 285.152C490.152 291.052 490.362 296.882 490.462 302.742Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 40,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M450.982 252.352C428.462 269.492 407.802 288.482 388.062 308.732C369.282 328.012 349.272 347.932 322.652 355.532C318.522 356.712 320.212 363.172 324.352 361.992C350.582 354.502 370.902 335.802 389.552 316.762C410.012 295.882 430.982 275.892 454.282 258.152C457.652 255.622 454.392 249.752 450.982 252.352Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 41,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M423.602 329.132C423.467 328.705 423.222 328.322 422.892 328.022C422.582 327.711 422.215 327.464 421.81 327.296C421.405 327.128 420.97 327.041 420.532 327.041C420.093 327.041 419.659 327.128 419.254 327.296C418.849 327.464 418.481 327.711 418.172 328.022C417.062 329.262 415.962 330.512 414.852 331.762C414.243 332.396 413.903 333.242 413.903 334.122C413.903 335.001 414.243 335.847 414.852 336.482C415.479 337.109 416.325 337.468 417.212 337.482C418.1 337.473 418.948 337.114 419.572 336.482C420.672 335.235 421.779 333.988 422.892 332.742C423.494 332.098 423.849 331.262 423.892 330.382C423.899 329.947 423.799 329.518 423.602 329.132Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 42,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M483.382 275.762C464.769 289.302 446.649 303.515 429.022 318.402C425.742 321.172 430.482 325.882 433.742 323.122C450.875 308.628 468.522 294.775 486.682 281.562C490.122 279.062 486.852 273.232 483.382 275.762Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 43,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M259.562 455.372C259.442 454.499 258.988 453.707 258.296 453.163C257.604 452.618 256.728 452.363 255.852 452.452C248.945 453.265 241.95 452.886 235.172 451.332C234.315 451.25 233.46 451.502 232.784 452.036C232.109 452.57 231.666 453.344 231.547 454.196C231.429 455.049 231.644 455.914 232.147 456.612C232.651 457.31 233.405 457.786 234.252 457.942C241.596 459.589 249.168 459.974 256.642 459.082C257.515 458.964 258.309 458.511 258.854 457.818C259.399 457.126 259.653 456.248 259.562 455.372Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 44,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M390.462 394.462C373.462 408.272 356.212 422.292 336.752 432.562C316.082 443.472 293.892 447.702 271.002 451.152C266.752 451.792 267.532 458.422 271.792 457.782C295.212 454.252 318.062 449.922 339.222 438.782C359.222 428.212 376.962 414.012 394.482 399.782C397.782 397.082 393.772 391.752 390.462 394.462Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 45,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M313.952 360.462C313.67 359.626 313.074 358.932 312.291 358.527C311.507 358.122 310.597 358.038 309.752 358.292C299.413 360.915 288.778 362.189 278.112 362.082C273.802 362.082 274.172 368.722 278.452 368.752C289.692 368.825 300.895 367.447 311.782 364.652C312.62 364.376 313.317 363.783 313.723 363C314.128 362.216 314.211 361.305 313.952 360.462Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 46,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M176.852 252.052C166.907 232.191 149.574 217.02 128.572 209.792C124.512 208.392 122.832 214.852 126.882 216.242C146.145 223.009 161.997 237.042 171.052 255.342C172.952 259.202 178.752 255.882 176.852 252.052Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 47,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M187.002 269.842L183.462 264.252C183.003 263.484 182.271 262.92 181.412 262.672C180.568 262.459 179.675 262.573 178.912 262.992C178.133 263.442 177.565 264.183 177.332 265.052C177.112 265.896 177.23 266.793 177.662 267.552L181.192 273.142C181.654 273.909 182.39 274.474 183.252 274.722C183.887 274.888 184.558 274.863 185.179 274.65C185.8 274.437 186.345 274.046 186.746 273.525C187.146 273.005 187.383 272.377 187.429 271.722C187.475 271.067 187.326 270.413 187.002 269.842Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 48,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M324.292 290.212C299.669 305.297 271.254 313.047 242.382 312.552C238.082 312.482 238.092 319.152 242.382 319.232C272.411 319.731 301.964 311.681 327.592 296.022C331.252 293.782 327.962 287.972 324.292 290.212Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 49,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M370.302 260.162C361.678 268.021 352.031 274.678 341.622 279.952C337.782 281.902 341.092 287.702 344.912 285.762C355.843 280.194 365.969 273.17 375.012 264.882C378.192 261.982 373.462 257.272 370.302 260.162Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 50,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M247.532 236.712C243.343 242.887 238.265 248.41 232.462 253.102C229.623 255.378 226.614 257.434 223.462 259.252C220.922 260.732 217.212 263.092 214.342 261.252C210.732 258.922 207.432 264.732 211.042 267.052C215.042 269.622 219.792 268.552 223.812 266.652C227.814 264.651 231.592 262.231 235.082 259.432C242.17 253.991 248.324 247.432 253.302 240.012C255.732 236.452 249.922 233.162 247.532 236.712Z\",\n                        fill: \"#494949\"\n                    }, void 0, false, {\n                        fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                        lineNumber: 51,\n                        columnNumber: 17\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/faezeh/Desktop/myproject/CreativeWorksInNext/components/svg/thirdSoulSVG.tsx\",\n                lineNumber: 11,\n                columnNumber: 14\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n_s(ThirdSoulSVG, \"J4/rWr++qLJwRDXn16GHzEzuXqY=\", false, function() {\n    return [\n        _hook_useThirdSoulRender__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n    ];\n});\n_c = ThirdSoulSVG;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ThirdSoulSVG);\nvar _c;\n$RefreshReg$(_c, \"ThirdSoulSVG\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/svg/thirdSoulSVG.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./hook/useFirstSoulRender.ts":
/*!************************************!*\
  !*** ./hook/useFirstSoulRender.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gsap */ \"(app-pages-browser)/./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_MotionPathPlugin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gsap/MotionPathPlugin */ \"(app-pages-browser)/./node_modules/gsap/MotionPathPlugin.js\");\n/* harmony import */ var usehooks_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! usehooks-ts */ \"(app-pages-browser)/./node_modules/usehooks-ts/dist/index.mjs\");\n\n\n\nconst useFirstSoulRender = ()=>{\n    (0,usehooks_ts__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect)(()=>{\n        gsap__WEBPACK_IMPORTED_MODULE_1__.gsap.registerPlugin(gsap_MotionPathPlugin__WEBPACK_IMPORTED_MODULE_2__.MotionPathPlugin);\n        const tl = gsap__WEBPACK_IMPORTED_MODULE_1__.gsap.fromTo(\"#soul1\", {\n            duration: 1\n        }, {\n            width: 150,\n            duration: 20,\n            scrollTrigger: \"#firstSec\",\n            repeat: 0,\n            opacity: 0,\n            repeatDelay: 0,\n            immediateRender: true,\n            yoyo: true,\n            ease: \"power1.inOut\",\n            onComplete: ()=>{\n                tl.restart();\n            },\n            motionPath: {\n                path: \"#path1\",\n                align: \"#path1\"\n            }\n        });\n    }, []);\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (useFirstSoulRender);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2svdXNlRmlyc3RTb3VsUmVuZGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBNEI7QUFDNEI7QUFDRDtBQUV2RCxNQUFNRyxxQkFBcUI7SUFDdkJELHNFQUF5QkEsQ0FBQztRQUMxQkYsc0NBQUlBLENBQUNJLGNBQWMsQ0FBQ0gsbUVBQWdCQTtRQUNwQyxNQUFNSSxLQUFLTCxzQ0FBSUEsQ0FBQ00sTUFBTSxDQUFDLFVBQVU7WUFDN0JDLFVBQVU7UUFDZCxHQUFFO1lBQ0VDLE9BQU87WUFDUEQsVUFBVTtZQUNWRSxlQUFlO1lBQ2ZDLFFBQVE7WUFDUkMsU0FBUztZQUNUQyxhQUFhO1lBQ2JDLGlCQUFpQjtZQUNqQkMsTUFBTTtZQUNOQyxNQUFNO1lBQ05DLFlBQVk7Z0JBQ1JYLEdBQUdZLE9BQU87WUFDZDtZQUNBQyxZQUFZO2dCQUNaQyxNQUFNO2dCQUNOQyxPQUFPO1lBQ1A7UUFDRjtJQUNGLEdBQUcsRUFBRTtBQUNUO0FBRUEsK0RBQWVqQixrQkFBa0JBLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vaG9vay91c2VGaXJzdFNvdWxSZW5kZXIudHM/NThiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnc2FwIH0gZnJvbSBcImdzYXBcIjtcbmltcG9ydCB7IE1vdGlvblBhdGhQbHVnaW4gfSBmcm9tIFwiZ3NhcC9Nb3Rpb25QYXRoUGx1Z2luXCJcbmltcG9ydCB7IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfSBmcm9tIFwidXNlaG9va3MtdHNcIlxuXG5jb25zdCB1c2VGaXJzdFNvdWxSZW5kZXIgPSAoKSA9PntcbiAgICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KCgpOiBhbnkgPT4ge1xuICAgIGdzYXAucmVnaXN0ZXJQbHVnaW4oTW90aW9uUGF0aFBsdWdpbilcbiAgICBjb25zdCB0bCA9IGdzYXAuZnJvbVRvKFwiI3NvdWwxXCIsIHtcbiAgICAgICAgZHVyYXRpb246IDEsXG4gICAgfSx7XG4gICAgICAgIHdpZHRoOiAxNTAsXG4gICAgICAgIGR1cmF0aW9uOiAyMCxcbiAgICAgICAgc2Nyb2xsVHJpZ2dlcjogXCIjZmlyc3RTZWNcIixcbiAgICAgICAgcmVwZWF0OiAwLFxuICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICByZXBlYXREZWxheTogMCxcbiAgICAgICAgaW1tZWRpYXRlUmVuZGVyOiB0cnVlLFxuICAgICAgICB5b3lvOiB0cnVlLFxuICAgICAgICBlYXNlOiBcInBvd2VyMS5pbk91dFwiLFxuICAgICAgICBvbkNvbXBsZXRlOiAoKSA9PiB7XG4gICAgICAgICAgICB0bC5yZXN0YXJ0KClcbiAgICAgICAgfSxcbiAgICAgICAgbW90aW9uUGF0aDoge1xuICAgICAgICBwYXRoOiBcIiNwYXRoMVwiLFxuICAgICAgICBhbGlnbjogXCIjcGF0aDFcIixcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9LCBbXSlcbn1cblxuZXhwb3J0IGRlZmF1bHQgdXNlRmlyc3RTb3VsUmVuZGVyIl0sIm5hbWVzIjpbImdzYXAiLCJNb3Rpb25QYXRoUGx1Z2luIiwidXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCIsInVzZUZpcnN0U291bFJlbmRlciIsInJlZ2lzdGVyUGx1Z2luIiwidGwiLCJmcm9tVG8iLCJkdXJhdGlvbiIsIndpZHRoIiwic2Nyb2xsVHJpZ2dlciIsInJlcGVhdCIsIm9wYWNpdHkiLCJyZXBlYXREZWxheSIsImltbWVkaWF0ZVJlbmRlciIsInlveW8iLCJlYXNlIiwib25Db21wbGV0ZSIsInJlc3RhcnQiLCJtb3Rpb25QYXRoIiwicGF0aCIsImFsaWduIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hook/useFirstSoulRender.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./hook/useForthSoulRender.ts":
/*!************************************!*\
  !*** ./hook/useForthSoulRender.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gsap */ \"(app-pages-browser)/./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_MotionPathPlugin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gsap/MotionPathPlugin */ \"(app-pages-browser)/./node_modules/gsap/MotionPathPlugin.js\");\n/* harmony import */ var usehooks_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! usehooks-ts */ \"(app-pages-browser)/./node_modules/usehooks-ts/dist/index.mjs\");\n\n\n\nconst useForthSoulRender = ()=>{\n    (0,usehooks_ts__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect)(()=>{\n        gsap__WEBPACK_IMPORTED_MODULE_1__.gsap.registerPlugin(gsap_MotionPathPlugin__WEBPACK_IMPORTED_MODULE_2__.MotionPathPlugin);\n        gsap__WEBPACK_IMPORTED_MODULE_1__.gsap.fromTo(\"#soul4\", {\n            width: 90,\n            opacity: 0,\n            x: 990\n        }, {\n            width: 100,\n            duration: 10,\n            opacity: 0.4,\n            repeat: -1,\n            repeatDelay: 1,\n            scrollTrigger: \"#forthSec\",\n            x: 1000,\n            y: 200,\n            immediateRender: true,\n            yoyo: false,\n            ease: \"power1.inOut\"\n        });\n    }, []);\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (useForthSoulRender);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2svdXNlRm9ydGhTb3VsUmVuZGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFDNEI7QUFDNEI7QUFDRDtBQUV2RCxNQUFNRyxxQkFBcUI7SUFDdkJELHNFQUF5QkEsQ0FBQztRQUN0QkYsc0NBQUlBLENBQUNJLGNBQWMsQ0FBQ0gsbUVBQWdCQTtRQUNwQ0Qsc0NBQUlBLENBQUNLLE1BQU0sQ0FBQyxVQUFTO1lBQ2pCQyxPQUFNO1lBQ05DLFNBQVM7WUFDVEMsR0FBRTtRQUNOLEdBQUc7WUFDQ0YsT0FBTTtZQUNORyxVQUFVO1lBQ1ZGLFNBQVM7WUFDVEcsUUFBUSxDQUFDO1lBQ1RDLGFBQWE7WUFDYkMsZUFBZTtZQUNmSixHQUFHO1lBQ0hLLEdBQUc7WUFDSEMsaUJBQWlCO1lBQ2pCQyxNQUFNO1lBQ05DLE1BQU07UUFPUjtJQUNKLEdBQUcsRUFBRTtBQUNYO0FBRUEsK0RBQWViLGtCQUFrQkEsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ob29rL3VzZUZvcnRoU291bFJlbmRlci50cz9iMDVjIl0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgZ3NhcCB9IGZyb20gXCJnc2FwXCI7XG5pbXBvcnQgeyBNb3Rpb25QYXRoUGx1Z2luIH0gZnJvbSBcImdzYXAvTW90aW9uUGF0aFBsdWdpblwiXG5pbXBvcnQgeyB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0IH0gZnJvbSBcInVzZWhvb2tzLXRzXCJcblxuY29uc3QgdXNlRm9ydGhTb3VsUmVuZGVyID0gKCkgPT57XG4gICAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCgoKTogYW55ID0+IHtcbiAgICAgICAgZ3NhcC5yZWdpc3RlclBsdWdpbihNb3Rpb25QYXRoUGx1Z2luKTtcbiAgICAgICAgZ3NhcC5mcm9tVG8oXCIjc291bDRcIix7XG4gICAgICAgICAgICB3aWR0aDo5MCxcbiAgICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgICAgICB4Ojk5MFxuICAgICAgICB9LCB7XG4gICAgICAgICAgICB3aWR0aDoxMDAsXG4gICAgICAgICAgICBkdXJhdGlvbjogMTAsXG4gICAgICAgICAgICBvcGFjaXR5OiAwLjQsXG4gICAgICAgICAgICByZXBlYXQ6IC0xLFxuICAgICAgICAgICAgcmVwZWF0RGVsYXk6IDEsXG4gICAgICAgICAgICBzY3JvbGxUcmlnZ2VyOiBcIiNmb3J0aFNlY1wiLFxuICAgICAgICAgICAgeDogMTAwMCxcbiAgICAgICAgICAgIHk6IDIwMCxcbiAgICAgICAgICAgIGltbWVkaWF0ZVJlbmRlcjogdHJ1ZSxcbiAgICAgICAgICAgIHlveW86IGZhbHNlLFxuICAgICAgICAgICAgZWFzZTogXCJwb3dlcjEuaW5PdXRcIlxuICAgICAgICAgICAgLy8gbW90aW9uUGF0aDp7XG4gICAgICAgICAgICAvLyAgIGFsaWduT3JpZ2luOiBbMC41LCAwLjVdLFxuICAgICAgICAgICAgLy8gICB3aWR0aDoyMDAsXG4gICAgICAgICAgICAvLyAgIG9wYWNpdHk6IDAuMixcbiAgICAgICAgICAgIC8vICAgcmVwZWF0OiAwXG4gICAgICAgICAgICAvLyB9XG4gICAgICAgICAgfSlcbiAgICAgIH0sIFtdKVxufVxuXG5leHBvcnQgZGVmYXVsdCB1c2VGb3J0aFNvdWxSZW5kZXIiXSwibmFtZXMiOlsiZ3NhcCIsIk1vdGlvblBhdGhQbHVnaW4iLCJ1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0IiwidXNlRm9ydGhTb3VsUmVuZGVyIiwicmVnaXN0ZXJQbHVnaW4iLCJmcm9tVG8iLCJ3aWR0aCIsIm9wYWNpdHkiLCJ4IiwiZHVyYXRpb24iLCJyZXBlYXQiLCJyZXBlYXREZWxheSIsInNjcm9sbFRyaWdnZXIiLCJ5IiwiaW1tZWRpYXRlUmVuZGVyIiwieW95byIsImVhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hook/useForthSoulRender.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./hook/useSecondSoulRender.ts":
/*!*************************************!*\
  !*** ./hook/useSecondSoulRender.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gsap */ \"(app-pages-browser)/./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_MotionPathPlugin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gsap/MotionPathPlugin */ \"(app-pages-browser)/./node_modules/gsap/MotionPathPlugin.js\");\n/* harmony import */ var usehooks_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! usehooks-ts */ \"(app-pages-browser)/./node_modules/usehooks-ts/dist/index.mjs\");\n\n\n\nconst useSecondSoulRender = ()=>{\n    (0,usehooks_ts__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect)(()=>{\n        gsap__WEBPACK_IMPORTED_MODULE_1__.gsap.registerPlugin(gsap_MotionPathPlugin__WEBPACK_IMPORTED_MODULE_2__.MotionPathPlugin);\n        const tl = gsap__WEBPACK_IMPORTED_MODULE_1__.gsap.fromTo(\"#soul2\", {\n            opacity: 0\n        }, {\n            width: 150,\n            duration: 20,\n            scrollTrigger: \"#secondSec\",\n            opacity: 0.7,\n            repeat: 0,\n            y: -2000,\n            repeatDelay: 0,\n            yoyo: true,\n            ease: \"power1.inOut\",\n            onComplete: ()=>{\n                tl.restart();\n            },\n            motionPath: {\n                path: \"#path2\",\n                align: \"#path2\",\n                start: 1,\n                end: 0,\n                alignOrigin: [\n                    0,\n                    1\n                ]\n            }\n        });\n    }, []);\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (useSecondSoulRender);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2svdXNlU2Vjb25kU291bFJlbmRlci50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQTRCO0FBQzRCO0FBQ0Q7QUFFdkQsTUFBTUcsc0JBQXNCO0lBQzFCRCxzRUFBeUJBLENBQUM7UUFDeEJGLHNDQUFJQSxDQUFDSSxjQUFjLENBQUNILG1FQUFnQkE7UUFDcEMsTUFBTUksS0FBS0wsc0NBQUlBLENBQUNNLE1BQU0sQ0FBQyxVQUFVO1lBQzdCQyxTQUFTO1FBQ2IsR0FBRTtZQUNFQyxPQUFPO1lBQ1BDLFVBQVU7WUFDVkMsZUFBZTtZQUNmSCxTQUFTO1lBQ1RJLFFBQVE7WUFDUkMsR0FBRyxDQUFDO1lBQ0pDLGFBQWE7WUFDYkMsTUFBTTtZQUNOQyxNQUFNO1lBQ05DLFlBQVk7Z0JBQ1RYLEdBQUdZLE9BQU87WUFDYjtZQUNBQyxZQUFXO2dCQUNUQyxNQUFNO2dCQUNOQyxPQUFPO2dCQUNQQyxPQUFPO2dCQUNQQyxLQUFLO2dCQUNMQyxhQUFhO29CQUFDO29CQUFHO2lCQUFFO1lBQ3JCO1FBQ0Y7SUFDTixHQUFHLEVBQUU7QUFDTDtBQUVBLCtEQUFlcEIsbUJBQW1CQSxFQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2hvb2svdXNlU2Vjb25kU291bFJlbmRlci50cz9lMWZhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdzYXAgfSBmcm9tIFwiZ3NhcFwiO1xuaW1wb3J0IHsgTW90aW9uUGF0aFBsdWdpbiB9IGZyb20gXCJnc2FwL01vdGlvblBhdGhQbHVnaW5cIlxuaW1wb3J0IHsgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCB9IGZyb20gXCJ1c2Vob29rcy10c1wiXG5cbmNvbnN0IHVzZVNlY29uZFNvdWxSZW5kZXIgPSAoKSA9PntcbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCgoKTogYW55ID0+IHtcbiAgICBnc2FwLnJlZ2lzdGVyUGx1Z2luKE1vdGlvblBhdGhQbHVnaW4pO1xuICAgIGNvbnN0IHRsID0gZ3NhcC5mcm9tVG8oXCIjc291bDJcIiwge1xuICAgICAgICBvcGFjaXR5OiAwXG4gICAgfSx7XG4gICAgICAgIHdpZHRoOiAxNTAsXG4gICAgICAgIGR1cmF0aW9uOiAyMCxcbiAgICAgICAgc2Nyb2xsVHJpZ2dlcjogXCIjc2Vjb25kU2VjXCIsXG4gICAgICAgIG9wYWNpdHk6IDAuNyxcbiAgICAgICAgcmVwZWF0OiAwLFxuICAgICAgICB5OiAtMjAwMCxcbiAgICAgICAgcmVwZWF0RGVsYXk6IDAsXG4gICAgICAgIHlveW86IHRydWUsXG4gICAgICAgIGVhc2U6IFwicG93ZXIxLmluT3V0XCIsXG4gICAgICAgIG9uQ29tcGxldGU6ICgpID0+IHtcbiAgICAgICAgICAgdGwucmVzdGFydCgpXG4gICAgICAgIH0sXG4gICAgICAgIG1vdGlvblBhdGg6e1xuICAgICAgICAgIHBhdGg6IFwiI3BhdGgyXCIsXG4gICAgICAgICAgYWxpZ246IFwiI3BhdGgyXCIsXG4gICAgICAgICAgc3RhcnQ6IDEsXG4gICAgICAgICAgZW5kOiAwLFxuICAgICAgICAgIGFsaWduT3JpZ2luOiBbMCwgMV1cbiAgICAgICAgfVxuICAgICAgfSlcbn0sIFtdKVxufVxuXG5leHBvcnQgZGVmYXVsdCB1c2VTZWNvbmRTb3VsUmVuZGVyIl0sIm5hbWVzIjpbImdzYXAiLCJNb3Rpb25QYXRoUGx1Z2luIiwidXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCIsInVzZVNlY29uZFNvdWxSZW5kZXIiLCJyZWdpc3RlclBsdWdpbiIsInRsIiwiZnJvbVRvIiwib3BhY2l0eSIsIndpZHRoIiwiZHVyYXRpb24iLCJzY3JvbGxUcmlnZ2VyIiwicmVwZWF0IiwieSIsInJlcGVhdERlbGF5IiwieW95byIsImVhc2UiLCJvbkNvbXBsZXRlIiwicmVzdGFydCIsIm1vdGlvblBhdGgiLCJwYXRoIiwiYWxpZ24iLCJzdGFydCIsImVuZCIsImFsaWduT3JpZ2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hook/useSecondSoulRender.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./hook/useThirdSoulRender.ts":
/*!************************************!*\
  !*** ./hook/useThirdSoulRender.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gsap */ \"(app-pages-browser)/./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_MotionPathPlugin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gsap/MotionPathPlugin */ \"(app-pages-browser)/./node_modules/gsap/MotionPathPlugin.js\");\n/* harmony import */ var usehooks_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! usehooks-ts */ \"(app-pages-browser)/./node_modules/usehooks-ts/dist/index.mjs\");\n\n\n\nconst useThirdSoulRender = ()=>{\n    (0,usehooks_ts__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect)(()=>{\n        gsap__WEBPACK_IMPORTED_MODULE_1__.gsap.registerPlugin(gsap_MotionPathPlugin__WEBPACK_IMPORTED_MODULE_2__.MotionPathPlugin);\n        const tl = gsap__WEBPACK_IMPORTED_MODULE_1__.gsap.fromTo(\"#soul3\", {\n            duration: 22\n        }, {\n            width: 110,\n            scrollTrigger: \"#thirdSec\",\n            duration: 15,\n            repeat: 0,\n            opacity: 0,\n            onComplete: ()=>{\n                tl.restart();\n            },\n            repeatDelay: 0,\n            yoyo: true,\n            ease: \"power1.inOut\",\n            motionPath: {\n                path: \"#path3\",\n                align: \"#path3\",\n                alignOrigin: [\n                    0.5,\n                    0.5\n                ]\n            }\n        });\n    }, []);\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (useThirdSoulRender);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2svdXNlVGhpcmRTb3VsUmVuZGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFDNEI7QUFDNEI7QUFDRDtBQUV2RCxNQUFNRyxxQkFBcUI7SUFDdkJELHNFQUF5QkEsQ0FBQztRQUN0QkYsc0NBQUlBLENBQUNJLGNBQWMsQ0FBQ0gsbUVBQWdCQTtRQUNyQyxNQUFNSSxLQUFLTCxzQ0FBSUEsQ0FBQ00sTUFBTSxDQUFDLFVBQVU7WUFDNUJDLFVBQVU7UUFDZCxHQUFFO1lBQ0VDLE9BQU87WUFDUEMsZUFBZTtZQUNmRixVQUFVO1lBQ1ZHLFFBQVE7WUFDUkMsU0FBUztZQUNUQyxZQUFZO2dCQUNSUCxHQUFHUSxPQUFPO1lBRWI7WUFDREMsYUFBYTtZQUNiQyxNQUFNO1lBQ05DLE1BQU07WUFDTkMsWUFBVztnQkFDVEMsTUFBTTtnQkFDTkMsT0FBTztnQkFDUEMsYUFBYTtvQkFBQztvQkFBSztpQkFBSTtZQUN6QjtRQUNGO0lBQ0osR0FBRyxFQUFFO0FBQ1g7QUFFQSwrREFBZWpCLGtCQUFrQkEsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ob29rL3VzZVRoaXJkU291bFJlbmRlci50cz84MDAyIl0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgZ3NhcCB9IGZyb20gXCJnc2FwXCI7XG5pbXBvcnQgeyBNb3Rpb25QYXRoUGx1Z2luIH0gZnJvbSBcImdzYXAvTW90aW9uUGF0aFBsdWdpblwiXG5pbXBvcnQgeyB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0IH0gZnJvbSBcInVzZWhvb2tzLXRzXCJcblxuY29uc3QgdXNlVGhpcmRTb3VsUmVuZGVyID0gKCkgPT57XG4gICAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCgoKTogYW55ID0+IHtcbiAgICAgICAgZ3NhcC5yZWdpc3RlclBsdWdpbihNb3Rpb25QYXRoUGx1Z2luKTtcbiAgICAgICBjb25zdCB0bCA9IGdzYXAuZnJvbVRvKFwiI3NvdWwzXCIsIHtcbiAgICAgICAgICAgIGR1cmF0aW9uOiAyMixcbiAgICAgICAgfSx7XG4gICAgICAgICAgICB3aWR0aDogMTEwLFxuICAgICAgICAgICAgc2Nyb2xsVHJpZ2dlcjogXCIjdGhpcmRTZWNcIixcbiAgICAgICAgICAgIGR1cmF0aW9uOiAxNSwgXG4gICAgICAgICAgICByZXBlYXQ6IDAsXG4gICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgb25Db21wbGV0ZTogKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRsLnJlc3RhcnQoKVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByZXBlYXREZWxheTogMCxcbiAgICAgICAgICAgIHlveW86IHRydWUsXG4gICAgICAgICAgICBlYXNlOiBcInBvd2VyMS5pbk91dFwiLFxuICAgICAgICAgICAgbW90aW9uUGF0aDp7XG4gICAgICAgICAgICAgIHBhdGg6IFwiI3BhdGgzXCIsXG4gICAgICAgICAgICAgIGFsaWduOiBcIiNwYXRoM1wiLFxuICAgICAgICAgICAgICBhbGlnbk9yaWdpbjogWzAuNSwgMC41XVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXG4gICAgICB9LCBbXSlcbn1cblxuZXhwb3J0IGRlZmF1bHQgdXNlVGhpcmRTb3VsUmVuZGVyIl0sIm5hbWVzIjpbImdzYXAiLCJNb3Rpb25QYXRoUGx1Z2luIiwidXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCIsInVzZVRoaXJkU291bFJlbmRlciIsInJlZ2lzdGVyUGx1Z2luIiwidGwiLCJmcm9tVG8iLCJkdXJhdGlvbiIsIndpZHRoIiwic2Nyb2xsVHJpZ2dlciIsInJlcGVhdCIsIm9wYWNpdHkiLCJvbkNvbXBsZXRlIiwicmVzdGFydCIsInJlcGVhdERlbGF5IiwieW95byIsImVhc2UiLCJtb3Rpb25QYXRoIiwicGF0aCIsImFsaWduIiwiYWxpZ25PcmlnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hook/useThirdSoulRender.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/usehooks-ts/dist/index.mjs":
/*!*************************************************!*\
  !*** ./node_modules/usehooks-ts/dist/index.mjs ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useBoolean: function() { return /* binding */ useBoolean; },\n/* harmony export */   useClickAnyWhere: function() { return /* binding */ useClickAnyWhere; },\n/* harmony export */   useCopyToClipboard: function() { return /* binding */ useCopyToClipboard; },\n/* harmony export */   useCountdown: function() { return /* binding */ useCountdown; },\n/* harmony export */   useCounter: function() { return /* binding */ useCounter; },\n/* harmony export */   useDarkMode: function() { return /* binding */ useDarkMode; },\n/* harmony export */   useDebounce: function() { return /* binding */ useDebounce; },\n/* harmony export */   useDebounceCallback: function() { return /* binding */ useDebounceCallback; },\n/* harmony export */   useDebounceValue: function() { return /* binding */ useDebounceValue; },\n/* harmony export */   useDocumentTitle: function() { return /* binding */ useDocumentTitle; },\n/* harmony export */   useEffectOnce: function() { return /* binding */ useEffectOnce; },\n/* harmony export */   useElementSize: function() { return /* binding */ useElementSize; },\n/* harmony export */   useEventCallback: function() { return /* binding */ useEventCallback; },\n/* harmony export */   useEventListener: function() { return /* binding */ useEventListener; },\n/* harmony export */   useFetch: function() { return /* binding */ useFetch; },\n/* harmony export */   useHover: function() { return /* binding */ useHover; },\n/* harmony export */   useImageOnLoad: function() { return /* binding */ useImageOnLoad; },\n/* harmony export */   useIntersectionObserver: function() { return /* binding */ useIntersectionObserver; },\n/* harmony export */   useInterval: function() { return /* binding */ useInterval; },\n/* harmony export */   useIsClient: function() { return /* binding */ useIsClient; },\n/* harmony export */   useIsFirstRender: function() { return /* binding */ useIsFirstRender; },\n/* harmony export */   useIsMounted: function() { return /* binding */ useIsMounted; },\n/* harmony export */   useIsomorphicLayoutEffect: function() { return /* binding */ useIsomorphicLayoutEffect; },\n/* harmony export */   useLocalStorage: function() { return /* binding */ useLocalStorage; },\n/* harmony export */   useLockedBody: function() { return /* binding */ useLockedBody; },\n/* harmony export */   useMap: function() { return /* binding */ useMap; },\n/* harmony export */   useMediaQuery: function() { return /* binding */ useMediaQuery; },\n/* harmony export */   useOnClickOutside: function() { return /* binding */ useOnClickOutside; },\n/* harmony export */   useReadLocalStorage: function() { return /* binding */ useReadLocalStorage; },\n/* harmony export */   useResizeObserver: function() { return /* binding */ useResizeObserver; },\n/* harmony export */   useScreen: function() { return /* binding */ useScreen; },\n/* harmony export */   useScript: function() { return /* binding */ useScript; },\n/* harmony export */   useScrollLock: function() { return /* binding */ useScrollLock; },\n/* harmony export */   useSessionStorage: function() { return /* binding */ useSessionStorage; },\n/* harmony export */   useSsr: function() { return /* binding */ useSsr; },\n/* harmony export */   useStep: function() { return /* binding */ useStep; },\n/* harmony export */   useTernaryDarkMode: function() { return /* binding */ useTernaryDarkMode; },\n/* harmony export */   useTimeout: function() { return /* binding */ useTimeout; },\n/* harmony export */   useToggle: function() { return /* binding */ useToggle; },\n/* harmony export */   useUnmount: function() { return /* binding */ useUnmount; },\n/* harmony export */   useUpdateEffect: function() { return /* binding */ useUpdateEffect; },\n/* harmony export */   useWindowSize: function() { return /* binding */ useWindowSize; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash.debounce */ \"(app-pages-browser)/./node_modules/lodash.debounce/index.js\");\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$(), _s10 = $RefreshSig$(), _s11 = $RefreshSig$(), _s12 = $RefreshSig$(), _s13 = $RefreshSig$(), _s14 = $RefreshSig$(), _s15 = $RefreshSig$(), _s16 = $RefreshSig$(), _s17 = $RefreshSig$(), _s18 = $RefreshSig$(), _s19 = $RefreshSig$(), _s20 = $RefreshSig$(), _s21 = $RefreshSig$(), _s22 = $RefreshSig$(), _s23 = $RefreshSig$(), _s24 = $RefreshSig$(), _s25 = $RefreshSig$(), _s26 = $RefreshSig$(), _s27 = $RefreshSig$(), _s28 = $RefreshSig$(), _s29 = $RefreshSig$(), _s30 = $RefreshSig$(), _s31 = $RefreshSig$(), _s32 = $RefreshSig$(), _s33 = $RefreshSig$(), _s34 = $RefreshSig$(), _s35 = $RefreshSig$(), _s36 = $RefreshSig$(), _s37 = $RefreshSig$(), _s38 = $RefreshSig$(), _s39 = $RefreshSig$();\n\n\n// src/useBoolean/useBoolean.ts\nfunction useBoolean(defaultValue) {\n    _s();\n    const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!!defaultValue);\n    const setTrue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setValue(true);\n    }, []);\n    const setFalse = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setValue(false);\n    }, []);\n    const toggle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setValue((x)=>!x);\n    }, []);\n    return {\n        value,\n        setValue,\n        setTrue,\n        setFalse,\n        toggle\n    };\n}\n_s(useBoolean, \"4LkfFqafk0QMIUyMKJliO3MaapE=\");\nvar useIsomorphicLayoutEffect =  true ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : 0;\n// src/useEventListener/useEventListener.ts\nfunction useEventListener(eventName, handler, element, options) {\n    _s1();\n    const savedHandler = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(handler);\n    useIsomorphicLayoutEffect(()=>{\n        savedHandler.current = handler;\n    }, [\n        handler\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        var _ref;\n        const targetElement = (_ref = element == null ? void 0 : element.current) !== null && _ref !== void 0 ? _ref : window;\n        if (!(targetElement && targetElement.addEventListener)) return;\n        const listener = (event)=>{\n            savedHandler.current(event);\n        };\n        targetElement.addEventListener(eventName, listener, options);\n        return ()=>{\n            targetElement.removeEventListener(eventName, listener, options);\n        };\n    }, [\n        eventName,\n        element,\n        options\n    ]);\n}\n_s1(useEventListener, \"EH916eH0EvCEeOm2Bl53TZGwYMg=\", false, function() {\n    return [\n        useIsomorphicLayoutEffect\n    ];\n});\n// src/useClickAnyWhere/useClickAnyWhere.ts\nfunction useClickAnyWhere(handler) {\n    _s2();\n    useEventListener(\"click\", (event)=>{\n        handler(event);\n    });\n}\n_s2(useClickAnyWhere, \"OG7opY+8ZoHrm599AbYnawX0H70=\", false, function() {\n    return [\n        useEventListener\n    ];\n});\nfunction useCopyToClipboard() {\n    _s3();\n    const [copiedText, setCopiedText] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const copy = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (text)=>{\n        if (!(navigator == null ? void 0 : navigator.clipboard)) {\n            console.warn(\"Clipboard not supported\");\n            return false;\n        }\n        try {\n            await navigator.clipboard.writeText(text);\n            setCopiedText(text);\n            return true;\n        } catch (error) {\n            console.warn(\"Copy failed\", error);\n            setCopiedText(null);\n            return false;\n        }\n    }, []);\n    return [\n        copiedText,\n        copy\n    ];\n}\n_s3(useCopyToClipboard, \"nuU9ROQZq7YW/lTdCK2PfcZRRKU=\");\nfunction useCounter(initialValue) {\n    _s4();\n    const [count, setCount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialValue !== null && initialValue !== void 0 ? initialValue : 0);\n    const increment = ()=>{\n        setCount((x)=>x + 1);\n    };\n    const decrement = ()=>{\n        setCount((x)=>x - 1);\n    };\n    const reset = ()=>{\n        setCount(initialValue !== null && initialValue !== void 0 ? initialValue : 0);\n    };\n    return {\n        count,\n        increment,\n        decrement,\n        reset,\n        setCount\n    };\n}\n_s4(useCounter, \"1QzyX5E+VK+jWepC01i0kfGJvT8=\");\nfunction useInterval(callback, delay) {\n    _s5();\n    const savedCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);\n    useIsomorphicLayoutEffect(()=>{\n        savedCallback.current = callback;\n    }, [\n        callback\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (delay === null) {\n            return;\n        }\n        const id = setInterval(()=>{\n            savedCallback.current();\n        }, delay);\n        return ()=>{\n            clearInterval(id);\n        };\n    }, [\n        delay\n    ]);\n}\n_s5(useInterval, \"WBUCExu9SQBAR3feS5Ac+l+OA+M=\", false, function() {\n    return [\n        useIsomorphicLayoutEffect\n    ];\n});\n// src/useCountdown/useCountdown.ts\nfunction useCountdown(countdownOptions) {\n    _s6();\n    let isDeprecated = false;\n    let countStart, intervalMs, isIncrement, countStop;\n    if (\"seconds\" in countdownOptions) {\n        console.warn(\"[useCountdown:DEPRECATED] new interface is already available (see https://usehooks-ts.com/react-hook/use-countdown), the old version will retire on usehooks-ts@3.\");\n        isDeprecated = true;\n        countStart = countdownOptions.seconds;\n        intervalMs = countdownOptions.interval;\n        isIncrement = countdownOptions.isIncrement;\n    } else {\n        ({ countStart, intervalMs, isIncrement, countStop } = countdownOptions);\n    }\n    intervalMs = intervalMs !== null && intervalMs !== void 0 ? intervalMs : 1e3;\n    isIncrement = isIncrement !== null && isIncrement !== void 0 ? isIncrement : false;\n    countStop = countStop !== null && countStop !== void 0 ? countStop : 0;\n    const { count, increment, decrement, reset: resetCounter } = useCounter(countStart);\n    const { value: isCountdownRunning, setTrue: startCountdown, setFalse: stopCountdown } = useBoolean(false);\n    const resetCountdown = ()=>{\n        stopCountdown();\n        resetCounter();\n    };\n    const countdownCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (count === countStop) {\n            stopCountdown();\n            return;\n        }\n        if (isIncrement) {\n            increment();\n        } else {\n            decrement();\n        }\n    }, [\n        count,\n        countStop,\n        decrement,\n        increment,\n        isIncrement,\n        stopCountdown\n    ]);\n    useInterval(countdownCallback, isCountdownRunning ? intervalMs : null);\n    return isDeprecated ? [\n        count,\n        {\n            start: startCountdown,\n            stop: stopCountdown,\n            reset: resetCountdown\n        }\n    ] : [\n        count,\n        {\n            startCountdown,\n            stopCountdown,\n            resetCountdown\n        }\n    ];\n}\n_s6(useCountdown, \"pxiy/hwWgXQCGniEqfk69EpY8gU=\", false, function() {\n    return [\n        useCounter,\n        useBoolean,\n        useInterval\n    ];\n});\nfunction useEventCallback(fn) {\n    _s7();\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(()=>{\n        throw new Error(\"Cannot call an event handler while rendering.\");\n    });\n    useIsomorphicLayoutEffect(()=>{\n        ref.current = fn;\n    }, [\n        fn\n    ]);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return ref.current(...args);\n    }, [\n        ref\n    ]);\n}\n_s7(useEventCallback, \"4G+hU6+Ijcf9tfOvQJ1mh4x0BUw=\", false, function() {\n    return [\n        useIsomorphicLayoutEffect\n    ];\n});\n// src/useLocalStorage/useLocalStorage.ts\nvar IS_SERVER = \"object\" === \"undefined\";\nfunction useLocalStorage(key, initialValue) {\n    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    _s8();\n    const { initializeWithValue = true } = options;\n    const serializer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((value)=>{\n        if (options.serializer) {\n            return options.serializer(value);\n        }\n        return JSON.stringify(value);\n    }, [\n        options\n    ]);\n    const deserializer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((value)=>{\n        if (options.deserializer) {\n            return options.deserializer(value);\n        }\n        if (value === \"undefined\") {\n            return void 0;\n        }\n        const defaultValue = initialValue instanceof Function ? initialValue() : initialValue;\n        let parsed;\n        try {\n            parsed = JSON.parse(value);\n        } catch (error) {\n            console.error(\"Error parsing JSON:\", error);\n            return defaultValue;\n        }\n        return parsed;\n    }, [\n        options,\n        initialValue\n    ]);\n    const readValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        const initialValueToUse = initialValue instanceof Function ? initialValue() : initialValue;\n        if (IS_SERVER) {\n            return initialValueToUse;\n        }\n        try {\n            const raw = window.localStorage.getItem(key);\n            return raw ? deserializer(raw) : initialValueToUse;\n        } catch (error) {\n            console.warn(\"Error reading localStorage key “\".concat(key, \"”:\"), error);\n            return initialValueToUse;\n        }\n    }, [\n        initialValue,\n        key,\n        deserializer\n    ]);\n    const [storedValue, setStoredValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>{\n        if (initializeWithValue) {\n            return readValue();\n        }\n        return initialValue instanceof Function ? initialValue() : initialValue;\n    });\n    const setValue = useEventCallback((value)=>{\n        if (IS_SERVER) {\n            console.warn(\"Tried setting localStorage key “\".concat(key, \"” even though environment is not a client\"));\n        }\n        try {\n            const newValue = value instanceof Function ? value(readValue()) : value;\n            window.localStorage.setItem(key, serializer(newValue));\n            setStoredValue(newValue);\n            window.dispatchEvent(new StorageEvent(\"local-storage\", {\n                key\n            }));\n        } catch (error) {\n            console.warn(\"Error setting localStorage key “\".concat(key, \"”:\"), error);\n        }\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        setStoredValue(readValue());\n    }, [\n        key\n    ]);\n    const handleStorageChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event)=>{\n        if ((event == null ? void 0 : event.key) && event.key !== key) {\n            return;\n        }\n        setStoredValue(readValue());\n    }, [\n        key,\n        readValue\n    ]);\n    useEventListener(\"storage\", handleStorageChange);\n    useEventListener(\"local-storage\", handleStorageChange);\n    return [\n        storedValue,\n        setValue\n    ];\n}\n_s8(useLocalStorage, \"vJoOY7tbnQcClbXwOlELm2V8Qp4=\", false, function() {\n    return [\n        useEventCallback,\n        useEventListener,\n        useEventListener\n    ];\n});\nvar IS_SERVER2 = \"object\" === \"undefined\";\nfunction useMediaQuery(query, options) {\n    _s9();\n    var _ref;\n    const defaultValue = typeof options === \"boolean\" ? options : (_ref = options == null ? void 0 : options.defaultValue) !== null && _ref !== void 0 ? _ref : false;\n    var _ref1;\n    const initializeWithValue = typeof options === \"boolean\" ? void 0 : (_ref1 = options == null ? void 0 : options.initializeWithValue) !== null && _ref1 !== void 0 ? _ref1 : void 0;\n    const getMatches = (query2)=>{\n        if (IS_SERVER2) {\n            return defaultValue;\n        }\n        return window.matchMedia(query2).matches;\n    };\n    const [matches, setMatches] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>{\n        if (initializeWithValue) {\n            return getMatches(query);\n        }\n        return defaultValue;\n    });\n    function handleChange() {\n        setMatches(getMatches(query));\n    }\n    useIsomorphicLayoutEffect(()=>{\n        const matchMedia = window.matchMedia(query);\n        handleChange();\n        if (matchMedia.addListener) {\n            matchMedia.addListener(handleChange);\n        } else {\n            matchMedia.addEventListener(\"change\", handleChange);\n        }\n        return ()=>{\n            if (matchMedia.removeListener) {\n                matchMedia.removeListener(handleChange);\n            } else {\n                matchMedia.removeEventListener(\"change\", handleChange);\n            }\n        };\n    }, [\n        query\n    ]);\n    return matches;\n}\n_s9(useMediaQuery, \"ByUzhVUxsAPse+SKHi0bxo8Tjzo=\", false, function() {\n    return [\n        useIsomorphicLayoutEffect\n    ];\n});\n// src/useDarkMode/useDarkMode.ts\nvar COLOR_SCHEME_QUERY = \"(prefers-color-scheme: dark)\";\nvar LOCAL_STORAGE_KEY = \"usehooks-ts-dark-mode\";\nfunction useDarkMode(options) {\n    let localStorageKeyProps = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : LOCAL_STORAGE_KEY;\n    _s10();\n    const counter = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n    counter.current++;\n    const defaultValue = typeof options === \"boolean\" ? options : options == null ? void 0 : options.defaultValue;\n    var _ref;\n    const localStorageKey = typeof options === \"boolean\" ? localStorageKeyProps !== null && localStorageKeyProps !== void 0 ? localStorageKeyProps : LOCAL_STORAGE_KEY : (_ref = options == null ? void 0 : options.localStorageKey) !== null && _ref !== void 0 ? _ref : LOCAL_STORAGE_KEY;\n    var _ref1;\n    const initializeWithValue = typeof options === \"boolean\" ? void 0 : (_ref1 = options == null ? void 0 : options.initializeWithValue) !== null && _ref1 !== void 0 ? _ref1 : void 0;\n    const isDarkOS = useMediaQuery(COLOR_SCHEME_QUERY, {\n        initializeWithValue,\n        defaultValue\n    });\n    var _ref2;\n    const [isDarkMode, setDarkMode] = useLocalStorage(localStorageKey, (_ref2 = defaultValue !== null && defaultValue !== void 0 ? defaultValue : isDarkOS) !== null && _ref2 !== void 0 ? _ref2 : false, {\n        initializeWithValue\n    });\n    useIsomorphicLayoutEffect(()=>{\n        if (isDarkOS !== isDarkMode) {\n            setDarkMode(isDarkOS);\n        }\n    }, [\n        isDarkOS\n    ]);\n    return {\n        isDarkMode,\n        toggle: ()=>{\n            setDarkMode((prev)=>!prev);\n        },\n        enable: ()=>{\n            setDarkMode(true);\n        },\n        disable: ()=>{\n            setDarkMode(false);\n        },\n        set: (value)=>{\n            setDarkMode(value);\n        }\n    };\n}\n_s10(useDarkMode, \"681Pn6NoF/n7EXNFVyi2vWXsLas=\", false, function() {\n    return [\n        useMediaQuery,\n        useLocalStorage,\n        useIsomorphicLayoutEffect\n    ];\n});\nfunction useDebounce(value, delay) {\n    _s11();\n    const [debouncedValue, setDebouncedValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const timer = setTimeout(()=>{\n            setDebouncedValue(value);\n        }, delay !== null && delay !== void 0 ? delay : 500);\n        return ()=>{\n            clearTimeout(timer);\n        };\n    }, [\n        value,\n        delay\n    ]);\n    return debouncedValue;\n}\n_s11(useDebounce, \"KDuPAtDOgxm8PU6legVJOb3oOmA=\");\nfunction useUnmount(func) {\n    _s12();\n    const funcRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(func);\n    funcRef.current = func;\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>()=>{\n            funcRef.current();\n        }, []);\n}\n_s12(useUnmount, \"ELixvu7S64n/OCuQkaqR/vnytyI=\");\n// src/useDebounceCallback/useDebounceCallback.ts\nfunction useDebounceCallback(func) {\n    let delay = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 500, options = arguments.length > 2 ? arguments[2] : void 0;\n    _s13();\n    const debouncedFunc = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    useUnmount(()=>{\n        if (debouncedFunc.current) {\n            debouncedFunc.current.cancel();\n        }\n    });\n    const debounced = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        const debouncedFuncInstance = lodash_debounce__WEBPACK_IMPORTED_MODULE_1__(func, delay, options);\n        const wrappedFunc = function() {\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            return debouncedFuncInstance(...args);\n        };\n        wrappedFunc.cancel = ()=>{\n            debouncedFuncInstance.cancel();\n        };\n        wrappedFunc.isPending = ()=>{\n            return !!debouncedFunc.current;\n        };\n        wrappedFunc.flush = ()=>{\n            return debouncedFuncInstance.flush();\n        };\n        return wrappedFunc;\n    }, [\n        func,\n        delay,\n        options\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        debouncedFunc.current = lodash_debounce__WEBPACK_IMPORTED_MODULE_1__(func, delay, options);\n    }, [\n        func,\n        delay,\n        options\n    ]);\n    return debounced;\n}\n_s13(useDebounceCallback, \"/do9Ofvm5Rj73cHGf1EDjEcuf68=\", false, function() {\n    return [\n        useUnmount\n    ];\n});\nfunction useDebounceValue(initialValue, delay, options) {\n    _s14();\n    var _ref;\n    const eq = (_ref = options == null ? void 0 : options.equalityFn) !== null && _ref !== void 0 ? _ref : (left, right)=>left === right;\n    const unwrappedInitialValue = initialValue instanceof Function ? initialValue() : initialValue;\n    const [debouncedValue, setDebouncedValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(unwrappedInitialValue);\n    const previousValueRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(unwrappedInitialValue);\n    const updateDebouncedValue = useDebounceCallback(setDebouncedValue, delay, options);\n    if (!eq(previousValueRef.current, unwrappedInitialValue)) {\n        updateDebouncedValue(unwrappedInitialValue);\n        previousValueRef.current = unwrappedInitialValue;\n    }\n    return [\n        debouncedValue,\n        updateDebouncedValue\n    ];\n}\n_s14(useDebounceValue, \"tpFAmL7UvVQiH+lOWVM3xyMxjFc=\", false, function() {\n    return [\n        useDebounceCallback\n    ];\n});\nfunction useDocumentTitle(title) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    _s15();\n    const { preserveTitleOnUnmount = true } = options;\n    const defaultTitle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    useIsomorphicLayoutEffect(()=>{\n        defaultTitle.current = window.document.title;\n    }, []);\n    useIsomorphicLayoutEffect(()=>{\n        window.document.title = title;\n    }, [\n        title\n    ]);\n    useUnmount(()=>{\n        if (!preserveTitleOnUnmount && defaultTitle.current) {\n            window.document.title = defaultTitle.current;\n        }\n    });\n}\n_s15(useDocumentTitle, \"ZH/hIiTI1O9YkTIrsr9/mnng5BM=\", false, function() {\n    return [\n        useIsomorphicLayoutEffect,\n        useIsomorphicLayoutEffect,\n        useUnmount\n    ];\n});\nfunction useEffectOnce(effect) {\n    _s16();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(effect, []);\n}\n_s16(useEffectOnce, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nfunction useElementSize() {\n    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    _s17();\n    const { initializeWithValue = true } = options;\n    const [ref, setRef] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const readValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        var _ref, _ref1;\n        return {\n            width: (_ref = ref == null ? void 0 : ref.offsetWidth) !== null && _ref !== void 0 ? _ref : void 0,\n            height: (_ref1 = ref == null ? void 0 : ref.offsetHeight) !== null && _ref1 !== void 0 ? _ref1 : void 0\n        };\n    }, [\n        ref == null ? void 0 : ref.offsetHeight,\n        ref == null ? void 0 : ref.offsetWidth\n    ]);\n    const [size, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>{\n        if (initializeWithValue) {\n            return readValue();\n        }\n        return {\n            width: void 0,\n            height: void 0\n        };\n    });\n    const handleSize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setSize(readValue());\n    }, [\n        ref == null ? void 0 : ref.offsetHeight,\n        ref == null ? void 0 : ref.offsetWidth\n    ]);\n    useEventListener(\"resize\", handleSize);\n    useIsomorphicLayoutEffect(()=>{\n        handleSize();\n    }, [\n        ref == null ? void 0 : ref.offsetHeight,\n        ref == null ? void 0 : ref.offsetWidth\n    ]);\n    const result = [\n        setRef,\n        size\n    ];\n    result.ref = result[0];\n    result.width = size.width;\n    result.height = size.height;\n    return result;\n}\n_s17(useElementSize, \"9K3TG9iVLsh7F13HkjgYmZp/62Y=\", false, function() {\n    return [\n        useEventListener,\n        useIsomorphicLayoutEffect\n    ];\n});\nfunction useFetch(url, options) {\n    _s18();\n    const cache = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({});\n    const cancelRequest = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const initialState = {\n        error: void 0,\n        data: void 0\n    };\n    const fetchReducer = (state2, action)=>{\n        switch(action.type){\n            case \"loading\":\n                return {\n                    ...initialState\n                };\n            case \"fetched\":\n                return {\n                    ...initialState,\n                    data: action.payload\n                };\n            case \"error\":\n                return {\n                    ...initialState,\n                    error: action.payload\n                };\n            default:\n                return state2;\n        }\n    };\n    const [state, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(fetchReducer, initialState);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!url) return;\n        cancelRequest.current = false;\n        const fetchData = async ()=>{\n            dispatch({\n                type: \"loading\"\n            });\n            const currentCache = cache.current[url];\n            if (currentCache) {\n                dispatch({\n                    type: \"fetched\",\n                    payload: currentCache\n                });\n                return;\n            }\n            try {\n                const response = await fetch(url, options);\n                if (!response.ok) {\n                    throw new Error(response.statusText);\n                }\n                const data = await response.json();\n                cache.current[url] = data;\n                if (cancelRequest.current) return;\n                dispatch({\n                    type: \"fetched\",\n                    payload: data\n                });\n            } catch (error) {\n                if (cancelRequest.current) return;\n                dispatch({\n                    type: \"error\",\n                    payload: error\n                });\n            }\n        };\n        void fetchData();\n        return ()=>{\n            cancelRequest.current = true;\n        };\n    }, [\n        url\n    ]);\n    return state;\n}\n_s18(useFetch, \"VsMM40DIV/UGg8qhn/RBHS1FIYY=\");\nfunction useHover(elementRef) {\n    _s19();\n    const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const handleMouseEnter = ()=>{\n        setValue(true);\n    };\n    const handleMouseLeave = ()=>{\n        setValue(false);\n    };\n    useEventListener(\"mouseenter\", handleMouseEnter, elementRef);\n    useEventListener(\"mouseleave\", handleMouseLeave, elementRef);\n    return value;\n}\n_s19(useHover, \"Ais1jtYv8cT3iojBFyjqrGWH/+s=\", false, function() {\n    return [\n        useEventListener,\n        useEventListener\n    ];\n});\nfunction useImageOnLoad() {\n    _s20();\n    const [isLoaded, setIsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const handleImageOnLoad = ()=>{\n        setIsLoaded(true);\n    };\n    const css = {\n        // Thumbnail style.\n        thumbnail: {\n            visibility: isLoaded ? \"hidden\" : \"visible\",\n            filter: \"blur(8px)\",\n            transition: \"visibility 0ms ease-out 500ms\"\n        },\n        // Full image style.\n        fullSize: {\n            opacity: isLoaded ? 1 : 0,\n            transition: \"opacity 500ms ease-in 0ms\"\n        }\n    };\n    return {\n        handleImageOnLoad,\n        css\n    };\n}\n_s20(useImageOnLoad, \"IYJBVyHsXBw9t28YX/YBiMCcttM=\");\nfunction useIntersectionObserver(optionsOrLegacyRef, legacyOptions) {\n    _s21();\n    var _a;\n    const isLegacySignature = \"current\" in optionsOrLegacyRef;\n    const options = isLegacySignature ? legacyOptions : optionsOrLegacyRef;\n    const { threshold = 0, root = null, rootMargin = \"0%\", freezeOnceVisible = false, initialIsIntersecting = false } = options !== null && options !== void 0 ? options : {};\n    const [newRef, setNewRef] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const ref = isLegacySignature ? optionsOrLegacyRef.current : newRef;\n    const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>({\n            isIntersecting: initialIsIntersecting,\n            entry: void 0\n        }));\n    const callbackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    callbackRef.current = options == null ? void 0 : options.onChange;\n    const frozen = ((_a = state.entry) == null ? void 0 : _a.isIntersecting) && freezeOnceVisible;\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!ref) return;\n        if (!(\"IntersectionObserver\" in window)) return;\n        if (frozen) return;\n        let unobserve;\n        const observer = new IntersectionObserver((entries)=>{\n            const thresholds = Array.isArray(observer.thresholds) ? observer.thresholds : [\n                observer.thresholds\n            ];\n            entries.forEach((entry)=>{\n                const isIntersecting = entry.isIntersecting && thresholds.some((threshold2)=>entry.intersectionRatio >= threshold2);\n                setState({\n                    isIntersecting,\n                    entry\n                });\n                if (callbackRef.current) {\n                    callbackRef.current(isIntersecting, entry);\n                }\n                if (isIntersecting && freezeOnceVisible && unobserve) {\n                    unobserve();\n                    unobserve = void 0;\n                }\n            });\n        }, {\n            threshold,\n            root,\n            rootMargin\n        });\n        observer.observe(ref);\n        return ()=>{\n            observer.disconnect();\n        };\n    }, [\n        ref,\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        JSON.stringify(threshold),\n        root,\n        rootMargin,\n        frozen,\n        freezeOnceVisible\n    ]);\n    const prevRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        var _a2;\n        if (!ref && ((_a2 = state.entry) == null ? void 0 : _a2.target) && !freezeOnceVisible && !frozen && prevRef.current !== state.entry.target) {\n            prevRef.current = state.entry.target;\n            setState({\n                isIntersecting: initialIsIntersecting,\n                entry: void 0\n            });\n        }\n    }, [\n        ref,\n        state.entry,\n        freezeOnceVisible,\n        frozen,\n        initialIsIntersecting\n    ]);\n    if (isLegacySignature) {\n        return state.entry;\n    }\n    const result = [\n        setNewRef,\n        !!state.isIntersecting,\n        state.entry\n    ];\n    result.ref = result[0];\n    result.isIntersecting = result[1];\n    result.entry = result[2];\n    return result;\n}\n_s21(useIntersectionObserver, \"AW0oCP/468DMLvFHWaQiwKzi79g=\");\nfunction useIsClient() {\n    _s22();\n    const [isClient, setClient] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        setClient(true);\n    }, []);\n    return isClient;\n}\n_s22(useIsClient, \"yQO/Gf/MBVuDbl879yNwxh9+ztU=\");\nfunction useIsFirstRender() {\n    _s23();\n    const isFirst = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n    if (isFirst.current) {\n        isFirst.current = false;\n        return true;\n    }\n    return isFirst.current;\n}\n_s23(useIsFirstRender, \"VMrsbHwAsi+3jYEGunylQRYlhpQ=\");\nfunction useIsMounted() {\n    _s24();\n    const isMounted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        isMounted.current = true;\n        return ()=>{\n            isMounted.current = false;\n        };\n    }, []);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>isMounted.current, []);\n}\n_s24(useIsMounted, \"1xnh6J2MtHcv6Ldy+q9sl54UwDc=\");\nfunction useLockedBody() {\n    let initialLocked = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false, rootId = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"___gatsby\";\n    _s25();\n    const [locked, setLocked] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialLocked);\n    useIsomorphicLayoutEffect(()=>{\n        if (!locked) {\n            return;\n        }\n        const originalOverflow = document.body.style.overflow;\n        const originalPaddingRight = document.body.style.paddingRight;\n        document.body.style.overflow = \"hidden\";\n        const root = document.getElementById(rootId);\n        const scrollBarWidth = root ? root.offsetWidth - root.scrollWidth : 0;\n        if (scrollBarWidth) {\n            document.body.style.paddingRight = \"\".concat(scrollBarWidth, \"px\");\n        }\n        return ()=>{\n            document.body.style.overflow = originalOverflow;\n            if (scrollBarWidth) {\n                document.body.style.paddingRight = originalPaddingRight;\n            }\n        };\n    }, [\n        locked\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (locked !== initialLocked) {\n            setLocked(initialLocked);\n        }\n    }, [\n        initialLocked\n    ]);\n    return [\n        locked,\n        setLocked\n    ];\n}\n_s25(useLockedBody, \"2iMMQTMCGw8TKBKPsx/6uM2Z+T0=\", false, function() {\n    return [\n        useIsomorphicLayoutEffect\n    ];\n});\nfunction useMap() {\n    let initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : /* @__PURE__ */ new Map();\n    _s26();\n    const [map, setMap] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Map(initialState));\n    const actions = {\n        set: (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((key, value)=>{\n            setMap((prev)=>{\n                const copy = new Map(prev);\n                copy.set(key, value);\n                return copy;\n            });\n        }, []),\n        setAll: (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((entries)=>{\n            setMap(()=>new Map(entries));\n        }, []),\n        remove: (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((key)=>{\n            setMap((prev)=>{\n                const copy = new Map(prev);\n                copy.delete(key);\n                return copy;\n            });\n        }, []),\n        reset: (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n            setMap(()=>/* @__PURE__ */ new Map());\n        }, [])\n    };\n    return [\n        map,\n        actions\n    ];\n}\n_s26(useMap, \"Vh1J/DrOXUIbb3MqfUll/qND5Ro=\");\n// src/useOnClickOutside/useOnClickOutside.ts\nfunction useOnClickOutside(ref, handler) {\n    let eventType = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"mousedown\";\n    _s27();\n    useEventListener(eventType, (event)=>{\n        const target = event.target;\n        if (!target || !target.isConnected) {\n            return;\n        }\n        const isOutside = Array.isArray(ref) ? ref.every((r)=>r.current && !r.current.contains(target)) : ref.current && !ref.current.contains(target);\n        if (isOutside) {\n            handler(event);\n        }\n    });\n}\n_s27(useOnClickOutside, \"OG7opY+8ZoHrm599AbYnawX0H70=\", false, function() {\n    return [\n        useEventListener\n    ];\n});\nvar IS_SERVER3 = \"object\" === \"undefined\";\nfunction useReadLocalStorage(key) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    _s28();\n    let { initializeWithValue = true } = options;\n    if (IS_SERVER3) {\n        initializeWithValue = false;\n    }\n    const deserializer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((value)=>{\n        if (options.deserializer) {\n            return options.deserializer(value);\n        }\n        if (value === \"undefined\") {\n            return void 0;\n        }\n        let parsed;\n        try {\n            parsed = JSON.parse(value);\n        } catch (error) {\n            console.error(\"Error parsing JSON:\", error);\n            return null;\n        }\n        return parsed;\n    }, [\n        options\n    ]);\n    const readValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (IS_SERVER3) {\n            return null;\n        }\n        try {\n            const raw = window.localStorage.getItem(key);\n            return raw ? deserializer(raw) : null;\n        } catch (error) {\n            console.warn(\"Error reading localStorage key “\".concat(key, \"”:\"), error);\n            return null;\n        }\n    }, [\n        key,\n        deserializer\n    ]);\n    const [storedValue, setStoredValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>{\n        if (initializeWithValue) {\n            return readValue();\n        }\n        return void 0;\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        setStoredValue(readValue());\n    }, [\n        key\n    ]);\n    const handleStorageChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event)=>{\n        if ((event == null ? void 0 : event.key) && event.key !== key) {\n            return;\n        }\n        setStoredValue(readValue());\n    }, [\n        key,\n        readValue\n    ]);\n    useEventListener(\"storage\", handleStorageChange);\n    useEventListener(\"local-storage\", handleStorageChange);\n    return storedValue;\n}\n_s28(useReadLocalStorage, \"2lDjsd1LbbVuWYQxiZy8DOkTtqk=\", false, function() {\n    return [\n        useEventListener,\n        useEventListener\n    ];\n});\nvar initialSize = {\n    width: void 0,\n    height: void 0\n};\nfunction useResizeObserver(options) {\n    _s29();\n    const { ref, box = \"content-box\" } = options;\n    const [{ width, height }, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialSize);\n    const isMounted = useIsMounted();\n    const previousSize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n        ...initialSize\n    });\n    const onResize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(void 0);\n    onResize.current = options == null ? void 0 : options.onResize;\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!(ref == null ? void 0 : ref.current)) return;\n        if ( false || !(\"ResizeObserver\" in window)) return;\n        const observer = new ResizeObserver((param)=>{\n            let [entry] = param;\n            const boxProp = box === \"border-box\" ? \"borderBoxSize\" : box === \"device-pixel-content-box\" ? \"devicePixelContentBoxSize\" : \"contentBoxSize\";\n            const newWidth = extractSize(entry, boxProp, \"inlineSize\");\n            const newHeight = extractSize(entry, boxProp, \"blockSize\");\n            const hasChanged = previousSize.current.width !== newWidth || previousSize.current.height !== newHeight;\n            if (hasChanged) {\n                const newSize = {\n                    width: newWidth,\n                    height: newHeight\n                };\n                previousSize.current.width = newWidth;\n                previousSize.current.height = newHeight;\n                if (onResize == null ? void 0 : onResize.current) {\n                    onResize.current(newSize);\n                } else {\n                    if (isMounted()) {\n                        setSize(newSize);\n                    }\n                }\n            }\n        });\n        observer.observe(ref.current, {\n            box\n        });\n        return ()=>{\n            observer.disconnect();\n        };\n    }, [\n        box,\n        ref,\n        isMounted\n    ]);\n    return {\n        width,\n        height\n    };\n}\n_s29(useResizeObserver, \"P4bQZysHnyaJkGp+CR8nqyQ5v4g=\", false, function() {\n    return [\n        useIsMounted\n    ];\n});\nfunction extractSize(entry, box, sizeType) {\n    if (!entry[box]) {\n        if (box === \"contentBoxSize\") {\n            return entry.contentRect[sizeType === \"inlineSize\" ? \"width\" : \"height\"];\n        }\n        return void 0;\n    }\n    return Array.isArray(entry[box]) ? entry[box][0][sizeType] : // @ts-ignore Support Firefox's non-standard behavior\n    entry[box][sizeType];\n}\nvar IS_SERVER4 = \"object\" === \"undefined\";\nfunction useScreen() {\n    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    _s30();\n    let { initializeWithValue = true } = options;\n    if (IS_SERVER4) {\n        initializeWithValue = false;\n    }\n    const readScreen = ()=>{\n        if (IS_SERVER4) {\n            return void 0;\n        }\n        return window.screen;\n    };\n    const [screen, setScreen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>{\n        if (initializeWithValue) {\n            return readScreen();\n        }\n        return void 0;\n    });\n    const debouncedSetScreen = useDebounceCallback(setScreen, options == null ? void 0 : options.debounceDelay);\n    function handleSize() {\n        const newScreen = readScreen();\n        const setSize = (options == null ? void 0 : options.debounceDelay) ? debouncedSetScreen : setScreen;\n        if (newScreen) {\n            const { width, height, availHeight, availWidth, colorDepth, orientation, pixelDepth } = newScreen;\n            setSize({\n                width,\n                height,\n                availHeight,\n                availWidth,\n                colorDepth,\n                orientation,\n                pixelDepth\n            });\n        }\n    }\n    useEventListener(\"resize\", handleSize);\n    useIsomorphicLayoutEffect(()=>{\n        handleSize();\n    }, []);\n    return screen;\n}\n_s30(useScreen, \"amCL+n3UzuxqRWSP2Pq3R2LYLLk=\", false, function() {\n    return [\n        useDebounceCallback,\n        useEventListener,\n        useIsomorphicLayoutEffect\n    ];\n});\nvar cachedScriptStatuses = /* @__PURE__ */ new Map();\nfunction getScriptNode(src) {\n    const node = document.querySelector('script[src=\"'.concat(src, '\"]'));\n    const status = node == null ? void 0 : node.getAttribute(\"data-status\");\n    return {\n        node,\n        status\n    };\n}\nfunction useScript(src, options) {\n    _s31();\n    const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>{\n        if (!src || (options == null ? void 0 : options.shouldPreventLoad)) {\n            return \"idle\";\n        }\n        if (false) {}\n        var _cachedScriptStatuses_get;\n        return (_cachedScriptStatuses_get = cachedScriptStatuses.get(src)) !== null && _cachedScriptStatuses_get !== void 0 ? _cachedScriptStatuses_get : \"loading\";\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!src || (options == null ? void 0 : options.shouldPreventLoad)) {\n            return;\n        }\n        const cachedScriptStatus = cachedScriptStatuses.get(src);\n        if (cachedScriptStatus === \"ready\" || cachedScriptStatus === \"error\") {\n            setStatus(cachedScriptStatus);\n            return;\n        }\n        const script = getScriptNode(src);\n        let scriptNode = script.node;\n        if (!scriptNode) {\n            scriptNode = document.createElement(\"script\");\n            scriptNode.src = src;\n            scriptNode.async = true;\n            scriptNode.setAttribute(\"data-status\", \"loading\");\n            document.body.appendChild(scriptNode);\n            const setAttributeFromEvent = (event)=>{\n                const scriptStatus = event.type === \"load\" ? \"ready\" : \"error\";\n                scriptNode == null ? void 0 : scriptNode.setAttribute(\"data-status\", scriptStatus);\n            };\n            scriptNode.addEventListener(\"load\", setAttributeFromEvent);\n            scriptNode.addEventListener(\"error\", setAttributeFromEvent);\n        } else {\n            var _script_status, _ref;\n            setStatus((_ref = (_script_status = script.status) !== null && _script_status !== void 0 ? _script_status : cachedScriptStatus) !== null && _ref !== void 0 ? _ref : \"loading\");\n        }\n        const setStateFromEvent = (event)=>{\n            const newStatus = event.type === \"load\" ? \"ready\" : \"error\";\n            setStatus(newStatus);\n            cachedScriptStatuses.set(src, newStatus);\n        };\n        scriptNode.addEventListener(\"load\", setStateFromEvent);\n        scriptNode.addEventListener(\"error\", setStateFromEvent);\n        return ()=>{\n            if (scriptNode) {\n                scriptNode.removeEventListener(\"load\", setStateFromEvent);\n                scriptNode.removeEventListener(\"error\", setStateFromEvent);\n            }\n            if (scriptNode && (options == null ? void 0 : options.removeOnUnmount)) {\n                scriptNode.remove();\n                cachedScriptStatuses.delete(src);\n            }\n        };\n    }, [\n        src,\n        options == null ? void 0 : options.shouldPreventLoad,\n        options == null ? void 0 : options.removeOnUnmount\n    ]);\n    return status;\n}\n_s31(useScript, \"LjfPZC0onWv4etDGewsry42g/lE=\");\nvar IS_SERVER5 = \"object\" === \"undefined\";\nfunction useScrollLock() {\n    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    _s32();\n    const { autoLock = true, lockTarget, widthReflow = true } = options;\n    const target = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const originalStyle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const lock = ()=>{\n        if (target.current) {\n            const { overflow, paddingRight } = window.getComputedStyle(target.current);\n            originalStyle.current = {\n                overflow,\n                paddingRight\n            };\n            target.current.style.overflow = \"hidden\";\n            if (widthReflow) {\n                const scrollbarWidth = target.current.offsetWidth - target.current.scrollWidth;\n                target.current.style.paddingRight = \"\".concat(scrollbarWidth, \"px\");\n            }\n        }\n    };\n    const unlock = ()=>{\n        if (target.current && originalStyle.current) {\n            target.current.style.overflow = originalStyle.current.overflow;\n            target.current.style.paddingRight = originalStyle.current.paddingRight;\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(()=>{\n        if (IS_SERVER5) return;\n        if (lockTarget) {\n            target.current = typeof lockTarget === \"string\" ? document.querySelector(lockTarget) : lockTarget;\n        }\n        if (!target.current) {\n            target.current = document.body;\n        }\n        if (autoLock) {\n            lock();\n        }\n        return ()=>{\n            unlock();\n        };\n    }, [\n        autoLock,\n        lockTarget,\n        widthReflow\n    ]);\n    return {\n        lock,\n        unlock\n    };\n}\n_s32(useScrollLock, \"N6ek6kXwtPe5d6HAU06uMo6lRR4=\");\nvar IS_SERVER6 = \"object\" === \"undefined\";\nfunction useSessionStorage(key, initialValue) {\n    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    _s33();\n    const { initializeWithValue = true } = options;\n    const serializer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((value)=>{\n        if (options.serializer) {\n            return options.serializer(value);\n        }\n        return JSON.stringify(value);\n    }, [\n        options\n    ]);\n    const deserializer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((value)=>{\n        if (options.deserializer) {\n            return options.deserializer(value);\n        }\n        if (value === \"undefined\") {\n            return void 0;\n        }\n        const defaultValue = initialValue instanceof Function ? initialValue() : initialValue;\n        let parsed;\n        try {\n            parsed = JSON.parse(value);\n        } catch (error) {\n            console.error(\"Error parsing JSON:\", error);\n            return defaultValue;\n        }\n        return parsed;\n    }, [\n        options,\n        initialValue\n    ]);\n    const readValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        const initialValueToUse = initialValue instanceof Function ? initialValue() : initialValue;\n        if (IS_SERVER6) {\n            return initialValueToUse;\n        }\n        try {\n            const raw = window.sessionStorage.getItem(key);\n            return raw ? deserializer(raw) : initialValueToUse;\n        } catch (error) {\n            console.warn(\"Error reading sessionStorage key “\".concat(key, \"”:\"), error);\n            return initialValueToUse;\n        }\n    }, [\n        initialValue,\n        key,\n        deserializer\n    ]);\n    const [storedValue, setStoredValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>{\n        if (initializeWithValue) {\n            return readValue();\n        }\n        return initialValue instanceof Function ? initialValue() : initialValue;\n    });\n    const setValue = useEventCallback((value)=>{\n        if (IS_SERVER6) {\n            console.warn(\"Tried setting sessionStorage key “\".concat(key, \"” even though environment is not a client\"));\n        }\n        try {\n            const newValue = value instanceof Function ? value(readValue()) : value;\n            window.sessionStorage.setItem(key, serializer(newValue));\n            setStoredValue(newValue);\n            window.dispatchEvent(new StorageEvent(\"session-storage\", {\n                key\n            }));\n        } catch (error) {\n            console.warn(\"Error setting sessionStorage key “\".concat(key, \"”:\"), error);\n        }\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        setStoredValue(readValue());\n    }, [\n        key\n    ]);\n    const handleStorageChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event)=>{\n        if ((event == null ? void 0 : event.key) && event.key !== key) {\n            return;\n        }\n        setStoredValue(readValue());\n    }, [\n        key,\n        readValue\n    ]);\n    useEventListener(\"storage\", handleStorageChange);\n    useEventListener(\"session-storage\", handleStorageChange);\n    return [\n        storedValue,\n        setValue\n    ];\n}\n_s33(useSessionStorage, \"vJoOY7tbnQcClbXwOlELm2V8Qp4=\", false, function() {\n    return [\n        useEventCallback,\n        useEventListener,\n        useEventListener\n    ];\n});\n// src/useSsr/useSsr.ts\nfunction useSsr() {\n    var _a;\n    const isDOM = // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n     true && !!((_a = window == null ? void 0 : window.document) == null ? void 0 : _a.documentElement);\n    return {\n        isBrowser: isDOM,\n        isServer: !isDOM\n    };\n}\nfunction useStep(maxStep) {\n    _s34();\n    const [currentStep, setCurrentStep] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1);\n    const canGoToNextStep = currentStep + 1 <= maxStep;\n    const canGoToPrevStep = currentStep - 1 > 0;\n    const setStep = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((step)=>{\n        const newStep = step instanceof Function ? step(currentStep) : step;\n        if (newStep >= 1 && newStep <= maxStep) {\n            setCurrentStep(newStep);\n            return;\n        }\n        throw new Error(\"Step not valid\");\n    }, [\n        maxStep,\n        currentStep\n    ]);\n    const goToNextStep = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (canGoToNextStep) {\n            setCurrentStep((step)=>step + 1);\n        }\n    }, [\n        canGoToNextStep\n    ]);\n    const goToPrevStep = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (canGoToPrevStep) {\n            setCurrentStep((step)=>step - 1);\n        }\n    }, [\n        canGoToPrevStep\n    ]);\n    const reset = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setCurrentStep(1);\n    }, []);\n    return [\n        currentStep,\n        {\n            goToNextStep,\n            goToPrevStep,\n            canGoToNextStep,\n            canGoToPrevStep,\n            setStep,\n            reset\n        }\n    ];\n}\n_s34(useStep, \"+TRlwZFsdYnP5rDNmVZnRfOzg24=\");\n// src/useTernaryDarkMode/useTernaryDarkMode.ts\nvar COLOR_SCHEME_QUERY2 = \"(prefers-color-scheme: dark)\";\nvar LOCAL_STORAGE_KEY2 = \"usehooks-ts-ternary-dark-mode\";\nfunction useTernaryDarkMode(options) {\n    _s35();\n    var _ref;\n    const defaultValue = typeof options === \"string\" ? \"system\" : (_ref = options == null ? void 0 : options.defaultValue) !== null && _ref !== void 0 ? _ref : \"system\";\n    var _ref1;\n    const localStorageKey = typeof options === \"string\" ? options : (_ref1 = options == null ? void 0 : options.localStorageKey) !== null && _ref1 !== void 0 ? _ref1 : LOCAL_STORAGE_KEY2;\n    var _ref2;\n    const initializeWithValue = typeof options === \"string\" ? void 0 : (_ref2 = options == null ? void 0 : options.initializeWithValue) !== null && _ref2 !== void 0 ? _ref2 : void 0;\n    const isDarkOS = useMediaQuery(COLOR_SCHEME_QUERY2, {\n        initializeWithValue\n    });\n    const [mode, setMode] = useLocalStorage(localStorageKey, defaultValue, {\n        initializeWithValue\n    });\n    const isDarkMode = mode === \"dark\" || mode === \"system\" && isDarkOS;\n    const toggleTernaryDarkMode = ()=>{\n        const modes = [\n            \"light\",\n            \"system\",\n            \"dark\"\n        ];\n        setMode((prevMode)=>{\n            const nextIndex = (modes.indexOf(prevMode) + 1) % modes.length;\n            return modes[nextIndex];\n        });\n    };\n    return {\n        isDarkMode,\n        ternaryDarkMode: mode,\n        setTernaryDarkMode: setMode,\n        toggleTernaryDarkMode\n    };\n}\n_s35(useTernaryDarkMode, \"mwY+Td+ovVJIzS29Hw2AaYo+bsc=\", false, function() {\n    return [\n        useMediaQuery,\n        useLocalStorage\n    ];\n});\nfunction useTimeout(callback, delay) {\n    _s36();\n    const savedCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);\n    useIsomorphicLayoutEffect(()=>{\n        savedCallback.current = callback;\n    }, [\n        callback\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!delay && delay !== 0) {\n            return;\n        }\n        const id = setTimeout(()=>{\n            savedCallback.current();\n        }, delay);\n        return ()=>{\n            clearTimeout(id);\n        };\n    }, [\n        delay\n    ]);\n}\n_s36(useTimeout, \"WBUCExu9SQBAR3feS5Ac+l+OA+M=\", false, function() {\n    return [\n        useIsomorphicLayoutEffect\n    ];\n});\nfunction useToggle(defaultValue) {\n    _s37();\n    const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!!defaultValue);\n    const toggle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setValue((x)=>!x);\n    }, []);\n    return [\n        value,\n        toggle,\n        setValue\n    ];\n}\n_s37(useToggle, \"hnlyAKsPGmnz7qwiudJSdu/eIDU=\");\nfunction useUpdateEffect(effect, deps) {\n    _s38();\n    const isFirst = useIsFirstRender();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!isFirst) {\n            return effect();\n        }\n    }, deps);\n}\n_s38(useUpdateEffect, \"h1g9NQ0ivswz8Q9bGanIfiXsG9M=\", false, function() {\n    return [\n        useIsFirstRender\n    ];\n});\nvar IS_SERVER7 = \"object\" === \"undefined\";\nfunction useWindowSize() {\n    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    _s39();\n    let { initializeWithValue = true } = options;\n    if (IS_SERVER7) {\n        initializeWithValue = false;\n    }\n    const [windowSize, setWindowSize] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>{\n        if (initializeWithValue) {\n            return {\n                width: window.innerWidth,\n                height: window.innerHeight\n            };\n        }\n        return {\n            width: void 0,\n            height: void 0\n        };\n    });\n    const debouncedSetWindowSize = useDebounceCallback(setWindowSize, options == null ? void 0 : options.debounceDelay);\n    function handleSize() {\n        const setSize = (options == null ? void 0 : options.debounceDelay) ? debouncedSetWindowSize : setWindowSize;\n        setSize({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n    }\n    useEventListener(\"resize\", handleSize);\n    useIsomorphicLayoutEffect(()=>{\n        handleSize();\n    }, []);\n    return windowSize;\n}\n_s39(useWindowSize, \"8/u0IuE4ryx+7562fD++ccOUhqI=\", false, function() {\n    return [\n        useDebounceCallback,\n        useEventListener,\n        useIsomorphicLayoutEffect\n    ];\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/usehooks-ts/dist/index.mjs\n"));

/***/ })

});